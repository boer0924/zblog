<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Golang - gofiber-with-casbin授权示例</title>
    <link href="/2024/03/24/golang-gofiber-with-casbin/"/>
    <url>/2024/03/24/golang-gofiber-with-casbin/</url>
    
    <content type="html"><![CDATA[<p>Casbin是一个支持如ACL, RBAC, ABAC等访问模型的的授权库，支持众多语言。</p><p>Fiber is a Go web framework built on top of Fasthttp, the fastest HTTP engine for Go. It’s designed to ease things up for fast development with zero memory allocation and performance in mind.<br>号称: zero memory allocation</p><p>model.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs conf">[request_definition]<br>r = sub, obj, act<br><br>[policy_definition]<br>p = sub, obj, act<br><br>[role_definition]<br>g = _, _<br><br>[policy_effect]<br>e = some(where (p.eft == allow))<br><br>[matchers]<br>m = g(r.sub, p.sub) &amp;&amp; keyMatch2(r.obj, p.obj) &amp;&amp; regexMatch(r.act, p.act)<br></code></pre></td></tr></table></figure><p>policy.csv</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle">p,admin,<span class="hljs-regexp">/api/</span>todos,GET<br>p,admin,<span class="hljs-regexp">/api/</span>todos,POST<br>p,admin,<span class="hljs-regexp">/api/</span>todos/:id,GET<br>p,admin,<span class="hljs-regexp">/api/</span>todos/:id,PUT<br>p,admin,<span class="hljs-regexp">/api/</span>todos/:id,<span class="hljs-keyword">DELETE</span><br>p,viewer,<span class="hljs-regexp">/api/</span>todos,GET<br>p,viewer,<span class="hljs-regexp">/api/</span>todos/:id,GET<br><br>g,boer,admin<br>g,john,viewer<br></code></pre></td></tr></table></figure><p>main.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>  app := fiber.New()<br><br>  authz := casbin.New(casbin.Config&#123;<br>ModelFilePath: <span class="hljs-string">&quot;./model.conf&quot;</span>,<br>PolicyAdapter: fileadapter.NewAdapter(<span class="hljs-string">&quot;./policy.csv&quot;</span>),<br>Lookup:        <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *fiber.Ctx)</span></span> <span class="hljs-type">string</span> &#123; <span class="hljs-keyword">return</span> internalauthn.GetUserName(c) &#125;,<br>Unauthorized: <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *fiber.Ctx)</span></span> <span class="hljs-type">error</span> &#123;<br><span class="hljs-keyword">return</span> c.JSON(fiber.Map&#123;<br><span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;Invalid or expired JWT&quot;</span>,<br><span class="hljs-string">&quot;code&quot;</span>:    fiber.StatusUnauthorized,<br>&#125;)<br>&#125;,<br>Forbidden: <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *fiber.Ctx)</span></span> <span class="hljs-type">error</span> &#123;<br><span class="hljs-keyword">return</span> c.JSON(fiber.Error&#123;<br>Message: <span class="hljs-string">&quot;Forbidden&quot;</span>,<br>Code:    fiber.StatusForbidden,<br>&#125;)<br>&#125;,<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>RBAC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - String/Bytes/Rune(字节-字符)</title>
    <link href="/2023/05/08/golang-string/"/>
    <url>/2023/05/08/golang-string/</url>
    
    <content type="html"><![CDATA[<p>In Go, a string is in effect a read-only slice of bytes. </p><span id="more"></span><h2 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h2><h3 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h3><p>ASCII（American Standard Code for Information Interchange）是一种早期的字符编码标准，它最多只能支持128个字符，包括英文字母、数字、标点符号和一些控制字符。ASCII编码中，每个字符都对应一个7位或8位的二进制码。</p><h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><p>Unicode是ASCII的后继者，它旨在支持世界上所有的文字。Unicode编码中，每个字符都对应一个唯一的码位（code point），即一个数字标识。Unicode编码可以支持超过10万个字符，包括各种语言的字母、符号、表意文字等。</p><hr><p>ASCII只能支持有限的字符，而Unicode则能够支持更广泛的字符。在编码方式上，ASCII采用固定长度的编码，每个字符都对应一个7位或8位的二进制码，而Unicode则采用可变长度的编码，例如UTF-8、UTF-16和UTF-32等，每个字符的编码长度可以不同。</p><p>ASCII是Unicode的一个子集。Unicode的前128个码位与ASCII的编码完全相同，因此ASCII编码的文本可以直接在Unicode编码中使用，而不需要进行转换。</p><hr><h3 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h3><p>UTF-8是一种Unicode编码方案，它使用可变长度的字节序列来表示Unicode字符。UTF-8的优点在于，它与ASCII兼容，并且可以有效地编码常见的字符。在UTF-8中，一个字符可以被编码为1到4个字节。Unicode编码还有其他的实现方式，例如UTF-16和UTF-32等。这些实现方式在编码方式和存储空间的利用上有所不同，适用于不同的场景和应用。</p><h3 id="Rune"><a href="#Rune" class="headerlink" title="Rune"></a>Rune</h3><p>rune是Go语言中的一个字符类型，它表示一个Unicode码位。在Go语言中，rune类型的变量可以存储任何一个Unicode字符。</p><h3 id="Characters"><a href="#Characters" class="headerlink" title="Characters"></a>Characters</h3><p>characters字符是人类使用的可视化符号，例如字母、数字、标点符号等。在UTF-8编码中，一个字符可以被编码为1到4个字节。【等同于Rune, for-Human】</p><h3 id="Bytes"><a href="#Bytes" class="headerlink" title="Bytes"></a>Bytes</h3><p>bytes字节是计算机存储和处理信息的基本单位。在UTF-8编码中，一个字节表示8位二进制数据。</p><hr><p>Code points, characters, and runes<br>到目前为止，我们在使用 “字节 “和 “字符 “这两个词时一直非常谨慎。这一方面是因为字符串包含字节，另一方面是因为 “字符 “这个概念有点难以定义。Unicode 标准使用 “码位 “一词来指单个值所代表的项目。代码点 U+2318，十六进制值为 2318，代表符号 ⌘ 。</p><blockquote><p>We’ve been very careful so far in how we use the words “byte” and “character”. That’s partly because strings hold bytes, and partly because the idea of “character” is a little hard to define. The Unicode standard uses the term “code point” to refer to the item represented by a single value. The code point U+2318, with hexadecimal value 2318, represents the symbol ⌘. </p></blockquote><h2 id="跟着GPT理解String"><a href="#跟着GPT理解String" class="headerlink" title="跟着GPT理解String"></a>跟着GPT理解String</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Test_String</span><span class="hljs-params">(t *testing.T)</span></span> &#123;<br><span class="hljs-comment">// 定义一个UTF-8编码的字符串</span><br>s := <span class="hljs-string">&quot;Hello, 世界&quot;</span><br><br><span class="hljs-comment">// 输出字符数</span><br>t.Logf(<span class="hljs-string">&quot;Number of characters/runes: %d\n&quot;</span>, utf8.RuneCountInString(s)) <span class="hljs-comment">// 9</span><br><span class="hljs-comment">// 输出字节数</span><br>t.Logf(<span class="hljs-string">&quot;Number of bytes: %d\n&quot;</span>, <span class="hljs-built_in">len</span>(s)) <span class="hljs-comment">// 13</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Q1-utf8-RuneCountInString-“Hello-世界”-为什么等于9"><a href="#Q1-utf8-RuneCountInString-“Hello-世界”-为什么等于9" class="headerlink" title="Q1. utf8.RuneCountInString(“Hello, 世界”)为什么等于9"></a>Q1. utf8.RuneCountInString(“Hello, 世界”)为什么等于9</h3><p>utf8.RuneCountInString(“Hello, 世界”) 等于 9 的原因是字符串中的字符（rune）总数为 9。我们可以逐个分析字符串中的每个字符来解释这个结果。</p><p>首先，我们明确什么是字符（rune）。在 Go 语言中，rune 表示一个 Unicode 码点。因此，每个字符（无论是 ASCII 字符还是非 ASCII 字符）都被看作一个 rune。</p><p>让我们逐个字符来看：</p><ol><li>H</li><li>e</li><li>l</li><li>l</li><li>o</li><li>,（逗号）</li><li>（空格）</li><li>世（汉字）</li><li>界（汉字）</li></ol><p>总共有 9 个字符（rune），因此 utf8.RuneCountInString(“Hello, 世界”) 返回 9 是正确的。</p><h3 id="Q2-len-“Hello-世界”-为什么等于13"><a href="#Q2-len-“Hello-世界”-为什么等于13" class="headerlink" title="Q2. len(“Hello, 世界”)为什么等于13"></a>Q2. len(“Hello, 世界”)为什么等于13</h3><p>len(“Hello, 世界”) 等于 13 是因为 len 函数返回的是字符串的字节长度，而不是字符（rune）的数量。</p><p>在 UTF-8 编码中，不同的字符会占用不同数量的字节：</p><p>ASCII 字符（如 “Hello, “ 中的字符）每个占用 1 个字节。<br>非 ASCII 字符（如 “世界” 中的汉字）每个通常占用 3 个字节。<br>我们可以逐个字符来看 Hello, 世界 中每个字符占用的字节数：</p><ol><li>H        占 1 个字节</li><li>e        占 1 个字节</li><li>l        占 1 个字节</li><li>l        占 1 个字节</li><li>o        占 1 个字节</li><li>,        占 1 个字节</li><li>（空格）  占 1 个字节</li><li>世       占 3 个字节</li><li>界       占 3 个字节<br>将这些字节数相加：</li></ol><p>1 + 1 + 1 + 1 + 1 + 1 + 1 + 3 + 3 = 13</p><p>因此，len(“Hello, 世界”) 返回 13，因为这个字符串在 UTF-8 编码下的总字节数是 13。</p><h3 id="Q3-当我在第-n-个位置对Go字符串进行索引时，为什么得不到第-n-个字符？"><a href="#Q3-当我在第-n-个位置对Go字符串进行索引时，为什么得不到第-n-个字符？" class="headerlink" title="Q3. 当我在第 n 个位置对Go字符串进行索引时，为什么得不到第 n 个字符？"></a>Q3. 当我在第 n 个位置对Go字符串进行索引时，为什么得不到第 n 个字符？</h3><blockquote><p>“When I index a Go string at position n, why don’t I get the nth character?”</p></blockquote><p>在 Go 语言中，当你对字符串进行索引时，你得到的是第 n 个字节而不是第 n 个字符（rune）。这是因为 Go 的字符串是以 UTF-8 编码的字节序列来存储的，而在 UTF-8 编码中，一个字符（rune）可以占用 1 到 4 个字节。</p><p>因此，直接使用索引操作符 (s[i]) 会给你第 i 个字节，而不是第 i 个字符。如果字符串包含非 ASCII 字符，这些字符会占用多个字节，所以简单的索引不能正确地访问这些字符。<br>如果你希望按字符（rune）进行索引，可以将字符串转换为 rune 切片，因为在 rune 切片中，每个元素都是一个字符（rune）。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go">s := <span class="hljs-string">&quot;Hello, 世界&quot;</span><br>r := []<span class="hljs-type">rune</span>(s)<br><br><span class="hljs-comment">// 按字符（rune）进行索引</span><br>fmt.Printf(<span class="hljs-string">&quot;第 1 个字符: %c\n&quot;</span>, r[<span class="hljs-number">0</span>]) <span class="hljs-comment">// 输出 H</span><br>fmt.Printf(<span class="hljs-string">&quot;第 8 个字符: %c\n&quot;</span>, r[<span class="hljs-number">7</span>]) <span class="hljs-comment">// 输出 世</span><br></code></pre></td></tr></table></figure><h3 id="Q4-for-range-“Hello-世界”得到什么，为什么？"><a href="#Q4-for-range-“Hello-世界”得到什么，为什么？" class="headerlink" title="Q4. for range “Hello, 世界”得到什么，为什么？"></a>Q4. for range “Hello, 世界”得到什么，为什么？</h3><p>在 Go 语言中，使用 for range 循环遍历字符串时，它会按照字符（rune）进行遍历，而不是字节。这是因为 for range 会自动解码 UTF-8 字符串，并返回每个字符的 Unicode 码点和其在字符串中的起始字节位置。</p><p>让我们分析一下字符串 “Hello, 世界”：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs go">s := <span class="hljs-string">&quot;Hello, 世界&quot;</span><br><span class="hljs-keyword">for</span> i, c := <span class="hljs-keyword">range</span> s &#123;<br>    fmt.Printf(<span class="hljs-string">&quot;位置: %d, 字符: %c, Unicode: %U\n&quot;</span>, i, c, c)<br>&#125;<br><br><span class="hljs-comment">// 位置: 0, 字符: H, Unicode: U+0048</span><br><span class="hljs-comment">// 位置: 1, 字符: e, Unicode: U+0065</span><br><span class="hljs-comment">// 位置: 2, 字符: l, Unicode: U+006C</span><br><span class="hljs-comment">// 位置: 3, 字符: l, Unicode: U+006C</span><br><span class="hljs-comment">// 位置: 4, 字符: o, Unicode: U+006F</span><br><span class="hljs-comment">// 位置: 5, 字符: ,, Unicode: U+002C</span><br><span class="hljs-comment">// 位置: 6, 字符:  , Unicode: U+0020</span><br><span class="hljs-comment">// 位置: 7, 字符: 世, Unicode: U+4E16</span><br><span class="hljs-comment">// 位置: 10, 字符: 界, Unicode: U+754C</span><br></code></pre></td></tr></table></figure><p>分析这段输出：</p><p>对于 H、e、l、l、o、,、 ，每个字符都是一个 ASCII 字符，占用 1 个字节，位置是 0 到 6。<br>对于 世 和 界，每个字符是一个汉字，占用 3 个字节。世 开始于字节位置 7，界 开始于字节位置 10。<br>因此，for range 循环遍历字符串 “Hello, 世界” 时，它会：</p><p>按顺序返回每个字符的 Unicode 码点（rune）。<br>返回该字符在字符串中的起始字节位置。<br>这样可以正确处理多字节的 UTF-8 编码字符，而不仅仅是单字节的 ASCII 字符。</p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><p><strong>Avoid Using ‘len’ for String Length</strong> </p><p>Calculating the length of a string using the built-in ‘len’ function can be problematic when working with runes, as it counts bytes, not characters. Instead, use the ‘utf8.RuneCountInString’ function to count runes correctly.</p><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ol><li><a href="https://go.dev/blog/strings">https://go.dev/blog/strings</a></li><li><a href="https://medium.com/@golangda/golang-quick-reference-runes-2f3f117987a6">https://medium.com/@golangda/golang-quick-reference-runes-2f3f117987a6</a></li><li><a href="https://www.ascii-code.com/">https://www.ascii-code.com</a></li><li><a href="https://home.unicode.org/">https://home.unicode.org</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Go</tag>
      
      <tag>String</tag>
      
      <tag>ASCII</tag>
      
      <tag>Unicode</tag>
      
      <tag>UTF-8</tag>
      
      <tag>Rune</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Go语言中的嵌入【第三部分】：接口嵌入结构体</title>
    <link href="/2023/03/15/golang-interfaces-in-structs/"/>
    <url>/2023/03/15/golang-interfaces-in-structs/</url>
    
    <content type="html"><![CDATA[<p>Go 语言并不支持传统意义上的继承，相反，它提倡通过组合来扩展类型的功能。这并不是 Go 所特有的概念，继承之上的组合是 OOP 的一个众所周知的原则，在《设计模式》一书的第一章就有介绍。Embedding(嵌入)是 Go 语言一个重要的特性，有了它使得组合更加方便、更有用。虽然 Go 力求简单，但某种程度上嵌入增加了语言的复杂度，如果使用不当会导致 bug 出现。在这一系列文章中，我将介绍 Go 支持的不同种类的嵌入，并提供真实的代码示例(大部分来自 Go 语言的标准库)。</p><span id="more"></span><p>这篇文章是介绍 Go 语言支持的各种嵌入方式的系列文章的第三部分：</p><ul><li>结构体嵌入结构体<a href="/2023/03/15/golang-structs-in-structs/">(第一部分)</a>；</li><li>接口嵌入接口<a href="/2023/03/15/golang-interfaces-in-interfaces/">(第二部分)</a>；</li><li>接口嵌入结构体<a href="/2023/03/15/golang-interfaces-in-structs/">(第三部分)</a>；</li></ul><h3 id="结构体中嵌入接口"><a href="#结构体中嵌入接口" class="headerlink" title="结构体中嵌入接口"></a>结构体中嵌入接口</h3><p>第一眼看上去，这是 Go 语言支持的最令人困惑的嵌入方式。我们并不能立马知道结构体中嵌入接口意味着什么。在这篇文章中，我们将慢慢研究该技术点，并介绍几个实际场景中的例子。文章看完之后，你会看到底层的机制其实很简单，而且这个功能在各种场景中非常有用。</p><p>我们先从一个简单的例子开始：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">Fooer</span> interface &#123;<br>  <span class="hljs-type">Foo</span>() string<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">Container</span> struct &#123;<br>  <span class="hljs-type">Fooer</span><br>&#125;<br></code></pre></td></tr></table></figure><p>Fooer 是一个接口，被嵌入到结构体 Container 中。回顾下第一篇文章，我们知道嵌入的结构体会自动获得被嵌入结构体的方法。对于接口来说，也是同样的道理。我们可以这样认为，结构体 Container 有这样一个转发的方法：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">func</span> <span class="hljs-params">(cont Container)</span> <span class="hljs-title function_">Foo</span><span class="hljs-params">()</span> <span class="hljs-title function_">string</span> &#123;<br>  <span class="hljs-keyword">return</span> cont.Fooer.Foo()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>但是这里的 cont.Fooer 指的是什么呢？它是任何实现了 Fooer 接口的对象。那这个对象从哪里来呢？当初始化 Container 时，分配给 Fooer 字段的。看下这个例子：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// sink takes a value implementing the Fooer interface.</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">sink</span><span class="hljs-params">(f Fooer)</span></span> &#123;<br>  fmt.Println(<span class="hljs-string">&quot;sink:&quot;</span>, f.Foo())<br>&#125;<br><span class="hljs-comment">// TheRealFoo is a type that implements the Fooer interface.</span><br><span class="hljs-keyword">type</span> TheRealFoo <span class="hljs-keyword">struct</span> &#123;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(trf TheRealFoo)</span></span> Foo() <span class="hljs-type">string</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;TheRealFoo Foo&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>现在我们可以这样操作：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">co := Container&#123;Fooer: TheRealFoo&#123;&#125;&#125;<br><span class="hljs-function"><span class="hljs-title">sink</span><span class="hljs-params">(co)</span></span><br><br></code></pre></td></tr></table></figure><p>执行程序将会输出：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">sink:</span> TheRealFoo Foo.<br><br></code></pre></td></tr></table></figure><p>发生了什么，这里的机制是怎么样的？注意看，Container 是怎样被初始化的，字段 Fooer 被赋了一个 TheRealFoo 类型的值。我们可以将任何实现了 Fooer 接口的类型的值赋值给 Fooer，其他类型的值的话会编译不通过。因为 Fooer 接口嵌入到 Container，所以 Container 自动获得了 TheRealFoo 的方法，这使得 Container 也实现了接口 Fooer。这就是为什么可以将 Container 的值传递给 sink。如果没有嵌入，sink(co) 将会编译报错，因为 co 没有实现 Fooer。</p><p>可能你会好奇假设 Container 结构体的 Fooer 字段没有被初始化会发生什么？这是个很好的问题。如果是这样的话，会出现的情况可能和你预想的差不多，字段 Fooer 的默认值是 nil，看下面的代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">co := Container&#123;&#125;<br><span class="hljs-function"><span class="hljs-title">sink</span><span class="hljs-params">(co)</span></span><br><br></code></pre></td></tr></table></figure><p>将会报错：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs go">runtime <span class="hljs-type">error</span>: invalid memory address or <span class="hljs-literal">nil</span> pointer dereference<br><br></code></pre></td></tr></table></figure><p>上面介绍了接口嵌入结构体的工作机制，现在有一个更重要的问题：我们为什么需要怎么做？下面我将介绍介个来自 Go 语言标准库的例子，但是我会先介绍一个其他示例，并展示这个知识点在日常编写客户端代码的重要用途。</p><h3 id="示例：接口包装器"><a href="#示例：接口包装器" class="headerlink" title="示例：接口包装器"></a>示例：接口包装器</h3><p>这个例子来自 GitHub 用户 valyala，摘自评论[1]。</p><p>假设我们想给一个 socket 连接添加一些额外的功能，比如计算读取的字节数，我们可以定义如下的结构：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">StatsConn</span> struct &#123;<br>  net.<span class="hljs-type">Conn</span><br>  <span class="hljs-type">BytesRead</span> uint64<br>&#125;<br></code></pre></td></tr></table></figure><p>StatsConn 实现了接口 net.Conn，所以它可以在任何需要 net.Conn 的地方使用。我们可以使用实现了 net.Conn 接口的类型的任何值来初始化 StatsConn，它会“继承”该类型的所有方法，关键是，我们可以重新实现自己想要的方法。就比如这个例子，我们重新实现了 Read 方法，记录读取的字节数：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">func (<span class="hljs-keyword">sc</span> *StatsConn) <span class="hljs-keyword">Read</span>(p []byte) (int, <span class="hljs-keyword">error</span>) &#123;<br>  <span class="hljs-keyword">n</span>, <span class="hljs-keyword">err</span> := <span class="hljs-keyword">sc</span>.Conn.<span class="hljs-keyword">Read</span>(p)<br>  <span class="hljs-keyword">sc</span>.BytesRead += uint64(<span class="hljs-keyword">n</span>)<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">n</span>, <span class="hljs-keyword">err</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>对 StatsConn 的使用者来说，我们仍然可以在这个方法中调用 sc.Conn.Read() 方法，也可以做一些额外的工作，比如将记录读取的字节数。</p><p>从上一节我们知道，正确地初始化 StatsConn 就至关重要，比如：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">conn, <span class="hljs-keyword">err</span> := <span class="hljs-keyword">net</span>.Dial(<span class="hljs-string">&quot;tcp&quot;</span>, <span class="hljs-keyword">u</span>.Host+<span class="hljs-string">&quot;:80&quot;</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">err</span> != nil &#123;<br>  <span class="hljs-keyword">log</span>.Fatal(<span class="hljs-keyword">err</span>)<br>&#125;<br>sconn := &amp;StatsConn&#123;conn, 0&#125;<br><br></code></pre></td></tr></table></figure><p>上面的代码中 net.Dial 的返回值实现了接口 net.Conn，所以我们可以用它来初始化 StatsConn。</p><p>我们可以将变量 sconn 传递给参数是 net.Conn 的任何函数，比如：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">resp, <span class="hljs-keyword">err</span> := ioutil.ReadAll(sconn)<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">err</span> != nil &#123;<br>  <span class="hljs-keyword">log</span>.Fatal(<span class="hljs-keyword">err</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这样的话，接着我们可以访问 BytesRead 字段获取读取的字节数。</p><p>这是一个接口包装器的例子。我们创建了一个新的类型，实现了一个现有的接口，但重新使用了一个嵌入的值来实现了大部分的功能。我们也可以通过一个显示的 conn 字段来实现这一点，就像下面这样：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">StatsConn</span> struct &#123;<br>  conn net.<span class="hljs-type">Conn</span><br>  <span class="hljs-type">BytesRead</span> uint64<br>&#125;<br></code></pre></td></tr></table></figure><p>然后为 net.Conn 接口中的每个方法编写转发方法，例如：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">func (<span class="hljs-keyword">sc</span> *StatsConn) <span class="hljs-keyword">Close</span>() <span class="hljs-keyword">error</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">sc</span>.conn.<span class="hljs-keyword">Close</span>()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>但是 ner.Conn 接口有 8 个方法，给所有这些方法写转发方法是乏味且没有必要的。嵌入接口可以避免这点，我们只需要重写想要实现的那些方法即可。</p><h3 id="示例：sort-Reverse"><a href="#示例：sort-Reverse" class="headerlink" title="示例：sort.Reverse"></a>示例：sort.Reverse</h3><p>接口嵌入结构体在 Go 语言标准库中的一个经典例子就是 sort.Reverse。它的用法常常让刚学习 Go 语言的新手感到困惑，因为根本不清楚它是机制是怎样的。</p><p>我们先从一个简单的排序例子开始，对整型的切片排序：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">lst := []<span class="hljs-keyword">int</span>&#123;<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>&#125;<br><span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Sort</span>(<span class="hljs-keyword">sort</span>.IntSlice(lst))<br>fmt.<span class="hljs-keyword">Println</span>(lst)<br><br></code></pre></td></tr></table></figure><p>输出 [1 2 3 4 5 8 9]。这段代码的实现原理是怎样的呢？sort.Sort() 函数接收一个实现 sort.Interface 接口的参数，该接口定义如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">type</span> Interface interface &#123;<br>    <span class="hljs-comment">// Len is the number of elements in the collection.</span><br>    <span class="hljs-constructor">Len()</span> <span class="hljs-built_in">int</span><br>    <span class="hljs-comment">// Less reports whether the element with</span><br>    <span class="hljs-comment">// index i should sort before the element with index j.</span><br>    <span class="hljs-constructor">Less(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> <span class="hljs-params">int</span>)</span> <span class="hljs-built_in">bool</span><br>    <span class="hljs-comment">// Swap swaps the elements with indexes i and j.</span><br>    <span class="hljs-constructor">Swap(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> <span class="hljs-params">int</span>)</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>如果我们有一个想要使用 sort.Sort() 来排序的类型，那该类型就必须实现该接口。对于像整型切片这样的简单类型，标准库提供了类型转换 sort.IntSlice，该类型是实现了接口 sort.Interface，所以上面那段代码可以执行。</p><p>那 sort.Reverse 的工作机制是怎样的呢？它通过巧妙地将接口嵌入结构体，sort 包有一个的未导出的类型来实现这点：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">type</span> reverse <span class="hljs-keyword">struct</span> &#123;<br>  sort.Interface<br>&#125;<br>func (r reverse) <span class="hljs-constructor">Less(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> <span class="hljs-params">int</span>)</span> <span class="hljs-built_in">bool</span> &#123;<br>  return r.Interface.<span class="hljs-constructor">Less(<span class="hljs-params">j</span>, <span class="hljs-params">i</span>)</span><br>&#125;<br></code></pre></td></tr></table></figure><p>到这里应该很好理解了，reverse 通过嵌入的方式实现了接口 sort.Interface (前提是用一个已经实现接口 sort.Interface 的类型的值初始化)，它重写了其中一个方法 – Less()。在 Less() 方法里，将参数调换顺序，然后调用了 sort.Interface 的 Less() 方法，实现参数的反转。</p><p>实现参数反转的 sort.Reverse 也很简单：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">func <span class="hljs-keyword">Reverse</span>(data <span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Interface</span>) <span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Interface</span> &#123;<br>  <span class="hljs-keyword">return</span> &amp;<span class="hljs-keyword">reverse</span>&#123;data&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>所以我们可以这样做：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Sort</span>(<span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Reverse</span>(<span class="hljs-keyword">sort</span>.IntSlice(lst)))<br>fmt.<span class="hljs-keyword">Println</span>(lst)<br><br></code></pre></td></tr></table></figure><p>程序输出：[9 8 5 4 3 2 1]</p><p>这里需要理解的关键点是，调用 sort.Reverse 函数本身不会执行排序或者反转的操作，它其实可以看做是一个高阶函数：包装了一个接口类型的值并且在 Less() 方法里调整了功能，实际的排序操作发生在调用 sort.Sort 的时候。</p><h3 id="示例：context-WithValue"><a href="#示例：context-WithValue" class="headerlink" title="示例：context.WithValue"></a>示例：context.WithValue</h3><p>context 包里有一个 WithValue 函数：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">func <span class="hljs-constructor">WithValue(<span class="hljs-params">parent</span> Context, <span class="hljs-params">key</span>, <span class="hljs-params">val</span> <span class="hljs-params">interface</span>&#123;&#125;)</span> Context<br><br></code></pre></td></tr></table></figure><p>该函数返回一个父 context 的备份，并携带键值对 key-val。我们一起来看下底层机制是怎样的。</p><p>忽略错误检查，WithValue 主要代码如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">func <span class="hljs-constructor">WithValue(<span class="hljs-params">parent</span> Context, <span class="hljs-params">key</span>, <span class="hljs-params">val</span> <span class="hljs-params">interface</span>&#123;&#125;)</span> Context &#123;<br>  return &amp;valueCtx&#123;parent, key, <span class="hljs-keyword">val</span>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>valueCtx 结构体如下：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> valueCtx struct &#123;<br>  <span class="hljs-type">Context</span><br>  key, val interface&#123;&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>看，这又是一个接口嵌入结构体的例子。valueCtx 实现了 Context 接口，可以重写其中的方法，实际上它只重写了 Value():</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">func (c *valueCtx) Value(key <span class="hljs-keyword">interface</span>&#123;&#125;) <span class="hljs-keyword">interface</span>&#123;&#125; &#123;<br>  <span class="hljs-keyword">if</span> c.key == key &#123;<br>    <span class="hljs-keyword">return</span> c.<span class="hljs-keyword">val</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> c.Context.Value(key)<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="示例：使用受限制的接口降低结构体的功能"><a href="#示例：使用受限制的接口降低结构体的功能" class="headerlink" title="示例：使用受限制的接口降低结构体的功能"></a>示例：使用受限制的接口降低结构体的功能</h3><p>这是个有点进阶的知识点，但是在标准库的很多地方都有使用。尽管这样，我也不认为在编写代码时需要普遍使用，所以如果你刚入门 Go 语言，可以不用接着往下看，不用太担心。当你积累了更多 Go 语言方面的经验再来看也不迟。</p><p>我们先来看下 io.ReaderFrom 接口：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">ReaderFrom</span> interface &#123;<br>    <span class="hljs-type">ReadFrom</span>(r <span class="hljs-type">Reader</span>) (n int64, err error)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>实现了这个接口的类型可以从 io.Reader 读取数据。例如，<code>*os.File</code>类型实现了该接口，可以从 io.Reader 读取数据并存放在打开的文件里。我们看下是怎么实现的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(f *File)</span></span> ReadFrom(r io.Reader) (n <span class="hljs-type">int64</span>, err <span class="hljs-type">error</span>) &#123;<br>  <span class="hljs-keyword">if</span> err := f.checkValid(<span class="hljs-string">&quot;write&quot;</span>); err != <span class="hljs-literal">nil</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>, err<br>  &#125;<br>  n, handled, e := f.readFrom(r)<br>  <span class="hljs-keyword">if</span> !handled &#123;<br>    <span class="hljs-keyword">return</span> genericReadFrom(f, r)<br>  &#125;<br>  <span class="hljs-keyword">return</span> n, f.wrapErr(<span class="hljs-string">&quot;write&quot;</span>, e)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>首先尝试使用 readFrom 方法从 r 读取数据，底层与操作系统相关。例如，在 Linux 上，它使用 copy_file_range 系统调用在两个文件之间进行非常快速的复制，直接在内核中进行。</p><p>readFrom 会返回 bool 值(handled)，表示读取是否成功。如果不成功，ReadFrom 会调用 genericReadFrom 函数，如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">func generic<span class="hljs-constructor">ReadFrom(<span class="hljs-params">f</span> <span class="hljs-operator">*</span>File, <span class="hljs-params">r</span> <span class="hljs-params">io</span>.Reader)</span> (<span class="hljs-built_in">int64</span>, error) &#123;<br>  return io.<span class="hljs-constructor">Copy(<span class="hljs-params">onlyWriter</span>&#123;<span class="hljs-params">f</span>&#125;, <span class="hljs-params">r</span>)</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>它使用 io.Copy 从 r 复制到 f，到目前为止看起来还不错。但是 f 为什么要使用 onlyWriter 包装下呢？</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> onlyWriter struct &#123;<br>  io.<span class="hljs-type">Writer</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>有趣吧，这就是我们熟悉的接口嵌入结构体。但是找遍整个文件，没有看到 onlyWriter 定义任何方法，也就是说没实现任何功能。为什么会这样呢？</p><p>要理解问什么，我们需要看看 io.Copy 的代码，它的代码有点长就不贴出来了。但是关键点要注意到如果 dst 参数实现了接口 io.ReaderFrom，它就会调用 ReadFrom，这样就回到了刚才调用 genericReadFrom 地方，这就形成了循环调用了！</p><p>现在，为什么需要 onlyWriter 变得很好理解了。将 f 包装起来作为参数调用 io.Copy，该参数的类型(即 onlyWriter)没有实现接口 io.ReaderFrom，但是实现了 io.Writer 接口，所以，它会去调用 File 的 Write 方法，这样就避免了 ReadFrom 的无限循环调用。</p><p>正如我之前提到过的，这种使用方法比较高级。我觉得有必要强调一下，因为这实际上是一种不同寻常的用法，而且在整个标准库中普遍使用。</p><p>这里有一点还比较好，显式地命名了 onlyWriter 类型，有助于我们理解它是干什么的。标准库中的一些代码是直接使用匿名结构体的，比如在 tar 包里面：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">io.<span class="hljs-constructor">Copy(<span class="hljs-params">struct</span>&#123; <span class="hljs-params">io</span>.Writer &#125;&#123;<span class="hljs-params">sw</span>&#125;, <span class="hljs-params">r</span>)</span><br><br></code></pre></td></tr></table></figure><blockquote><p>via: <a href="https://eli.thegreenplace.net/2020/embedding-in-go-part-3-interfaces-in-structs/">https://eli.thegreenplace.net/2020/embedding-in-go-part-3-interfaces-in-structs/</a><br>作者：Eli Bendersky  </p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>[1] 评论: <a href="https://github.com/golang/go/issues/22013#issuecomment-331886875">https://github.com/golang/go/issues/22013#issuecomment-331886875</a></p>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Go语言中的嵌入【第二部分】：接口嵌入接口</title>
    <link href="/2023/03/15/golang-interfaces-in-interfaces/"/>
    <url>/2023/03/15/golang-interfaces-in-interfaces/</url>
    
    <content type="html"><![CDATA[<p>Go 语言并不支持传统意义上的继承，相反，它提倡通过组合来扩展类型的功能。这并不是 Go 所特有的概念，继承之上的组合是 OOP 的一个众所周知的原则，在《设计模式》一书的第一章就有介绍。Embedding(嵌入)是 Go 语言一个重要的特性，有了它使得组合更加方便、更有用。虽然 Go 力求简单，但某种程度上嵌入增加了语言的复杂度，如果使用不当会导致 bug 出现。在这一系列文章中，我将介绍 Go 支持的不同种类的嵌入，并提供真实的代码示例(大部分来自 Go 语言的标准库)。</p><span id="more"></span><p>这篇文章是介绍 Go 语言支持的各种嵌入方式的系列文章的第二部分：</p><ul><li>结构体嵌入结构体<a href="/2023/03/15/golang-structs-in-structs/">(第一部分)</a>；</li><li>接口嵌入接口<a href="/2023/03/15/golang-interfaces-in-interfaces/">(第二部分)</a>；</li><li>接口嵌入结构体<a href="/2023/03/15/golang-interfaces-in-structs/">(第三部分)</a>；</li></ul><h3 id="接口嵌入接口"><a href="#接口嵌入接口" class="headerlink" title="接口嵌入接口"></a>接口嵌入接口</h3><p>在一个接口里面嵌入另一个接口，是 Go 语言里最简单的一种嵌入方式，因为接口只定义了抽象能力，并没有为类型定义新的数据和行为。</p><p>我们先看 Effective Go[1] 里列的示例，一个众所周知的 Go 标准库中嵌入接口的示例，给出 io.Reader 和 io.Writer 接口:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> Reader <span class="hljs-keyword">interface</span> &#123;<br>    Read(p []<span class="hljs-type">byte</span>) (n <span class="hljs-type">int</span>, err <span class="hljs-type">error</span>)<br>&#125;<br><span class="hljs-keyword">type</span> Writer <span class="hljs-keyword">interface</span> &#123;<br>    Write(p []<span class="hljs-type">byte</span>) (n <span class="hljs-type">int</span>, err <span class="hljs-type">error</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>那该如何定义个接口，它既是 reader 又是 writer 呢？一种常见的方法像下面这样做：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">type</span> ReadWriter interface &#123;<br>    <span class="hljs-constructor">Read(<span class="hljs-params">p</span> []<span class="hljs-params">byte</span>)</span> (n <span class="hljs-built_in">int</span>, err error)<br>    <span class="hljs-constructor">Write(<span class="hljs-params">p</span> []<span class="hljs-params">byte</span>)</span> (n <span class="hljs-built_in">int</span>, err error)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>除了在多个地方重复声明相同的方法，这一明显的问题之外，这种方式还降低了 ReadWriter 的可读性，因为它并没有利用组合的方式使得代码更简洁。</p><p>注意，Go 标准库中有很多类似这样的接口组合，比如：io.ReadCloser、io.WriteCloser、io.ReadWriteCloser、io.ReadSeeker、io.WriteSeeker、io.ReadWriteSeeker，其他包里面还有很多类似接口。</p><p>如果这些接口 Read 方法都重新声明的话，那恐怕得声明 10 次以上，这是很糟糕的，所幸的是接口组合可以完美地解决这个问题：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">ReadWriter</span> interface &#123;<br>  <span class="hljs-type">Reader</span><br>  <span class="hljs-type">Writer</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>除了避免重复声明之外，这种方式还有一个特别明显的含义，为了实现 ReadWriter，必须先实现 Reader 和 Writer。</p><h3 id="修复-Go1-14-里面一个接口方法覆盖的-bug"><a href="#修复-Go1-14-里面一个接口方法覆盖的-bug" class="headerlink" title="修复 Go1.14 里面一个接口方法覆盖的 bug"></a>修复 Go1.14 里面一个接口方法覆盖的 bug</h3><p>正如你期望的那样，嵌入接口是可以组合的，例如，给定接口 A、B、C 和 D：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">A</span> interface &#123;<br>  <span class="hljs-type">Amethod</span>()<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">B</span> interface &#123;<br>  <span class="hljs-type">A</span><br>  <span class="hljs-type">Bmethod</span>()<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">C</span> interface &#123;<br>  <span class="hljs-type">Cmethod</span>()<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">D</span> interface &#123;<br>  <span class="hljs-type">B</span><br>  <span class="hljs-type">C</span><br>  <span class="hljs-type">Dmethod</span>()<br>&#125;<br></code></pre></td></tr></table></figure><p>接口 D 的方法结合包括：Amethod()、Bmethod()、Cmethod() 和 Dmethod()。</p><p>然而，接入接口 C 定义成下面这样：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">C</span> interface &#123;<br>  <span class="hljs-type">A</span><br>  <span class="hljs-type">Cmethod</span>()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>按道理来说，这种定义方式不会改变 D 的方法集合。然而，在 Go1.14 版本之前，接口 D 会导致一个错误：“Duplicate method Amethod”，因为 Amethod 方法被重复声明了两次，一次是在接口 B 声明，一次是在接口 C 里声明。</p><p>Go1.14 已经修改了这个 bug[2]，接口 D 的方法集包括：所有子接口的方法集和其自身的方法。</p><p>一个来自 Go 语言标准库的实际例子，io.ReadWriteCloser 接口是这样定义的：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">ReadWriteCloser</span> interface &#123;<br>  <span class="hljs-type">Reader</span><br>  <span class="hljs-type">Writer</span><br>  <span class="hljs-type">Closer</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>但是它可以用下面这种更简洁的方式来定义：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">ReadWriteCloser</span> interface &#123;<br>  io.<span class="hljs-type">ReadCloser</span><br>  io.<span class="hljs-type">WriteCloser</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>在 Go 1.14 之前，这种定义方式是不可行的，因为 io.ReadCloser 和 io.WriteCloser 都定义了 Close() 方法。</p><h3 id="示例：net-Error"><a href="#示例：net-Error" class="headerlink" title="示例：net.Error"></a>示例：net.Error</h3><p>net 包有声明自己的错误接口：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// An Error represents a network error.</span><br>type Error <span class="hljs-keyword">interface</span> &#123;<br>  <span class="hljs-function">error</span><br><span class="hljs-function">  <span class="hljs-title">Timeout</span>() <span class="hljs-built_in">bool</span>   <span class="hljs-comment">// Is the error a timeout?</span></span><br><span class="hljs-function">  <span class="hljs-title">Temporary</span>() <span class="hljs-built_in">bool</span> <span class="hljs-comment">// Is the error temporary?</span></span><br><span class="hljs-function">&#125;</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure><p>可以看到，Error 内嵌了 error 接口，这种嵌入方式表明，net.Error 也是一个 error，读代码的人一眼就能看出这点，而不需要去看 Error 的方法声明。</p><h3 id="示例：heap-Interface"><a href="#示例：heap-Interface" class="headerlink" title="示例：heap.Interface"></a>示例：heap.Interface</h3><p>heap 包有如下的接口声明：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">type <span class="hljs-keyword">Interface</span> <span class="hljs-keyword">interface</span> &#123;<br>  <span class="hljs-keyword">sort</span>.<span class="hljs-keyword">Interface</span><br>  <span class="hljs-keyword">Push</span>(x <span class="hljs-keyword">interface</span>&#123;&#125;) <span class="hljs-comment">// add x as element Len()</span><br>  <span class="hljs-keyword">Pop</span>() <span class="hljs-keyword">interface</span>&#123;&#125;   <span class="hljs-comment">// remove and return element Len() - 1.</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>实现了 heap.Interface 接口的类型必定实现了 sort.Interface 接口，后者包括三个方法，如果不使用嵌入方式，代码就像下面这样：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">type</span> Interface interface &#123;<br>  <span class="hljs-constructor">Len()</span> <span class="hljs-built_in">int</span><br>  <span class="hljs-constructor">Less(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> <span class="hljs-params">int</span>)</span> <span class="hljs-built_in">bool</span><br>  <span class="hljs-constructor">Swap(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> <span class="hljs-params">int</span>)</span><br>  <span class="hljs-constructor">Push(<span class="hljs-params">x</span> <span class="hljs-params">interface</span>&#123;&#125;)</span> <span class="hljs-comment">// add x as element Len()</span><br>  <span class="hljs-constructor">Pop()</span> interface&#123;&#125;   <span class="hljs-comment">// remove and return element Len() - 1.</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>这样一对比，嵌入式版本的写法无疑是更优的，最重要的是，可以让人一眼就能明白要想实现 heap.Interface 接口必须先实现 sort.Interface 接口。</p><blockquote><p>via: <a href="https://eli.thegreenplace.net/2020/embedding-in-go-part-2-interfaces-in-interfaces/">https://eli.thegreenplace.net/2020/embedding-in-go-part-2-interfaces-in-interfaces/</a><br>作者：Eli Bendersky  </p></blockquote><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>[1] Effective Go: <a href="https://go.dev/doc/effective_go#embedding">https://go.dev/doc/effective_go#embedding</a></p><p>[2] bug: <a href="https://github.com/golang/proposal/blob/master/design/6977-overlapping-interfaces.md">https://github.com/golang/proposal/blob/master/design/6977-overlapping-interfaces.md</a></p>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Go语言中的嵌入【第一部分】：结构体嵌入结构体</title>
    <link href="/2023/03/15/golang-structs-in-structs/"/>
    <url>/2023/03/15/golang-structs-in-structs/</url>
    
    <content type="html"><![CDATA[<p>Go 语言并不支持传统意义上的继承，相反，它提倡通过组合来扩展类型的功能。这并不是 Go 所特有的概念，继承之上的组合是 OOP 的一个众所周知的原则，在《设计模式》一书的第一章就有介绍。Embedding(嵌入)是 Go 语言一个重要的特性，有了它使得组合更加方便、更有用。虽然 Go 力求简单，但某种程度上嵌入增加了语言的复杂度，如果使用不当会导致 bug 出现。在这一系列文章中，我将介绍 Go 支持的不同种类的嵌入，并提供真实的代码示例(大部分来自 Go 语言的标准库)。</p><span id="more"></span><p>Go 语言里面有三种不同类型的嵌入：</p><ul><li>结构体嵌入结构体<a href="/2023/03/15/golang-structs-in-structs/">(第一部分)</a>；</li><li>接口嵌入接口<a href="/2023/03/15/golang-interfaces-in-interfaces/">(第二部分)</a>；</li><li>接口嵌入结构体<a href="/2023/03/15/golang-interfaces-in-structs/">(第三部分)</a>；</li></ul><h3 id="结构体嵌入结构体"><a href="#结构体嵌入结构体" class="headerlink" title="结构体嵌入结构体"></a>结构体嵌入结构体</h3><p>我们将从一个简单的示例开始，演示将一个结构体嵌入另一个结构体：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">Base</span> struct &#123;<br>  b int<br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-type">Container</span> struct &#123;     // <span class="hljs-type">Container</span> 是嵌入结构体<br>  <span class="hljs-type">Base</span>                      // <span class="hljs-type">Base</span> 是被嵌入的结构体<br>  c string<br>&#125;<br></code></pre></td></tr></table></figure><p>【译者注】为了便于理解，被嵌入的结构体我们称为内部类型；嵌入结构体称为外部类型。</p><p>Container 的实例现在也会有 b 字段，在 Go 语言规范中，它被称为一个提升(promoted)字段，我们可以像访问成员 c 那样访问它。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">co</span> := Container&#123;&#125;<br><span class="hljs-keyword">co</span>.<span class="hljs-keyword">b</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">co</span>.<span class="hljs-keyword">c</span> = <span class="hljs-string">&quot;string&quot;</span><br>fmt.Printf(<span class="hljs-string">&quot;co -&gt; &#123;b: %v, c: %v&#125;\n&quot;</span>, <span class="hljs-keyword">co</span>.<span class="hljs-keyword">b</span>, <span class="hljs-keyword">co</span>.<span class="hljs-keyword">c</span>)<br><br></code></pre></td></tr></table></figure><p>然而，当使用结构体字面量时，我们需要将被嵌入的结构体整体初始化，而不是单单对其字段初始化。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">co := Container&#123;Base: Base&#123;<span class="hljs-selector-tag">b</span>: <span class="hljs-number">10</span>&#125;, c: <span class="hljs-string">&quot;foo&quot;</span>&#125;<br>fmt<span class="hljs-selector-class">.Printf</span>(&quot;co -&gt; &#123;<span class="hljs-selector-tag">b</span>: %v, c: %v&#125;\n&quot;, co<span class="hljs-selector-class">.b</span>, co<span class="hljs-selector-class">.c</span>)<br><br></code></pre></td></tr></table></figure><p>我们可以这样 co.Base.b 访问 b，co.b 是一种简介的访问方式，</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>上面的机制同样适用于带有方法的结构体。假设 Base 有一个可用的方法：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">func (base Base) <span class="hljs-constructor">Describe()</span> <span class="hljs-built_in">string</span> &#123;<br>  return fmt.<span class="hljs-constructor">Sprintf(<span class="hljs-string">&quot;base %d belongs to us&quot;</span>, <span class="hljs-params">base</span>.<span class="hljs-params">b</span>)</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>我们仍然可以通过 Container 实例调用该方法，就好像 Container 拥有该方法一样：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">fmt.<span class="hljs-constructor">Println(<span class="hljs-params">cc</span>.Describe()</span>)<br><br></code></pre></td></tr></table></figure><p>为了更好地理解这个调用的机制，我们可以想象 Container 有一个明确的 Base 类型的字段和一个明确的 Describe 方法来转发这个调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">type</span> Container <span class="hljs-keyword">struct</span> &#123;<br>  base Base<br>  c <span class="hljs-type">string</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(cont Container)</span></span> Describe() <span class="hljs-type">string</span> &#123;<br>  <span class="hljs-keyword">return</span> cont.base.Describe()<br>&#125;<br></code></pre></td></tr></table></figure><p>这种方式与之前的调用方式是同样的效果。</p><h3 id="被嵌入的字段被覆盖"><a href="#被嵌入的字段被覆盖" class="headerlink" title="被嵌入的字段被覆盖"></a>被嵌入的字段被覆盖</h3><p>当内部类型和外部类型都有一个字段 x，嵌入时会发生什么呢？这种情况下，通过嵌入结构访问 x 时，我们访问到的是外部类型的 x，而不是内部类型的 x：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">type</span> Base <span class="hljs-keyword">struct</span> &#123;<br>  b   <span class="hljs-built_in">int</span><br>  tag <span class="hljs-built_in">string</span><br>&#125;<br>func (base Base) <span class="hljs-constructor">DescribeTag()</span> <span class="hljs-built_in">string</span> &#123;<br>  return fmt.<span class="hljs-constructor">Sprintf(<span class="hljs-string">&quot;Base tag is %s&quot;</span>, <span class="hljs-params">base</span>.<span class="hljs-params">tag</span>)</span><br>&#125;<br><span class="hljs-keyword">type</span> Container <span class="hljs-keyword">struct</span> &#123;<br>  Base<br>  c   <span class="hljs-built_in">string</span><br>  tag <span class="hljs-built_in">string</span><br>&#125;<br>func (co Container) <span class="hljs-constructor">DescribeTag()</span> <span class="hljs-built_in">string</span> &#123;<br>  return fmt.<span class="hljs-constructor">Sprintf(<span class="hljs-string">&quot;Container tag is %s&quot;</span>, <span class="hljs-params">co</span>.<span class="hljs-params">tag</span>)</span><br>&#125;<br></code></pre></td></tr></table></figure><p>像下面这样使用：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">b</span> := Base&#123;<span class="hljs-selector-tag">b</span>: <span class="hljs-number">10</span>, tag: <span class="hljs-string">&quot;b&#x27;s tag&quot;</span>&#125;<br>co := Container&#123;Base: <span class="hljs-selector-tag">b</span>, c: <span class="hljs-string">&quot;foo&quot;</span>, tag: <span class="hljs-string">&quot;co&#x27;s tag&quot;</span>&#125;<br>fmt<span class="hljs-selector-class">.Println</span>(<span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.DescribeTag</span>())<br>fmt<span class="hljs-selector-class">.Println</span>(co<span class="hljs-selector-class">.DescribeTag</span>())<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Base <span class="hljs-keyword">tag</span> <span class="hljs-title">is</span> b&#x27;s <span class="hljs-keyword">tag</span><br><span class="hljs-title">Container</span> <span class="hljs-keyword">tag</span> <span class="hljs-title">is</span> co&#x27;s <span class="hljs-keyword">tag</span><br><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p>注意，当我们访问 co.tag 时，我们访问的是 Container 的 tag 字段，而不是 base 的 tag 字段。我们可以通过 co.Base.tag 方式访问 base 的 tag 字段。</p><p>下面几个例子都来自 Go 语言的标准库。</p><h3 id="示例：sync-Mutex"><a href="#示例：sync-Mutex" class="headerlink" title="示例：sync.Mutex"></a>示例：sync.Mutex</h3><p>Go 语言里结构体嵌入的一个经典例子是 sync.Mutex，比如 crypto/tls/common.go 文件中的 lruSessionCache：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> lruSessionCache struct &#123;<br>  sync.<span class="hljs-type">Mutex</span><br>  m        map[string]*list.<span class="hljs-type">Element</span><br>  q        *list.<span class="hljs-type">List</span><br>  capacity int<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意这里的嵌入结构体 sync.Mutex，如果 cache 是 lruSessionCache 的实例，我们可以直接调用方法 cache.Lock() 和 cache.Unlock()，这在一些场景下非常有用。如果 lock 是结构体的公共 API 的一部分，嵌入 mutex 会很方便，而且不需要额外地转发方法。</p><p>不过，也有可能是该结构体的内部方法中使用该锁，并没有对外公开。在这种情况下，我不会嵌入 sync.Mutex，而是让它成为一个未导出的字段(如 mu sync.Mutex)。</p><h3 id="示例：elf-FileHeader"><a href="#示例：elf-FileHeader" class="headerlink" title="示例：elf.FileHeader"></a>示例：elf.FileHeader</h3><p>结构体中嵌入 sync.Mutex 是一个很好的示例，外部类型可以获得新的行为能力，比如加锁、解锁。这里有一个不同的例子，关于数据嵌入。在 debug/elf/file.go中，我们找到描述 ELF 文件的结构:</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs elm">// <span class="hljs-type">A</span> <span class="hljs-type">FileHeader</span> represents an <span class="hljs-type">ELF</span> file header.<br><span class="hljs-keyword">type</span> <span class="hljs-type">FileHeader</span> struct &#123;<br>  <span class="hljs-type">Class</span>      <span class="hljs-type">Class</span><br>  <span class="hljs-type">Data</span>       <span class="hljs-type">Data</span><br>  <span class="hljs-type">Version</span>    <span class="hljs-type">Version</span><br>  <span class="hljs-type">OSABI</span>      <span class="hljs-type">OSABI</span><br>  <span class="hljs-type">ABIVersion</span> uint8<br>  <span class="hljs-type">ByteOrder</span>  binary.<span class="hljs-type">ByteOrder</span><br>  <span class="hljs-type">Type</span>       <span class="hljs-type">Type</span><br>  <span class="hljs-type">Machine</span>    <span class="hljs-type">Machine</span><br>  <span class="hljs-type">Entry</span>      uint64<br>&#125;<br>// <span class="hljs-type">A</span> <span class="hljs-type">File</span> represents an open <span class="hljs-type">ELF</span> file.<br><span class="hljs-keyword">type</span> <span class="hljs-type">File</span> struct &#123;<br>  <span class="hljs-type">FileHeader</span><br>  <span class="hljs-type">Sections</span>  []*<span class="hljs-type">Section</span><br>  <span class="hljs-type">Progs</span>     []*<span class="hljs-type">Prog</span><br>  closer    io.<span class="hljs-type">Closer</span><br>  gnuNeed   []verneed<br>  gnuVersym []byte<br>&#125;<br></code></pre></td></tr></table></figure><p>elf 包的开发者直接在 File 结构体中列出了所有的文件头字段，但是将这些字段归纳在 FileHeader 结构体中，这是一个很好的数据分区的示例。写代码的人可能会想要单独初始化或者操作文件头，而这种嵌入式的结构设计可以很好地做到这点。</p><p>我们可以在文件 compress/gzip/gunzip.go 中找到另一个相同的例子，gzip.Reader 嵌入了 gzip.Header 结构体，这是一个非常好的嵌入数据重用的例子，因为 gzip.Writer 也嵌入了 gzip.Header，所以这有助于避免重复拷贝。</p><h3 id="示例：bufio-ReadWriter"><a href="#示例：bufio-ReadWriter" class="headerlink" title="示例：bufio.ReadWriter"></a>示例：bufio.ReadWriter</h3><p>由于嵌入结构体（外部类型）“继承”了被嵌入结构体的方法，所以嵌入结构体可以成为实现接口的一个有用工具。</p><p>我们可以看看 bufio 包，里面有一个 bufio.Reader 类型，<code>*bufio.Reader</code> 类型实现了 io.Reader 接口，同样地 <code>*bufio.Writer</code> 实现了 io.Writer 接口。那我们该如何创建一个实现了 io.ReadWriter 接口的类型呢？</p><p>通过嵌入可以很容易实现：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">ReadWriter</span> struct &#123;<br>  *<span class="hljs-type">Reader</span><br>  *<span class="hljs-type">Writer</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>类型“继承”了 <code>*bufio.Reader</code> 和 <code>*bufio.Writer</code> 的所有方法，所以实现了 io.ReadWriter 接口，不需要额外地命名其他字段，也不需要明确地转发方法，就能轻松地实现。</p><p>另一个类似的例子，context 包里面的 timerCtx 结构体：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> timerCtx struct &#123;<br>  cancelCtx<br>  timer *time.<span class="hljs-type">Timer</span><br>  deadline time.<span class="hljs-type">Time</span><br>&#125;<br></code></pre></td></tr></table></figure><p>为了实现 Context 接口，timerCtx 结构体嵌入了 cancelCtx，它已经实现了 4 个方法中的 3 个方法：Done()、Err() 和 Value()，所以 timerCtx 只需要实现属于自己的 Deadline() 方法即可。</p><blockquote><p>via: <a href="https://eli.thegreenplace.net/2020/embedding-in-go-part-1-structs-in-structs/">https://eli.thegreenplace.net/2020/embedding-in-go-part-1-structs-in-structs/</a><br>作者：Eli Bendersky</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NFS CSI部署及Fio性能测试</title>
    <link href="/2022/09/09/nfs-fio/"/>
    <url>/2022/09/09/nfs-fio/</url>
    
    <content type="html"><![CDATA[<p>兼容NFS v3版本的NFS Server部署以及<code>nfs-subdir-external-provisioner</code>CSI安装配置，并通过Fio测试NFS性能。</p><span id="more"></span><h1 id="兼容NFS-v3版本的NFS-Server"><a href="#兼容NFS-v3版本的NFS-Server" class="headerlink" title="兼容NFS v3版本的NFS Server"></a>兼容NFS v3版本的NFS Server</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --privileged -d --name nfs \<br>  --network kind \<br>  -v /home/boer/projects/kind-k8s/nfs_data:/data                        \<br>  -e NFS_EXPORT_0=<span class="hljs-string">&#x27;/data *(rw,insecure,no_subtree_check,no_root_squash,fsid=1)&#x27;</span>  \<br>  -p 2049:2049   -p 2049:2049/udp   \<br>  -p 111:111     -p 111:111/udp     \<br>  -p 32765:32765 -p 32765:32765/udp \<br>  -p 32767:32767 -p 32767:32767/udp \<br>  erichough/nfs-server:latest<br><span class="hljs-comment"># nfs csi</span><br>helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/<br>helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \<br>  --<span class="hljs-built_in">set</span> nfs.server=172.30.254.86 \<br>  --<span class="hljs-built_in">set</span> nfs.path=/data<br><span class="hljs-comment"># Storage Class</span><br>nfs-client Delete archiveOnDelete=<span class="hljs-literal">true</span><br>nfs Retain archiveOnDelete=<span class="hljs-literal">true</span><br><span class="hljs-comment"># test</span><br>https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/tree/master/deploy<br><br>helm install -n operators nfs-subdir-external-provisioner --<span class="hljs-built_in">set</span> nfs.server=repository.boer.xyz --<span class="hljs-built_in">set</span> nfs.path=/nfs --<span class="hljs-built_in">set</span> storageClass.name=nfs-storage .<br></code></pre></td></tr></table></figure><h1 id="PVC-FIO"><a href="#PVC-FIO" class="headerlink" title="PVC FIO"></a>PVC FIO</h1><p><a href="https://help.aliyun.com/document_detail/147897.html">1、参考：测试块存储性能</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">fio-test-cm</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">default-fio:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    [global]</span><br><span class="hljs-string">    randrepeat=0</span><br><span class="hljs-string">    verify=0</span><br><span class="hljs-string">    ioengine=libaio</span><br><span class="hljs-string">    direct=1</span><br><span class="hljs-string">    gtod_reduce=1</span><br><span class="hljs-string">    [job1]</span><br><span class="hljs-string">    name=read_iops</span><br><span class="hljs-string">    bs=4K</span><br><span class="hljs-string">    iodepth=64</span><br><span class="hljs-string">    size=2G</span><br><span class="hljs-string">    readwrite=randread</span><br><span class="hljs-string">    time_based</span><br><span class="hljs-string">    ramp_time=2s</span><br><span class="hljs-string">    runtime=15s</span><br><span class="hljs-string">    [job2]</span><br><span class="hljs-string">    name=write_iops</span><br><span class="hljs-string">    bs=4K</span><br><span class="hljs-string">    iodepth=64</span><br><span class="hljs-string">    size=2G</span><br><span class="hljs-string">    readwrite=randwrite</span><br><span class="hljs-string">    time_based</span><br><span class="hljs-string">    ramp_time=2s</span><br><span class="hljs-string">    runtime=15s</span><br><span class="hljs-string">    [job3]</span><br><span class="hljs-string">    name=read_bw</span><br><span class="hljs-string">    bs=128K</span><br><span class="hljs-string">    iodepth=64</span><br><span class="hljs-string">    size=2G</span><br><span class="hljs-string">    readwrite=randread</span><br><span class="hljs-string">    time_based</span><br><span class="hljs-string">    ramp_time=2s</span><br><span class="hljs-string">    runtime=15s</span><br><span class="hljs-string">    [job4]</span><br><span class="hljs-string">    name=write_bw</span><br><span class="hljs-string">    bs=128k</span><br><span class="hljs-string">    iodepth=64</span><br><span class="hljs-string">    size=2G</span><br><span class="hljs-string">    readwrite=randwrite</span><br><span class="hljs-string">    time_based</span><br><span class="hljs-string">    ramp_time=2s</span><br><span class="hljs-string">    runtime=15s</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">fio-test-pvc</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">accessModes:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOnce</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">100Gi</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">standard</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">fio-test-pod</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">containers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">fio</span><br>    <span class="hljs-attr">command:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/sh</span><br>    <span class="hljs-attr">args:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">-c</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">tail</span> <span class="hljs-string">-f</span> <span class="hljs-string">/dev/null</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">xridge/fio:latest</span><br>    <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">Always</span><br>    <span class="hljs-attr">volumeMounts:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/data</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">persistent-storage</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/fio-config</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">config-map</span><br>  <span class="hljs-attr">volumes:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">persistent-storage</span><br>    <span class="hljs-attr">persistentVolumeClaim:</span><br>      <span class="hljs-attr">claimName:</span> <span class="hljs-string">fio-test-pvc</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config-map</span><br>    <span class="hljs-attr">configMap:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">fio-test-cm</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">/etc/fio-config/default-fio</span><br><span class="hljs-string">fio</span> <span class="hljs-string">--directory</span> <span class="hljs-string">/data</span> <span class="hljs-string">/etc/fio-config/default-fio</span> <span class="hljs-string">--output-format</span> <span class="hljs-string">normal</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">-direct=1</span> <span class="hljs-string">-iodepth=128</span> <span class="hljs-string">-rw=randread</span> <span class="hljs-string">-ioengine=libaio</span> <span class="hljs-string">-bs=128k</span> <span class="hljs-string">-numjobs=1</span> <span class="hljs-string">-time_based=1</span> <span class="hljs-string">-runtime=1000</span> <span class="hljs-string">-group_reporting</span> <span class="hljs-string">-filename=/data/rr128k</span> <span class="hljs-string">-size=2G</span> <span class="hljs-string">-name=rr128k</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">-direct=1</span> <span class="hljs-string">-iodepth=128</span> <span class="hljs-string">-rw=randwrite</span> <span class="hljs-string">-ioengine=libaio</span> <span class="hljs-string">-bs=128k</span> <span class="hljs-string">-numjobs=1</span> <span class="hljs-string">-time_based=1</span> <span class="hljs-string">-runtime=1000</span> <span class="hljs-string">-group_reporting</span> <span class="hljs-string">-filename=/data/rw128k</span> <span class="hljs-string">-size=2G</span> <span class="hljs-string">-name=rw128k</span><br></code></pre></td></tr></table></figure><p><a href="https://fio.readthedocs.io/en/latest/fio_doc.html#i-o-type">2、参考：fio</a></p><h1 id="Docker方式"><a href="#Docker方式" class="headerlink" title="Docker方式"></a>Docker方式</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -v $(<span class="hljs-built_in">pwd</span>)/test:/data -v /tmp/jobs.fio:/tmp/jobs.fio harbor.boer.xyz/public/xridge_fio:latest /tmp/jobs.fio<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SRE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>fio</tag>
      
      <tag>nfs</tag>
      
      <tag>csi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elasticsearch基准测试</title>
    <link href="/2021/11/16/elasticsearch-benchmark-rally/"/>
    <url>/2021/11/16/elasticsearch-benchmark-rally/</url>
    
    <content type="html"><![CDATA[<p>ES 是近乎线性扩展的分布式系统，所以可以总结成同一个测试模式：<br>1.使用和线上集群相同硬件配置的服务器搭建一个单节点集群。<br>2.使用和线上集群相同的映射创建一个 0 副本，1 分片的测试索引。<br>3.使用和线上集群相同的数据写入进行压测。<br>4.观察写入性能，或者运行查询请求观察搜索聚合性能。<br>5.持续压测数小时，使用监控系统记录 eps、requesttime、fielddata cache、GC count 等关键数据。</p><p>测试完成后，根据监控系统数据，确定单分片的性能拐点，或者适合自己预期值的临界点。这个数据，就是一个基准数据。之后的扩容计划，都可以以这个基准单位进行。</p><p>需要注意的是，测试是以分片为单位的，在实际使用中，因为主分片和副本分片都是在各自节点做 indexing 和 merge 操作，需要消耗同样的写入性能。所以，实际集群的容量预估中，要考虑副本数的影响。也就是说，假如你在基准测试中得到单机写入性能在 10000 eps，那么开启一个副本后所能达到的 eps 就只有 5000 了。还想写入 10000 eps 的话，就需要加一倍机器。</p><span id="more"></span><p>esrally==2.2.1<br>elasticsearch==7.10.2</p><table><thead><tr><th>概念</th><th>释义</th></tr></thead><tbody><tr><td>team/car</td><td>测试集群</td></tr><tr><td>geonames</td><td>测试数据</td></tr><tr><td>tracks</td><td>索引定义</td></tr><tr><td>operation</td><td>测试用例 index/search/term…</td></tr><tr><td>challenge</td><td>执行测试 并发数</td></tr><tr><td>race_id</td><td>测试报告</td></tr></tbody></table><h1 id="race"><a href="#race" class="headerlink" title="race"></a>race</h1><p>  ~/.rally/benchmarks/races<br>  esrally list races<br>  esrally compare –baseline=<race_id_1> –contender=<race_id_2></p><h1 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h1><p>  esrally list pipelines<br>  ** benchmark-only - 已有集群[car] **</p><h1 id="tracks"><a href="#tracks" class="headerlink" title="tracks:"></a>tracks:</h1><ol><li><p>operation - 压测的具体操作index/search</p></li><li><p>challenge - 压测执行的任务throughput/iteration</p></li><li><p>离线数据路径: ~/.rally/benchmarks/data/geonames    - eg. <a href="https://github.com/elastic/rally-tracks/blob/master/geonames/track.json">https://github.com/elastic/rally-tracks/blob/master/geonames/track.json</a></p></li><li><p>tracks定义仓库：~/.rally/benchmarks/tracks/default     - eg. <a href="https://github.com/elastic/rally-tracks">https://github.com/elastic/rally-tracks</a></p></li></ol><h1 id="car-team-不同规格的es集群"><a href="#car-team-不同规格的es集群" class="headerlink" title="car/team - 不同规格的es集群"></a>car/team - 不同规格的es集群</h1><p><a href="https://github.com/elastic/rally-teams">https://github.com/elastic/rally-teams</a></p><h1 id="执行与输出"><a href="#执行与输出" class="headerlink" title="执行与输出"></a>执行与输出</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs bash">esrally race --pipeline=benchmark-only --target-hosts=&lt;es_vip&gt;:9200 --track=geonames  --client-options=<span class="hljs-string">&quot;use_ssl:true,basic_auth_user:&#x27;admin&#x27;,basic_auth_password:&#x27;admin&#x27;,verify_certs:false&quot;</span> --challenge=append-no-conflicts  --offline<br><br>    ____        ____<br>   / __ \____ _/ / /_  __<br>  / /_/ / __ `/ / / / / /<br> / _, _/ /_/ / / / /_/ /<br>/_/ |_|\__,_/_/_/\__, /<br>                /____/<br><br>[INFO] You did not provide an explicit <span class="hljs-built_in">timeout</span> <span class="hljs-keyword">in</span> the client options. Assuming default of 10 seconds.<br>[INFO] Decompressing track data from [/root/.rally/benchmarks/data/geonames/documents-2.json.bz2] to [/root/.rally/benchmarks/data/geonames/documents-2.json] (resulting size: [3.30] GB) ... [OK]<br>[INFO] Preparing file offset table <span class="hljs-keyword">for</span> [/root/.rally/benchmarks/data/geonames/documents-2.json] ... [OK]<br>[INFO] Racing on track [geonames], challenge [append-no-conflicts] and car [<span class="hljs-string">&#x27;external&#x27;</span>] with version [7.10.2].<br><br>[WARNING] merges_total_time is 11262 ms indicating that the cluster is not <span class="hljs-keyword">in</span> a defined clean state. Recorded index time metrics may be misleading.<br>[WARNING] refresh_total_time is 3141 ms indicating that the cluster is not <span class="hljs-keyword">in</span> a defined clean state. Recorded index time metrics may be misleading.<br>Running delete-index                                                           [100% <span class="hljs-keyword">done</span>]<br>Running create-index                                                           [100% <span class="hljs-keyword">done</span>]<br>Running check-cluster-health                                                   [100% <span class="hljs-keyword">done</span>]<br>Running index-append                                                           [100% <span class="hljs-keyword">done</span>]<br>Running refresh-after-index                                                    [100% <span class="hljs-keyword">done</span>]<br>Running force-merge                                                            [100% <span class="hljs-keyword">done</span>]<br>Running refresh-after-force-merge                                              [100% <span class="hljs-keyword">done</span>]<br>Running wait-until-merges-finish                                               [100% <span class="hljs-keyword">done</span>]<br>Running index-stats                                                            [100% <span class="hljs-keyword">done</span>]<br>Running node-stats                                                             [100% <span class="hljs-keyword">done</span>]<br>Running default                                                                [100% <span class="hljs-keyword">done</span>]<br>Running term                                                                   [100% <span class="hljs-keyword">done</span>]<br>Running phrase                                                                 [100% <span class="hljs-keyword">done</span>]<br>Running country_agg_uncached                                                   [100% <span class="hljs-keyword">done</span>]<br>Running country_agg_cached                                                     [100% <span class="hljs-keyword">done</span>]<br>Running scroll                                                                 [100% <span class="hljs-keyword">done</span>]<br>Running expression                                                             [100% <span class="hljs-keyword">done</span>]<br>Running painless_static                                                        [100% <span class="hljs-keyword">done</span>]<br>Running painless_dynamic                                                       [100% <span class="hljs-keyword">done</span>]<br>Running decay_geo_gauss_function_score                                         [100% <span class="hljs-keyword">done</span>]<br>Running decay_geo_gauss_script_score                                           [100% <span class="hljs-keyword">done</span>]<br>Running field_value_function_score                                             [100% <span class="hljs-keyword">done</span>]<br>Running field_value_script_score                                               [100% <span class="hljs-keyword">done</span>]<br>Running large_terms                                                            [100% <span class="hljs-keyword">done</span>]<br>Running large_filtered_terms                                                   [100% <span class="hljs-keyword">done</span>]<br>Running large_prohibited_terms                                                 [100% <span class="hljs-keyword">done</span>]<br>Running desc_sort_population                                                   [100% <span class="hljs-keyword">done</span>]<br>Running asc_sort_population                                                    [100% <span class="hljs-keyword">done</span>]<br>Running asc_sort_with_after_population                                         [100% <span class="hljs-keyword">done</span>]<br>Running desc_sort_geonameid                                                    [100% <span class="hljs-keyword">done</span>]<br>Running desc_sort_with_after_geonameid                                         [100% <span class="hljs-keyword">done</span>]<br>Running asc_sort_geonameid                                                     [100% <span class="hljs-keyword">done</span>]<br>Running asc_sort_with_after_geonameid                                          [100% <span class="hljs-keyword">done</span>]<br><br>------------------------------------------------------<br>    _______             __   _____<br>   / ____(_)___  ____ _/ /  / ___/_________  ________<br>  / /_  / / __ \/ __ `/ /   \__ \/ ___/ __ \/ ___/ _ \<br> / __/ / / / / / /_/ / /   ___/ / /__/ /_/ / /  /  __/<br>/_/   /_/_/ /_/\__,_/_/   /____/\___/\____/_/   \___/<br>------------------------------------------------------<br></code></pre></td></tr></table></figure><h1 id="es-devtools"><a href="#es-devtools" class="headerlink" title="es devtools"></a>es devtools</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">GET</span> _cluster<span class="hljs-built_in">/health</span><br><span class="hljs-built_in"></span><span class="hljs-built_in">GET</span> _cluster<span class="hljs-built_in">/settings</span><br><span class="hljs-built_in"></span><br><span class="hljs-built_in">GET</span> _cat/indices?v&amp;<span class="hljs-attribute">h</span>=i,pri.store.size,status,rep,docs.count,health<br><span class="hljs-built_in">GET</span> /_cat/indices?v&amp;<span class="hljs-attribute">health</span>=red<br><span class="hljs-built_in">GET</span> _cat/thread_pool?v<br><br><span class="hljs-built_in">GET</span> _cat/pending_tasks<br><span class="hljs-built_in">GET</span> _cluster/allocation/explain<br><br><span class="hljs-built_in">GET</span> _cat/indices?v<br><span class="hljs-built_in">GET</span> _nodes/stats<br><span class="hljs-built_in">GET</span> _all/_stats<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://mp.weixin.qq.com/s/JCIWXCY60IM9reHziuxdoQ">https://mp.weixin.qq.com/s/JCIWXCY60IM9reHziuxdoQ</a></li><li><a href="https://discuss.elastic.co/t/premature-end-of-benchmark-run/102684/3">https://discuss.elastic.co/t/premature-end-of-benchmark-run/102684/3</a></li><li><a href="https://esrally.readthedocs.io/en/stable/track.html">https://esrally.readthedocs.io/en/stable/track.html</a></li><li><a href="https://help.aliyun.com/document_detail/127657.html">https://help.aliyun.com/document_detail/127657.html</a></li><li><a href="https://grafana.com/grafana/dashboards/14191">https://grafana.com/grafana/dashboards/14191</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>BigData</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticserach</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对象存储MinIO实践</title>
    <link href="/2021/09/01/object-storage-of-minio/"/>
    <url>/2021/09/01/object-storage-of-minio/</url>
    
    <content type="html"><![CDATA[<p><a href="https://min.io/">https://min.io/</a></p><span id="more"></span><h3 id="install-minio"><a href="#install-minio" class="headerlink" title="install minio"></a>install minio</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">useradd -M -d <span class="hljs-regexp">/opt/mi</span>nio -s <span class="hljs-regexp">/sbin/</span>nologin -c <span class="hljs-string">&quot;MinIO User&quot;</span> minio<br>mkdir <span class="hljs-regexp">/opt/mi</span>nio<span class="hljs-regexp">/&#123;bin,data/</span>&#123;drive1,drive2&#125;,certs&#125;<br>curl -sL https:<span class="hljs-regexp">//</span>dl.min.io<span class="hljs-regexp">/server/mi</span>nio<span class="hljs-regexp">/release/</span>linux-amd64<span class="hljs-regexp">/minio -o /</span>opt<span class="hljs-regexp">/minio/</span>bin/minio<br>chown -R minio. <span class="hljs-regexp">/opt/mi</span>nio<br>chmod a+x <span class="hljs-regexp">/opt/mi</span>nio<span class="hljs-regexp">/bin/mi</span>nio<br></code></pre></td></tr></table></figure><h3 id="etc-default-minio"><a href="#etc-default-minio" class="headerlink" title="/etc/default/minio"></a>/etc/default/minio</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs conf"># Volume to be used for MinIO server.<br>MINIO_VOLUMES=&quot;http://10.10.253.16:19000/opt/minio/data/drive1 http://10.10.253.16:19000/opt/minio/data/drive2 http://10.10.253.17:19000/opt/minio/data/drive1 http://10.10.253.17:19000/opt/minio/data/drive2 http://10.10.253.18:19000/opt/minio/data/drive1 http://10.10.253.18:19000/opt/minio/data/drive2&quot;<br>### Please provide an even number of endpoints greater or equal to 4<br># Use if you want to run MinIO on a custom port.<br>MINIO_OPTS=&quot;--address :19000 --console-address :19001&quot;<br># Root user for the server.<br>MINIO_ROOT_USER=admin<br># Root secret for the server.<br>MINIO_ROOT_PASSWORD=passw0rd<br></code></pre></td></tr></table></figure><h3 id="etc-systemd-system"><a href="#etc-systemd-system" class="headerlink" title="/etc/systemd/system"></a>/etc/systemd/system</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs conf">[Unit]<br>Description=MinIO<br>Documentation=https://docs.min.io<br>Wants=network-online.target<br>After=network-online.target<br>AssertFileIsExecutable=/opt/minio/bin/minio<br><br>[Service]<br>WorkingDirectory=/opt/minio<br><br>User=minio<br>Group=minio<br><br>EnvironmentFile=-/etc/default/minio<br>ExecStartPre=/bin/bash -c &quot;if [ -z \&quot;$&#123;MINIO_VOLUMES&#125;\&quot; ]; then echo \&quot;Variable MINIO_VOLUMES not set in /etc/default/minio\&quot;; exit 1; fi&quot;<br>ExecStart=/opt/minio/bin/minio server $MINIO_OPTS $MINIO_VOLUMES<br><br># Let systemd restart this service always<br>Restart=always<br><br># Specifies the maximum file descriptor number that can be opened by this process<br>LimitNOFILE=65536<br><br># Specifies the maximum number of threads this process can create<br>TasksMax=infinity<br><br># Disable timeout logic and wait until process is stopped<br>TimeoutStopSec=infinity<br>SendSIGKILL=no<br><br>[Install]<br>WantedBy=multi-user.target<br><br># Built for $&#123;project.name&#125;-$&#123;project.version&#125; ($&#123;project.name&#125;)<br></code></pre></td></tr></table></figure><h3 id="MinIO-Ops"><a href="#MinIO-Ops" class="headerlink" title="MinIO Ops"></a>MinIO Ops</h3><p><code>systemctl start minio.service</code><br><code>journalctl -fu minio.service</code></p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://github.com/minio/minio-service/tree/master/linux-systemd">https://github.com/minio/minio-service/tree/master/linux-systemd</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MinIO</tag>
      
      <tag>OSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL To ClickHouse数据实时同步引擎MaterializeMySQL</title>
    <link href="/2021/08/26/mysql-to-clickhouse-with-materializemysql/"/>
    <url>/2021/08/26/mysql-to-clickhouse-with-materializemysql/</url>
    
    <content type="html"><![CDATA[<ul><li>ClickHouse server version 21.7.2.7 (official build).</li><li>MySQL 5.7.35</li><li>Date 2021.8.25</li></ul><span id="more"></span><h3 id="一、数据同步"><a href="#一、数据同步" class="headerlink" title="一、数据同步"></a>一、数据同步</h3><h4 id="1、MySQL配置"><a href="#1、MySQL配置" class="headerlink" title="1、MySQL配置"></a>1、MySQL配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs conf"># vim custom_config.cnf<br>[mysqld]<br>log-bin=mysql-bin<br>binlog-format=ROW<br>max_binlog_size=10M # binlog文件大小<br>enforce-gtid-consistency=ON<br>gtid-mode=ON<br>server_id=1<br></code></pre></td></tr></table></figure><h4 id="2、MySQL存储过程模拟数据"><a href="#2、MySQL存储过程模拟数据" class="headerlink" title="2、MySQL存储过程模拟数据"></a>2、MySQL存储过程模拟数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">/*</span><br><span class="hljs-comment">show databases;</span><br><span class="hljs-comment">create database if not exists testdb default character set utf8mb4 collate utf8mb4_unicode_ci;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">select User,Host,plugin,authentication_string from mysql.user;</span><br><span class="hljs-comment">show global variables like &#x27;validate_password%&#x27;;</span><br><span class="hljs-comment">set global validate_password_length=9;</span><br><span class="hljs-comment">create user &#x27;tester&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;54Ceshi@db&#x27;;</span><br><span class="hljs-comment">set global validate_password_length=12;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">grant all privileges on testdb.* to &#x27;tester&#x27;@&#x27;%&#x27; with grant OPTION;</span><br><span class="hljs-comment">flush privileges;</span><br><span class="hljs-comment">show grants for tester@&#x27;%&#x27;;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">SMALLINT(6)  -32768 ~ 32767</span><br><span class="hljs-comment">SMALLINT(5) UNSIGNED  65535</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">INT(11)  -2147483648 ~ 2147483647</span><br><span class="hljs-comment">INT(10) UNSIGNED  4294967295</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">BIGINT(20)  -9223372036854775808 ~ 9223372036854775807</span><br><span class="hljs-comment">BIGINT(20) UNSIGNED  18446744073709551615</span><br><span class="hljs-comment">*/</span><br><br>USE testdb;<br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `tb_test`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> `tb_test` (<br>`id`          <span class="hljs-type">BIGINT</span>(<span class="hljs-number">20</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键自增ID&#x27;</span>,<br>`username`    <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;用户名&#x27;</span> <span class="hljs-keyword">COLLATE</span> <span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>,<br>`password`    <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;密码&#x27;</span> <span class="hljs-keyword">COLLATE</span> <span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>,<br>`phone`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">16</span>) <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;手机号&#x27;</span> <span class="hljs-keyword">COLLATE</span> <span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>,<br>`email`       <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;邮箱&#x27;</span> <span class="hljs-keyword">COLLATE</span> <span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>,<br>`gender`      <span class="hljs-type">SMALLINT</span>(<span class="hljs-number">5</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;性别：0-保密（默认），1-男，2-女&#x27;</span>,<br>`salary`      <span class="hljs-type">BIGINT</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;薪水&#x27;</span>,<br>`state`       <span class="hljs-type">SMALLINT</span>(<span class="hljs-number">5</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;状态：0-禁用（默认），1-启用&#x27;</span>,<br>`deleted`     <span class="hljs-type">SMALLINT</span>(<span class="hljs-number">5</span>) UNSIGNED <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;是否删除：0-否（默认），1-是&#x27;</span>,<br>`create_time` DATETIME <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>`update_time` DATETIME <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>`remark`      <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;备注&#x27;</span> <span class="hljs-keyword">COLLATE</span> <span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>,<br><span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br><span class="hljs-keyword">UNIQUE</span> INDEX `uq_username` (`username`),<br><span class="hljs-keyword">UNIQUE</span> INDEX `uq_phone` (`phone`),<br><span class="hljs-keyword">UNIQUE</span> INDEX `uq_email` (`email`),<br>INDEX `ix_create_time` (`create_time`),<br>INDEX `ix_update_time` (`update_time`)<br>)<br>COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;测试表&#x27;</span><br><span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span><br>ENGINE<span class="hljs-operator">=</span>InnoDB<br>AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">1</span><br>; <br><br>delimiter ;<br><span class="hljs-keyword">SET</span> collation_connection<span class="hljs-operator">=</span><span class="hljs-string">&#x27;utf8mb4_unicode_ci&#x27;</span>;<br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">procedure</span> if <span class="hljs-keyword">exists</span> proc_tb_test_data;<br><br>delimiter $$<br><span class="hljs-keyword">CREATE</span> definer<span class="hljs-operator">=</span>`tester`@`<span class="hljs-operator">%</span>` <span class="hljs-keyword">PROCEDURE</span> proc_tb_test_data( <span class="hljs-keyword">IN</span> input_total_num <span class="hljs-type">int</span>(<span class="hljs-number">10</span>), <span class="hljs-keyword">IN</span> input_commit_num <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) )<br>label_proc:<span class="hljs-keyword">BEGIN</span><br>    <span class="hljs-keyword">declare</span> i <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">declare</span> row_total_num <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">declare</span> row_commit_num <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">500</span>;<br><br>    if (input_total_num<span class="hljs-operator">&gt;=</span>input_commit_num <span class="hljs-keyword">and</span> input_commit_num<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>) <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">set</span> row_total_num<span class="hljs-operator">=</span>input_total_num;<br>        <span class="hljs-keyword">set</span> row_commit_num<span class="hljs-operator">=</span>input_commit_num;<br>    <span class="hljs-keyword">else</span><br>        leave label_proc;<br>    <span class="hljs-keyword">end</span> if;<br><br>    <span class="hljs-keyword">start</span> transaction;<br>    while i<span class="hljs-operator">&lt;=</span>row_total_num do<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tb_test(username, password, phone, email, gender, salary, state, deleted)<br><span class="hljs-keyword">SELECT</span> <br>    username,<br>    <span class="hljs-built_in">upper</span>(MD5(username)) <span class="hljs-keyword">as</span> password,<br>    phone,<br>    <span class="hljs-keyword">case</span> <br>        <span class="hljs-keyword">when</span> email_type<span class="hljs-operator">&lt;=</span><span class="hljs-number">5</span> <span class="hljs-keyword">then</span> CONCAT(username,<span class="hljs-string">&#x27;@gmail.com&#x27;</span>)<br>        <span class="hljs-keyword">when</span> email_type<span class="hljs-operator">&gt;</span><span class="hljs-number">5</span> <span class="hljs-keyword">AND</span> email_type<span class="hljs-operator">&lt;=</span><span class="hljs-number">15</span> <span class="hljs-keyword">then</span> CONCAT(username,<span class="hljs-string">&#x27;@sina.cn&#x27;</span>)<br>        <span class="hljs-keyword">when</span> email_type<span class="hljs-operator">&gt;</span><span class="hljs-number">15</span> <span class="hljs-keyword">AND</span> email_type<span class="hljs-operator">&lt;=</span><span class="hljs-number">35</span> <span class="hljs-keyword">then</span> CONCAT(username,<span class="hljs-string">&#x27;@sina.com&#x27;</span>)<br>        <span class="hljs-keyword">when</span> email_type<span class="hljs-operator">&gt;</span><span class="hljs-number">35</span> <span class="hljs-keyword">AND</span> email_type<span class="hljs-operator">&lt;=</span><span class="hljs-number">60</span> <span class="hljs-keyword">then</span> CONCAT(username,<span class="hljs-string">&#x27;@163.com&#x27;</span>)<br>        <span class="hljs-keyword">else</span> CONCAT(t.username,<span class="hljs-string">&#x27;@qq.com&#x27;</span>)<br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> email,<br>    gender,<br>    salary,<br>    state,<br>    <span class="hljs-keyword">case</span> <br>        <span class="hljs-keyword">when</span> state<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">AND</span> RAND()<span class="hljs-operator">&lt;</span><span class="hljs-number">0.1</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> deleted<br><span class="hljs-keyword">FROM</span> (<br><span class="hljs-keyword">SELECT</span><br><span class="hljs-keyword">LEFT</span>(<span class="hljs-built_in">lower</span>(to_base64(sha1(UUID()))),<span class="hljs-built_in">FLOOR</span>(RAND()<span class="hljs-operator">*</span><span class="hljs-number">10</span>)<span class="hljs-operator">+</span><span class="hljs-number">6</span>) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;username&#x27;</span>,<br><span class="hljs-built_in">FLOOR</span>(RAND()<span class="hljs-operator">*</span><span class="hljs-number">6000000000</span><span class="hljs-operator">+</span><span class="hljs-number">13000000000</span>) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;phone&#x27;</span>,<br><span class="hljs-built_in">FLOOR</span>((RAND()<span class="hljs-operator">*</span><span class="hljs-number">100</span>)<span class="hljs-operator">+</span><span class="hljs-number">1</span>) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;email_type&#x27;</span>,<br><span class="hljs-built_in">FLOOR</span>((RAND()<span class="hljs-operator">*</span><span class="hljs-number">3</span>)) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;gender&#x27;</span>,<br><span class="hljs-built_in">FLOOR</span>((RAND()<span class="hljs-operator">*</span><span class="hljs-number">17000</span><span class="hljs-operator">+</span><span class="hljs-number">3000</span>)) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;salary&#x27;</span>,<br>ROUND(RAND()<span class="hljs-operator">+</span><span class="hljs-number">0.3</span>) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;state&#x27;</span><br>) t<br><span class="hljs-keyword">ON</span> DUPLICATE KEY <span class="hljs-keyword">UPDATE</span> update_time<span class="hljs-operator">=</span>NOW()<br>;<br><br>        if (i<span class="hljs-operator">=</span>row_total_num <span class="hljs-keyword">or</span> i<span class="hljs-operator">%</span>row_commit_num<span class="hljs-operator">=</span><span class="hljs-number">0</span>) <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">commit</span>;<br>        elseif i<span class="hljs-operator">%</span>row_commit_num<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">start</span> transaction;<br>        <span class="hljs-keyword">end</span> if;<br><br>        <span class="hljs-keyword">set</span> i<span class="hljs-operator">=</span>i<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">end</span> while;<br><br>    <span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">END</span> $$<br>delimiter ;<br><br><span class="hljs-comment">-- call proc_tb_test_data(1000000,5000);</span><br><span class="hljs-comment">/* 受影响记录行数: 0  已找到记录行: 0  警告: 0  持续时间 1 查询: 00:01:34.5 */</span><br><br><span class="hljs-comment">-- select count(*) from tb_test;  -- 936248</span><br><span class="hljs-comment">-- select * from tb_test order by id desc limit 10;</span><br><span class="hljs-comment">-- select * from tb_test where state=1 and deleted=1 limit 100;</span><br><span class="hljs-comment">-- truncate table tb_test;</span><br><span class="hljs-comment">-- ALTER TABLE `tb_test` AUTO_INCREMENT=1;</span><br><span class="hljs-comment">-- ALTER TABLE `tb_test` ENGINE=InnoDB;</span><br></code></pre></td></tr></table></figure><h4 id="3、删除binlog"><a href="#3、删除binlog" class="headerlink" title="3、删除binlog"></a>3、删除binlog</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-type">binary</span> logs;<br>purge <span class="hljs-type">binary</span> logs <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;mysql-bin.000006&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="4、ClickHouse同步"><a href="#4、ClickHouse同步" class="headerlink" title="4、ClickHouse同步"></a>4、ClickHouse同步</h4><p><code>CREATE DATABASE somedata_without_binlog ENGINE = MaterializeMySQL(&#39;10.10.10.16:3306&#39;, &#39;materialize_mysql&#39;, &#39;root&#39;, &#39;&lt;your_pass&gt;&#39;);</code></p><h4 id="5、验证数据"><a href="#5、验证数据" class="headerlink" title="5、验证数据"></a>5、验证数据</h4><p><code>select count(*) from materialize_mysql.mysql_table</code></p><h3 id="二、MaterializedMySQL引擎限制"><a href="#二、MaterializedMySQL引擎限制" class="headerlink" title="二、MaterializedMySQL引擎限制"></a>二、MaterializedMySQL引擎限制</h3><h4 id="1、数据类型支持"><a href="#1、数据类型支持" class="headerlink" title="1、数据类型支持"></a>1、数据类型支持</h4><p>官方版本：数据类型支持有限；阿里云版本：不支持类型全部转为string<br><strong>If MySQL table contains a column of such type, ClickHouse throws exception “Unhandled data type” and stops replication.</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>c.TABLE_SCHEMA ,<br>c.TABLE_NAME,<br>c.COLUMN_NAME,<br>c.DATA_TYPE<br><span class="hljs-keyword">FROM</span><br>information_schema.`COLUMNS` c<br><span class="hljs-keyword">WHERE</span><br>c.TABLE_SCHEMA <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test&#x27;</span><br><span class="hljs-keyword">AND</span> c.DATA_TYPE <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;time&#x27;</span>);<br></code></pre></td></tr></table></figure><blockquote><p>DB::Exception: Unknown data type family: time: While executing MYSQL_QUERY_EVENT.</p></blockquote><h4 id="2、主键"><a href="#2、主键" class="headerlink" title="2、主键"></a>2、主键</h4><p>Each table in MySQL should contain PRIMARY KEY.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>t.TABLE_SCHEMA,<br>t.TABLE_NAME,<br>t.TABLE_ROWS<br><span class="hljs-keyword">FROM</span><br>information_schema.TABLES t<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> information_schema.columns c <span class="hljs-keyword">ON</span><br>t.TABLE_SCHEMA <span class="hljs-operator">=</span> c.TABLE_SCHEMA<br><span class="hljs-keyword">AND</span> t.TABLE_NAME <span class="hljs-operator">=</span> c.TABLE_NAME<br><span class="hljs-keyword">AND</span> t.TABLE_TYPE <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;BASE TABLE&#x27;</span><br><span class="hljs-keyword">AND</span> c.COLUMN_KEY <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;PRI&#x27;</span><br><span class="hljs-keyword">WHERE</span><br>t.TABLE_SCHEMA <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;test&#x27;</span><br><span class="hljs-keyword">AND</span> t.TABLE_TYPE <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;BASE TABLE&#x27;</span><br><span class="hljs-keyword">AND</span> c.COLUMN_KEY <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>t.TABLE_SCHEMA,<br>t.TABLE_NAME;<br></code></pre></td></tr></table></figure><blockquote><p>DB::Exception: The test.mysql_table_without_primary cannot be materialized, because there is no primary keys.</p></blockquote><h4 id="3、ENUM字段超出范围"><a href="#3、ENUM字段超出范围" class="headerlink" title="3、ENUM字段超出范围"></a>3、ENUM字段超出范围</h4><h4 id="4、级联UPDATE-DELETE查询"><a href="#4、级联UPDATE-DELETE查询" class="headerlink" title="4、级联UPDATE/DELETE查询"></a>4、级联UPDATE/DELETE查询</h4><p>Cascade UPDATE/DELETE queries are not supported by the MaterializedMySQL engine.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `mysql_table` (<br>  `id` <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `create_at` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;2020-08-25 10:10:10&#x27;</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;名字&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;测试&#x27;</span>;<br><span class="hljs-comment">-- </span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">into</span> materialize_mysql.mysql_table (NAME) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;boer&#x27;</span>);<br><span class="hljs-keyword">update</span> materialize_mysql.mysql_table <span class="hljs-keyword">set</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;boer&#x27;</span> <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><blockquote><p>经测试：级联UPDATE可以正常同步</p></blockquote><h3 id="三、参考链接"><a href="#三、参考链接" class="headerlink" title="三、参考链接"></a>三、参考链接</h3><ul><li><a href="https://clickhouse.tech/docs/en/engines/database-engines/materialized-mysql/">https://clickhouse.tech/docs/en/engines/database-engines/materialized-mysql/</a></li><li><a href="https://help.aliyun.com/document_detail/209912.html">https://help.aliyun.com/document_detail/209912.html</a></li><li><a href="https://www.jianshu.com/p/d0d4306411b3">https://www.jianshu.com/p/d0d4306411b3</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>BigData</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ClickHouse</tag>
      
      <tag>MySQL</tag>
      
      <tag>MaterializeMySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenVPN with ldap认证实践</title>
    <link href="/2021/07/28/openvpn-ha-with-ldap/"/>
    <url>/2021/07/28/openvpn-ha-with-ldap/</url>
    
    <content type="html"><![CDATA[<p>个人VPN青睐排行：<br>OpenConnect VPN Server(OCServ)<br>WireGuard<br>OpenVPN</p><p>OpenVPN社区版实践笔记<a href="https://openvpn.net/community/">https://openvpn.net/community/</a><br>高可用的思考：<br>保证多个实例证书相同(easy-rsa工具生成证书拷贝到多个实例)<br>1、在客户端配置多个remote，且随机选择remote-random<br>2、HAProxy负载均衡代理</p><span id="more"></span><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">### 版本</span><br><span class="hljs-comment"># easy-rsa 3.0.8</span><br><span class="hljs-comment"># openvpn-auth-ldap 2.0.3</span><br><span class="hljs-comment"># openvpn 2.4.11</span><br>yum install openvpn easy-rsa iptables-services<br></code></pre></td></tr></table></figure><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /etc/openvpn/server/easy-rsa<br><span class="hljs-built_in">cp</span> -r /usr/share/easy-rsa/3.0.8/* /etc/openvpn/server/easy-rsa/<br><span class="hljs-built_in">cp</span> /usr/share/doc/easy-rsa-3.0.8/vars.example /etc/openvpn/server/easy-rsa/vars<br><span class="hljs-comment">###</span><br><span class="hljs-comment"># vim /etc/openvpn/server/easy-rsa/vars</span><br>set_var EASYRSA_REQ_COUNTRY<span class="hljs-string">&quot;CN&quot;</span><br>set_var EASYRSA_REQ_PROVINCE<span class="hljs-string">&quot;Chongqing&quot;</span><br>set_var EASYRSA_REQ_CITY<span class="hljs-string">&quot;Chongqing&quot;</span><br>set_var EASYRSA_REQ_ORG<span class="hljs-string">&quot;Boer Inc.&quot;</span><br>set_var EASYRSA_REQ_EMAIL<span class="hljs-string">&quot;boer0924@gmail.com&quot;</span><br>set_var EASYRSA_REQ_OU<span class="hljs-string">&quot;boer&quot;</span><br>set_var EASYRSA_KEY_SIZE2048<br>set_var EASYRSA_ALGOrsa<br>set_var EASYRSA_CA_EXPIRE36500<br>set_var EASYRSA_CERT_EXPIRE36500<br><br><span class="hljs-built_in">source</span> ./vars<br><span class="hljs-comment">###</span><br>./easyrsa init-pki<br><br>./easyrsa build-ca nopass <span class="hljs-comment"># boer</span><br><br>./easyrsa gen-dh<br><br>./easyrsa build-server-full server nopass<br>./easyrsa build-client-full client nopass <span class="hljs-comment"># client/用户</span><br><br><span class="hljs-built_in">mkdir</span> /etc/openvpn/server/certs/<br><span class="hljs-built_in">cp</span> -r ca.crt dh.pem issued/*.crt private/*.key /etc/openvpn/server/certs/<br><span class="hljs-built_in">cd</span> /etc/openvpn/server<br>openvpn --genkey --secret ta.key<br><span class="hljs-built_in">cp</span> ta.key /etc/openvpn/server/certs/<br></code></pre></td></tr></table></figure><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><ul><li><a href="https://github.com/OpenVPN/openvpn/blob/master/sample/sample-config-files/server.conf">https://github.com/OpenVPN/openvpn/blob/master/sample/sample-config-files/server.conf</a></li><li><a href="https://github.com/OpenVPN/openvpn/blob/v2.4.11/sample/sample-config-files/server.conf">https://github.com/OpenVPN/openvpn/blob/v2.4.11/sample/sample-config-files/server.conf</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs conf">### /etc/openvpn/server<br>### touch server.conf<br>local 10.10.253.16<br>port 1194<br><br>; proto udp<br>proto tcp<br><br>; 使用三层路由IP隧道(tun)还是二层以太网隧道(tap)。一般都使用tun<br>dev tun<br><br>persist-key<br>persist-tun<br><br>ca certs/ca.crt<br>cert certs/server.crt<br>key certs/server.key<br>dh certs/dh.pem<br>tls-auth certs/ta.key 0<br><br>duplicate-cn<br><br>cipher AES-256-CBC<br><br>; comp-lzo<br>compress lz4-v2<br>push &quot;compress lz4-v2&quot;<br><br>ifconfig-pool-persist ipp.txt<br>server 172.30.1.0 255.255.255.0<br>; push &quot;redirect-gateway def1 bypass-dhcp&quot;<br>push &quot;dhcp-option DNS 223.5.5.5&quot;<br>push &quot;dhcp-option DNS 223.6.6.6&quot;<br>; vpn服务端向客户端推送vpn服务端内网网段的路由配置，以便让客户端能够找到服务端内网。多条路由就写多个Push指令<br>client-config-dir ccd<br>push &quot;route 10.0.0.0 255.255.0.0&quot;<br>push &quot;route 10.96.0.0 255.240.0.0&quot;<br>max-clients 100<br>; 让vpn客户端之间可以互相看见对方，即能互相通信。默认情况客户端只能看到服务端一个人,默认是注释的，不能客户端之间相互看见<br>client-to-client<br><br>; user openvpn<br>; group openvpn<br>keepalive 10 120<br>status openvpn-status.log<br>log openvpn.log<br>verb 3<br>; explicit-exit-notify 1<br>plugin /usr/lib64/openvpn/plugin/lib/openvpn-auth-ldap.so /etc/openvpn/auth/ldap.conf # openvpn-auth-ldap<br>client-cert-not-required # ldap auth<br></code></pre></td></tr></table></figure><h3 id="LDAP配置"><a href="#LDAP配置" class="headerlink" title="LDAP配置"></a>LDAP配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs conf">&lt;LDAP&gt;<br>URLldap://10.10.253.16:10389<br>BindDNcn=admin,dc=boer,dc=xyz<br>Password&lt;your_password&gt;<br>Timeout15<br>TLSEnableno<br>FollowReferrals no<br>&lt;/LDAP&gt;<br><br>&lt;Authorization&gt;<br>BaseDN&quot;ou=users,dc=boer,dc=xyz&quot;<br>SearchFilter&quot;uid=%u&quot;<br>RequireGroupfalse # 2.0.3bug<br>&lt;Group&gt;<br>BaseDN&quot;ou=groups,dc=boer,dc=xyz&quot;<br>SearchFilter&quot;(|(cn=developers)(cn=devops))&quot;<br>MemberAttributememberUid<br>&lt;/Group&gt;<br>&lt;/Authorization&gt;<br></code></pre></td></tr></table></figure><p>启动服务<code>systemctl start openvpn-server@server.service</code></p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ul><li><a href="https://openvpn.net/community-downloads/">https://openvpn.net/community-downloads/</a></li><li><a href="https://github.com/OpenVPN/openvpn/blob/v2.4.11/sample/sample-config-files/client.conf">https://github.com/OpenVPN/openvpn/blob/v2.4.11/sample/sample-config-files/client.conf</a></li></ul><p>1、下载服务端证书到本地</p><ul><li>ca.crt</li><li>ta.key</li><li>client.crt [可选]</li><li>client.key [可选]</li></ul><p>2、配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs conf">### Windows client.ovpn<br>client<br>;dev tap<br>dev tun<br>proto tcp<br>;proto udp<br>remote 10.10.253.16 1194<br>;remote my-server-2 1194<br>;remote-random<br>resolv-retry infinite<br>nobind<br>persist-key<br>persist-tun<br>ca ca.crt<br>; cert client.crt<br>; key client.key<br>auth-user-pass # ldap auth<br>remote-cert-tls server<br>tls-auth ta.key 1<br>cipher AES-256-CBC<br>verb 3<br></code></pre></td></tr></table></figure><h3 id="他山之石"><a href="#他山之石" class="headerlink" title="他山之石"></a>他山之石</h3><ul><li><a href="https://www.mtyun.com/library/how-to-install-OpenVPN">https://www.mtyun.com/library/how-to-install-OpenVPN</a></li><li><a href="http://www.itca.cc/VPN%E6%90%AD%E5%BB%BA/openvpn-1.html">在 CentOS7 上搭建 OpenVPN 服务端并添加用户</a></li><li><a href="https://i4t.com/4485.html">OpenVPN 设置账号密码登录</a></li><li><a href="https://www.liujason.com/old-blog/1698.html">基于用户名/密码认证和流量控制的OpenVPN系统配置</a></li><li><a href="https://blog.frognew.com/2017/09/openvpn-integration-ldap.html">OpenVPN集成LDAP认证</a></li><li><a href="https://mrpastor.github.io/2018-02-03/openvpn%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E9%85%8D%E7%BD%AE/">https://mrpastor.github.io/2018-02-03/openvpn%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E9%85%8D%E7%BD%AE/</a></li><li><a href="https://blog.nuface.tw/?p=1347">https://blog.nuface.tw/?p=1347</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ocserv</tag>
      
      <tag>VPN</tag>
      
      <tag>OpenVPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>N-Way Multi-Provider OpenLDAP实践</title>
    <link href="/2021/07/25/openldap-ha/"/>
    <url>/2021/07/25/openldap-ha/</url>
    
    <content type="html"><![CDATA[<p>Replicated directories are a fundamental requirement for delivering a resilient enterprise deployment.</p><span id="more"></span><table><thead><tr><th>Server ID</th><th>IP Address</th><th>Port</th><th>RootDomain</th></tr></thead><tbody><tr><td>1</td><td>10.10.253.16</td><td>10389</td><td>dc=boer,dc=xyz</td></tr><tr><td>2</td><td>10.10.253.17</td><td>10389</td><td>dc=boer,dc=xyz</td></tr></tbody></table><h3 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h3><p>yum install openldap openldap-servers openldap-clients</p><ul><li>openldap-2.4.44-23.el7_9.x86_64</li><li>openldap-clients-2.4.44-23.el7_9.x86_64</li><li>openldap-servers-2.4.44-23.el7_9.x86_64</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG<br><span class="hljs-built_in">chown</span> ldap:ldap /var/lib/ldap/DB_CONFIG<br></code></pre></td></tr></table></figure><h3 id="更改默认端口"><a href="#更改默认端口" class="headerlink" title="更改默认端口"></a>更改默认端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysconfig/slapd<br>SLAPD_URLS=<span class="hljs-string">&quot;ldapi:/// ldap://127.0.0.1 ldap://10.10.253.17:10389&quot;</span><br><br><span class="hljs-comment"># 最后面不能加/</span><br><span class="hljs-comment"># https://www.openldap.com/lists/openldap-technical/201908/msg00064.html</span><br></code></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p><code>slappasswd -s &lt;your plain password&gt;</code></p><h3 id="根域"><a href="#根域" class="headerlink" title="根域"></a>根域</h3><p>rootdomain.ldif<br>ldapmodify -H ldapi:/// -f rootdomain.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">dn</span>: olcDatabase=&#123;2&#125;hdb,cn=config<br><span class="hljs-attribute">changetype</span>: modify<br><span class="hljs-attribute">replace</span>: olcRootDN<br><span class="hljs-attribute">olcRootDN</span>: cn=admin,dc=boer,dc=xyz<br><span class="hljs-literal">-</span><br><span class="hljs-attribute">replace</span>: olcSuffix<br><span class="hljs-attribute">olcSuffix</span>: dc=boer,dc=xyz<br><span class="hljs-literal">-</span><br><span class="hljs-attribute">replace</span>: olcRootPW<br><span class="hljs-attribute">olcRootPW</span>: &#123;SSHA&#125;TB15thSmhidpmyPOl2wXe0j0R5AU2kph<br><br><span class="hljs-attribute">dn</span>: olcDatabase=&#123;1&#125;monitor,cn=config<br><span class="hljs-attribute">changetype</span>: modify<br><span class="hljs-attribute">replace</span>: olcAccess<br><span class="hljs-attribute">olcAccess</span>: &#123;0&#125;to * by dn.base=&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=extern<br> al,cn=auth&quot; read by dn.base=&quot;cn=admin,dc=boer,dc=xyz&quot; read by * none<br></code></pre></td></tr></table></figure><h3 id="导入schema"><a href="#导入schema" class="headerlink" title="导入schema"></a>导入schema</h3><p>ls /etc/openldap/schema/*.ldif | while read f; do ldapadd -Y EXTERNAL -H ldapi:/// -f $f; done</p><h3 id="默认域"><a href="#默认域" class="headerlink" title="默认域"></a>默认域</h3><p>basedomain.ldif<br>ldapadd -H ldapi:/// -f basedomain.ldif<br>ldapadd -x -H ldapi:/// -D cn=admin,dc=boer,dc=xyz -W -f basedomain.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment"># vim basedomain.ldif</span><br><span class="hljs-attribute">dn</span>: dc=boer,dc=xyz<br><span class="hljs-attribute">objectClass</span>: top<br><span class="hljs-attribute">objectClass</span>: dcObject<br><span class="hljs-attribute">objectclass</span>: organization<br><span class="hljs-attribute">o</span>: Boer Inc<br><span class="hljs-attribute">dc</span>: boer<br><br><span class="hljs-attribute">dn</span>: ou=users,dc=boer,dc=xyz<br><span class="hljs-attribute">objectClass</span>: organizationalUnit<br><span class="hljs-attribute">ou</span>: users<br><br><span class="hljs-attribute">dn</span>: ou=groups,dc=boer,dc=xyz<br><span class="hljs-attribute">objectClass</span>: organizationalUnit<br><span class="hljs-attribute">ou</span>: groups<br></code></pre></td></tr></table></figure><h3 id="HA"><a href="#HA" class="headerlink" title="HA"></a>HA</h3><p>syncprov_mod.ldif<br>ldapadd -H ldapi:/// -f syncprov_mod.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">dn</span>: cn=module,cn=config<br><span class="hljs-attribute">objectClass</span>: olcModuleList<br><span class="hljs-attribute">cn</span>: module<br><span class="hljs-attribute">olcModulePath</span>: /usr/local/libexec/openldap<br><span class="hljs-attribute">olcModuleLoad</span>: syncprov.la<br></code></pre></td></tr></table></figure><p>config_repl.ldif<br>ldapmodify -H ldapi:/// -f config_repl.ldif</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment">### Update Server ID with LDAP URL ###</span><br><span class="hljs-attribute">dn</span>: cn=config<br><span class="hljs-attribute">changetype</span>: modify<br><span class="hljs-attribute">replace</span>: olcServerID<br><span class="hljs-attribute">olcServerID</span>: 1 ldap://10.10.253.16:10389<br><span class="hljs-attribute">olcServerID</span>: 2 ldap://10.10.253.17:10389<br><br><span class="hljs-comment">### Enable replication ###</span><br><span class="hljs-comment">### config repl</span><br><span class="hljs-attribute">dn</span>: olcOverlay=syncprov,olcDatabase=&#123;0&#125;config,cn=config<br><span class="hljs-attribute">changetype</span>: add<br><span class="hljs-attribute">objectClass</span>: olcOverlayConfig<br><span class="hljs-attribute">objectClass</span>: olcSyncProvConfig<br><span class="hljs-attribute">olcOverlay</span>: syncprov<br><br><span class="hljs-comment">### config repl details</span><br><span class="hljs-attribute">dn</span>: olcDatabase=&#123;0&#125;config,cn=config<br><span class="hljs-attribute">changetype</span>: modify<br><span class="hljs-attribute">add</span>: olcSyncRepl<br><span class="hljs-attribute">olcSyncRepl</span>:<br>  rid=001<br>  provider=ldap://10.10.253.16:10389<br>  binddn=&quot;cn=admin,dc=boer,dc=xyz&quot;<br>  bindmethod=simple<br>  credentials=Root_123<br>  searchbase=&quot;cn=config&quot;<br>  type=refreshAndPersist<br>  retry=&quot;5 5 300 5&quot;<br>  timeout=1<br><span class="hljs-attribute">olcSyncRepl</span>:<br>  rid=002<br>  provider=ldap://10.10.253.17:10389<br>  binddn=&quot;cn=admin,dc=boer,dc=xyz&quot;<br>  bindmethod=simple<br>  credentials=Root_123<br>  searchbase=&quot;cn=config&quot;<br>  type=refreshAndPersist<br>  retry=&quot;5 5 300 5&quot;<br>  timeout=1<br><span class="hljs-literal">-</span><br><span class="hljs-attribute">add</span>: olcMirrorMode<br><span class="hljs-attribute">olcMirrorMode</span>: TRUE<br><br><span class="hljs-comment">###</span><br><span class="hljs-comment">### hdb data repl</span><br><span class="hljs-attribute">dn</span>: olcOverlay=syncprov,olcDatabase=&#123;2&#125;hdb,cn=config<br><span class="hljs-attribute">changetype</span>: add<br><span class="hljs-attribute">objectClass</span>: olcOverlayConfig<br><span class="hljs-attribute">objectClass</span>: olcSyncProvConfig<br><span class="hljs-attribute">olcOverlay</span>: syncprov<br><br><span class="hljs-comment">### Adding details for replication ###</span><br><span class="hljs-attribute">dn</span>: olcDatabase=&#123;2&#125;hdb,cn=config<br><span class="hljs-attribute">changetype</span>: modify<br><span class="hljs-attribute">add</span>: olcSyncRepl<br><span class="hljs-attribute">olcSyncRepl</span>:<br>  rid=001<br>  provider=ldap://10.10.253.16:10389<br>  binddn=&quot;cn=admin,dc=boer,dc=xyz&quot;<br>  bindmethod=simple<br>  credentials=Root_123<br>  searchbase=&quot;dc=boer,dc=xyz&quot;<br>  type=refreshAndPersist<br>  retry=&quot;5 5 300 5&quot;<br>  timeout=1<br><span class="hljs-attribute">olcSyncRepl</span>:<br>  rid=002<br>  provider=ldap://10.10.253.17:10389<br>  binddn=&quot;cn=admin,dc=boer,dc=xyz&quot;<br>  bindmethod=simple<br>  credentials=Root_123<br>  searchbase=&quot;dc=boer,dc=xyz&quot;<br>  type=refreshAndPersist<br>  retry=&quot;5 5 300 5&quot;<br>  timeout=1<br><span class="hljs-literal">-</span><br><span class="hljs-attribute">add</span>: olcMirrorMode<br><span class="hljs-attribute">olcMirrorMode</span>: TRUE<br></code></pre></td></tr></table></figure><h3 id="管理端LDAP-Admin"><a href="#管理端LDAP-Admin" class="headerlink" title="管理端LDAP Admin"></a>管理端LDAP Admin</h3><p>LDAP Admin</p><p>ldapmodify<br>ldapadd<br>ldapdelete<br>ldapsearch<br>slaptest -u</p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://www.openldap.org/doc/admin24/replication.html">https://www.openldap.org/doc/admin24/replication.html</a></li><li><a href="https://www.jianshu.com/p/d7fbeb12d138">https://www.jianshu.com/p/d7fbeb12d138</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenLDAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ClickHouse分布式实践</title>
    <link href="/2021/07/01/clickhouse-distributed/"/>
    <url>/2021/07/01/clickhouse-distributed/</url>
    
    <content type="html"><![CDATA[<p>ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)</p><span id="more"></span><h3 id="ClickHouse配置"><a href="#ClickHouse配置" class="headerlink" title="ClickHouse配置"></a>ClickHouse配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">yandex</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">level</span>&gt;</span>information<span class="hljs-tag">&lt;/<span class="hljs-name">level</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">log</span>&gt;</span>/var/log/clickhouse-server/clickhouse-server.log<span class="hljs-tag">&lt;/<span class="hljs-name">log</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">errorlog</span>&gt;</span>/var/log/clickhouse-server/clickhouse-server.err.log<span class="hljs-tag">&lt;/<span class="hljs-name">errorlog</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">size</span>&gt;</span>1000M<span class="hljs-tag">&lt;/<span class="hljs-name">size</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">count</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">count</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">listen_host</span>&gt;</span>0.0.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">listen_host</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">timezone</span>&gt;</span>Asia/Shanghai<span class="hljs-tag">&lt;/<span class="hljs-name">timezone</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">max_connections</span>&gt;</span>4096<span class="hljs-tag">&lt;/<span class="hljs-name">max_connections</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">max_concurrent_queries</span>&gt;</span>100<span class="hljs-tag">&lt;/<span class="hljs-name">max_concurrent_queries</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">max_thread_pool_size</span>&gt;</span>10000<span class="hljs-tag">&lt;/<span class="hljs-name">max_thread_pool_size</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span>&gt;</span>/var/lib/clickhouse/<span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tmp_path</span>&gt;</span>/var/lib/clickhouse/tmp/<span class="hljs-tag">&lt;/<span class="hljs-name">tmp_path</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">user_files_path</span>&gt;</span>/var/lib/clickhouse/user_files/<span class="hljs-tag">&lt;/<span class="hljs-name">user_files_path</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">remote_servers</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mycluster</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- Optional. Shard weight when writing data. Default: 1. --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">weight</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">weight</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- Optional. Whether to write data to just one of the replicas. Default: false (write data to all replicas). --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">internal_replication</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">internal_replication</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mycluster</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">remote_servers</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">zookeeper</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">zookeeper</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- vm-node001 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- vm-node002 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- vm-node003 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">yandex</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><ul><li><a href="https://clickhouse.tech/docs/zh/engines/table-engines/mergetree-family/replication/">https://clickhouse.tech/docs/zh/engines/table-engines/mergetree-family/replication/</a></li><li><a href="https://clickhouse.tech/docs/zh/getting-started/tutorial/">https://clickhouse.tech/docs/zh/getting-started/tutorial/</a></li></ul></blockquote><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> tutorial<br></code></pre></td></tr></table></figure><h3 id="创建本地表hits-v1"><a href="#创建本地表hits-v1" class="headerlink" title="创建本地表hits_v1"></a>创建本地表<code>hits_v1</code></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tutorial.hits_v1<br>(<br>    `WatchID` UInt64,<br>    `JavaEnable` UInt8,<br>    `Title` String,<br>    `GoodEvent` Int16,<br>    `EventTime` DateTime,<br>    `EventDate` <span class="hljs-type">Date</span>,<br>    `CounterID` UInt32,<br>    `ClientIP` UInt32,<br>    `ClientIP6` FixedString(<span class="hljs-number">16</span>),<br>    `RegionID` UInt32,<br>    `UserID` UInt64,<br>    `CounterClass` Int8,<br>    `OS` UInt8,<br>    `UserAgent` UInt8,<br>    `URL` String,<br>    `Referer` String,<br>    `URLDomain` String,<br>    `RefererDomain` String,<br>    `Refresh` UInt8,<br>    `IsRobot` UInt8,<br>    `RefererCategories` <span class="hljs-keyword">Array</span>(UInt16),<br>    `URLCategories` <span class="hljs-keyword">Array</span>(UInt16),<br>    `URLRegions` <span class="hljs-keyword">Array</span>(UInt32),<br>    `RefererRegions` <span class="hljs-keyword">Array</span>(UInt32),<br>    `ResolutionWidth` UInt16,<br>    `ResolutionHeight` UInt16,<br>    `ResolutionDepth` UInt8,<br>    `FlashMajor` UInt8,<br>    `FlashMinor` UInt8,<br>    `FlashMinor2` String,<br>    `NetMajor` UInt8,<br>    `NetMinor` UInt8,<br>    `UserAgentMajor` UInt16,<br>    `UserAgentMinor` FixedString(<span class="hljs-number">2</span>),<br>    `CookieEnable` UInt8,<br>    `JavascriptEnable` UInt8,<br>    `IsMobile` UInt8,<br>    `MobilePhone` UInt8,<br>    `MobilePhoneModel` String,<br>    `Params` String,<br>    `IPNetworkID` UInt32,<br>    `TraficSourceID` Int8,<br>    `SearchEngineID` UInt16,<br>    `SearchPhrase` String,<br>    `AdvEngineID` UInt8,<br>    `IsArtifical` UInt8,<br>    `WindowClientWidth` UInt16,<br>    `WindowClientHeight` UInt16,<br>    `ClientTimeZone` Int16,<br>    `ClientEventTime` DateTime,<br>    `SilverlightVersion1` UInt8,<br>    `SilverlightVersion2` UInt8,<br>    `SilverlightVersion3` UInt32,<br>    `SilverlightVersion4` UInt16,<br>    `PageCharset` String,<br>    `CodeVersion` UInt32,<br>    `IsLink` UInt8,<br>    `IsDownload` UInt8,<br>    `IsNotBounce` UInt8,<br>    `FUniqID` UInt64,<br>    `HID` UInt32,<br>    `IsOldCounter` UInt8,<br>    `IsEvent` UInt8,<br>    `IsParameter` UInt8,<br>    `DontCountHits` UInt8,<br>    `WithHash` UInt8,<br>    `HitColor` FixedString(<span class="hljs-number">1</span>),<br>    `UTCEventTime` DateTime,<br>    `Age` UInt8,<br>    `Sex` UInt8,<br>    `Income` UInt8,<br>    `Interests` UInt16,<br>    `Robotness` UInt8,<br>    `GeneralInterests` <span class="hljs-keyword">Array</span>(UInt16),<br>    `RemoteIP` UInt32,<br>    `RemoteIP6` FixedString(<span class="hljs-number">16</span>),<br>    `WindowName` Int32,<br>    `OpenerName` Int32,<br>    `HistoryLength` Int16,<br>    `BrowserLanguage` FixedString(<span class="hljs-number">2</span>),<br>    `BrowserCountry` FixedString(<span class="hljs-number">2</span>),<br>    `SocialNetwork` String,<br>    `SocialAction` String,<br>    `HTTPError` UInt16,<br>    `SendTiming` Int32,<br>    `DNSTiming` Int32,<br>    `ConnectTiming` Int32,<br>    `ResponseStartTiming` Int32,<br>    `ResponseEndTiming` Int32,<br>    `FetchTiming` Int32,<br>    `RedirectTiming` Int32,<br>    `DOMInteractiveTiming` Int32,<br>    `DOMContentLoadedTiming` Int32,<br>    `DOMCompleteTiming` Int32,<br>    `LoadEventStartTiming` Int32,<br>    `LoadEventEndTiming` Int32,<br>    `NSToDOMContentLoadedTiming` Int32,<br>    `FirstPaintTiming` Int32,<br>    `RedirectCount` Int8,<br>    `SocialSourceNetworkID` UInt8,<br>    `SocialSourcePage` String,<br>    `ParamPrice` Int64,<br>    `ParamOrderID` String,<br>    `ParamCurrency` FixedString(<span class="hljs-number">3</span>),<br>    `ParamCurrencyID` UInt16,<br>    `GoalsReached` <span class="hljs-keyword">Array</span>(UInt32),<br>    `OpenstatServiceName` String,<br>    `OpenstatCampaignID` String,<br>    `OpenstatAdID` String,<br>    `OpenstatSourceID` String,<br>    `UTMSource` String,<br>    `UTMMedium` String,<br>    `UTMCampaign` String,<br>    `UTMContent` String,<br>    `UTMTerm` String,<br>    `FromTag` String,<br>    `HasGCLID` UInt8,<br>    `RefererHash` UInt64,<br>    `URLHash` UInt64,<br>    `CLID` UInt32,<br>    `YCLID` UInt64,<br>    `ShareService` String,<br>    `ShareURL` String,<br>    `ShareTitle` String,<br>    `ParsedParams` Nested(<br>        Key1 String,<br>        Key2 String,<br>        Key3 String,<br>        Key4 String,<br>        Key5 String,<br>        ValueDouble Float64),<br>    `IslandID` FixedString(<span class="hljs-number">16</span>),<br>    `RequestNum` UInt32,<br>    `RequestTry` UInt8<br>)<br>ENGINE <span class="hljs-operator">=</span> ReplicatedMergeTree(<span class="hljs-string">&#x27;/clickhouse/tables/&#123;layer&#125;-&#123;shard&#125;/hits_v1&#x27;</span>, <span class="hljs-string">&#x27;&#123;replica&#125;&#x27;</span>)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> toYYYYMM(EventDate)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> (CounterID, EventDate, intHash32(UserID))<br>SAMPLE <span class="hljs-keyword">BY</span> intHash32(UserID)<br></code></pre></td></tr></table></figure><h3 id="创建本地表visits-v1"><a href="#创建本地表visits-v1" class="headerlink" title="创建本地表visits_v1"></a>创建本地表<code>visits_v1</code></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tutorial.visits_v1<br>(<br>    `CounterID` UInt32,<br>    `StartDate` <span class="hljs-type">Date</span>,<br>    `Sign` Int8,<br>    `IsNew` UInt8,<br>    `VisitID` UInt64,<br>    `UserID` UInt64,<br>    `StartTime` DateTime,<br>    `Duration` UInt32,<br>    `UTCStartTime` DateTime,<br>    `PageViews` Int32,<br>    `Hits` Int32,<br>    `IsBounce` UInt8,<br>    `Referer` String,<br>    `StartURL` String,<br>    `RefererDomain` String,<br>    `StartURLDomain` String,<br>    `EndURL` String,<br>    `LinkURL` String,<br>    `IsDownload` UInt8,<br>    `TraficSourceID` Int8,<br>    `SearchEngineID` UInt16,<br>    `SearchPhrase` String,<br>    `AdvEngineID` UInt8,<br>    `PlaceID` Int32,<br>    `RefererCategories` <span class="hljs-keyword">Array</span>(UInt16),<br>    `URLCategories` <span class="hljs-keyword">Array</span>(UInt16),<br>    `URLRegions` <span class="hljs-keyword">Array</span>(UInt32),<br>    `RefererRegions` <span class="hljs-keyword">Array</span>(UInt32),<br>    `IsYandex` UInt8,<br>    `GoalReachesDepth` Int32,<br>    `GoalReachesURL` Int32,<br>    `GoalReachesAny` Int32,<br>    `SocialSourceNetworkID` UInt8,<br>    `SocialSourcePage` String,<br>    `MobilePhoneModel` String,<br>    `ClientEventTime` DateTime,<br>    `RegionID` UInt32,<br>    `ClientIP` UInt32,<br>    `ClientIP6` FixedString(<span class="hljs-number">16</span>),<br>    `RemoteIP` UInt32,<br>    `RemoteIP6` FixedString(<span class="hljs-number">16</span>),<br>    `IPNetworkID` UInt32,<br>    `SilverlightVersion3` UInt32,<br>    `CodeVersion` UInt32,<br>    `ResolutionWidth` UInt16,<br>    `ResolutionHeight` UInt16,<br>    `UserAgentMajor` UInt16,<br>    `UserAgentMinor` UInt16,<br>    `WindowClientWidth` UInt16,<br>    `WindowClientHeight` UInt16,<br>    `SilverlightVersion2` UInt8,<br>    `SilverlightVersion4` UInt16,<br>    `FlashVersion3` UInt16,<br>    `FlashVersion4` UInt16,<br>    `ClientTimeZone` Int16,<br>    `OS` UInt8,<br>    `UserAgent` UInt8,<br>    `ResolutionDepth` UInt8,<br>    `FlashMajor` UInt8,<br>    `FlashMinor` UInt8,<br>    `NetMajor` UInt8,<br>    `NetMinor` UInt8,<br>    `MobilePhone` UInt8,<br>    `SilverlightVersion1` UInt8,<br>    `Age` UInt8,<br>    `Sex` UInt8,<br>    `Income` UInt8,<br>    `JavaEnable` UInt8,<br>    `CookieEnable` UInt8,<br>    `JavascriptEnable` UInt8,<br>    `IsMobile` UInt8,<br>    `BrowserLanguage` UInt16,<br>    `BrowserCountry` UInt16,<br>    `Interests` UInt16,<br>    `Robotness` UInt8,<br>    `GeneralInterests` <span class="hljs-keyword">Array</span>(UInt16),<br>    `Params` <span class="hljs-keyword">Array</span>(String),<br>    `Goals` Nested(<br>        ID UInt32,<br>        Serial UInt32,<br>        EventTime DateTime,<br>        Price Int64,<br>        OrderID String,<br>        CurrencyID UInt32),<br>    `WatchIDs` <span class="hljs-keyword">Array</span>(UInt64),<br>    `ParamSumPrice` Int64,<br>    `ParamCurrency` FixedString(<span class="hljs-number">3</span>),<br>    `ParamCurrencyID` UInt16,<br>    `ClickLogID` UInt64,<br>    `ClickEventID` Int32,<br>    `ClickGoodEvent` Int32,<br>    `ClickEventTime` DateTime,<br>    `ClickPriorityID` Int32,<br>    `ClickPhraseID` Int32,<br>    `ClickPageID` Int32,<br>    `ClickPlaceID` Int32,<br>    `ClickTypeID` Int32,<br>    `ClickResourceID` Int32,<br>    `ClickCost` UInt32,<br>    `ClickClientIP` UInt32,<br>    `ClickDomainID` UInt32,<br>    `ClickURL` String,<br>    `ClickAttempt` UInt8,<br>    `ClickOrderID` UInt32,<br>    `ClickBannerID` UInt32,<br>    `ClickMarketCategoryID` UInt32,<br>    `ClickMarketPP` UInt32,<br>    `ClickMarketCategoryName` String,<br>    `ClickMarketPPName` String,<br>    `ClickAWAPSCampaignName` String,<br>    `ClickPageName` String,<br>    `ClickTargetType` UInt16,<br>    `ClickTargetPhraseID` UInt64,<br>    `ClickContextType` UInt8,<br>    `ClickSelectType` Int8,<br>    `ClickOptions` String,<br>    `ClickGroupBannerID` Int32,<br>    `OpenstatServiceName` String,<br>    `OpenstatCampaignID` String,<br>    `OpenstatAdID` String,<br>    `OpenstatSourceID` String,<br>    `UTMSource` String,<br>    `UTMMedium` String,<br>    `UTMCampaign` String,<br>    `UTMContent` String,<br>    `UTMTerm` String,<br>    `FromTag` String,<br>    `HasGCLID` UInt8,<br>    `FirstVisit` DateTime,<br>    `PredLastVisit` <span class="hljs-type">Date</span>,<br>    `LastVisit` <span class="hljs-type">Date</span>,<br>    `TotalVisits` UInt32,<br>    `TraficSource` Nested(<br>        ID Int8,<br>        SearchEngineID UInt16,<br>        AdvEngineID UInt8,<br>        PlaceID UInt16,<br>        SocialSourceNetworkID UInt8,<br>        Domain String,<br>        SearchPhrase String,<br>        SocialSourcePage String),<br>    `Attendance` FixedString(<span class="hljs-number">16</span>),<br>    `CLID` UInt32,<br>    `YCLID` UInt64,<br>    `NormalizedRefererHash` UInt64,<br>    `SearchPhraseHash` UInt64,<br>    `RefererDomainHash` UInt64,<br>    `NormalizedStartURLHash` UInt64,<br>    `StartURLDomainHash` UInt64,<br>    `NormalizedEndURLHash` UInt64,<br>    `TopLevelDomain` UInt64,<br>    `URLScheme` UInt64,<br>    `OpenstatServiceNameHash` UInt64,<br>    `OpenstatCampaignIDHash` UInt64,<br>    `OpenstatAdIDHash` UInt64,<br>    `OpenstatSourceIDHash` UInt64,<br>    `UTMSourceHash` UInt64,<br>    `UTMMediumHash` UInt64,<br>    `UTMCampaignHash` UInt64,<br>    `UTMContentHash` UInt64,<br>    `UTMTermHash` UInt64,<br>    `FromHash` UInt64,<br>    `WebVisorEnabled` UInt8,<br>    `WebVisorActivity` UInt32,<br>    `ParsedParams` Nested(<br>        Key1 String,<br>        Key2 String,<br>        Key3 String,<br>        Key4 String,<br>        Key5 String,<br>        ValueDouble Float64),<br>    `Market` Nested(<br>        Type UInt8,<br>        GoalID UInt32,<br>        OrderID String,<br>        OrderPrice Int64,<br>        PP UInt32,<br>        DirectPlaceID UInt32,<br>        DirectOrderID UInt32,<br>        DirectBannerID UInt32,<br>        GoodID String,<br>        GoodName String,<br>        GoodQuantity Int32,<br>        GoodPrice Int64),<br>    `IslandID` FixedString(<span class="hljs-number">16</span>)<br>)<br>ENGINE <span class="hljs-operator">=</span> ReplicatedCollapsingMergeTree(<span class="hljs-string">&#x27;/clickhouse/tables/&#123;layer&#125;-&#123;shard&#125;/visits_v1&#x27;</span>, <span class="hljs-string">&#x27;&#123;replica&#125;&#x27;</span>, Sign)<br><span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">BY</span> toYYYYMM(StartDate)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> (CounterID, StartDate, intHash32(UserID), VisitID)<br>SAMPLE <span class="hljs-keyword">BY</span> intHash32(UserID)<br></code></pre></td></tr></table></figure><p><strong>本地表需要在所有node上创建</strong></p><h3 id="创建分布式表"><a href="#创建分布式表" class="headerlink" title="创建分布式表"></a>创建分布式表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- hits_v1</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tutorial.hits_v1_dis <span class="hljs-keyword">ON</span> CLUSTER mycluster<br> <span class="hljs-keyword">AS</span> tutorial.hits_v1 <br>ENGINE <span class="hljs-operator">=</span> Distributed(mycluster, tutorial, hits_v1, rand())<br><span class="hljs-comment">-- visits_v1</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tutorial.visits_v1_dis <span class="hljs-keyword">ON</span> CLUSTER mycluster<br> <span class="hljs-keyword">AS</span> tutorial.visits_v1 <br>ENGINE <span class="hljs-operator">=</span> Distributed(mycluster, tutorial, visits_v1, rand())<br></code></pre></td></tr></table></figure><p><strong>分布式表在shard的其中一台创建即可，其他replica无需执行</strong></p><h3 id="导入测试数据"><a href="#导入测试数据" class="headerlink" title="导入测试数据"></a>导入测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://datasets.clickhouse.tech/hits/tsv/hits_v1.tsv.xz | unxz --threads=`<span class="hljs-built_in">nproc</span>` &gt; hits_v1.tsv<br>curl https://datasets.clickhouse.tech/visits/tsv/visits_v1.tsv.xz | unxz --threads=`<span class="hljs-built_in">nproc</span>` &gt; visits_v1.tsv<br><br>clickhouse-client --query <span class="hljs-string">&quot;INSERT INTO tutorial.hits_v1_dis FORMAT TSV&quot;</span> --max_insert_block_size=100000 &lt; hits_v1.tsv<br><br>clickhouse-client --query <span class="hljs-string">&quot;INSERT INTO tutorial.visits_v1_dis FORMAT TSV&quot;</span> --max_insert_block_size=100000 &lt; visits_v1.tsv<br></code></pre></td></tr></table></figure><h3 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> tutorial.hits_v1_dis<br><span class="hljs-comment">-- </span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> tutorial.visits_v1_dis<br><span class="hljs-comment">-- </span><br><span class="hljs-keyword">SELECT</span><br>    StartURL <span class="hljs-keyword">AS</span> URL,<br>    <span class="hljs-built_in">AVG</span>(Duration) <span class="hljs-keyword">AS</span> AvgDuration<br><span class="hljs-keyword">FROM</span> tutorial.visits_v1<br><span class="hljs-keyword">WHERE</span> StartDate <span class="hljs-keyword">BETWEEN</span> <span class="hljs-string">&#x27;2014-03-23&#x27;</span> <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;2014-03-30&#x27;</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> URL<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> AvgDuration <span class="hljs-keyword">DESC</span><br>LIMIT <span class="hljs-number">10</span><br><span class="hljs-comment">-- </span><br><span class="hljs-keyword">SELECT</span><br>    <span class="hljs-built_in">sum</span>(Sign) <span class="hljs-keyword">AS</span> visits,<br>    sumIf(Sign, has(Goals.ID, <span class="hljs-number">1105530</span>)) <span class="hljs-keyword">AS</span> goal_visits,<br>    (<span class="hljs-number">100.</span> <span class="hljs-operator">*</span> goal_visits) <span class="hljs-operator">/</span> visits <span class="hljs-keyword">AS</span> goal_percent<br><span class="hljs-keyword">FROM</span> tutorial.visits_v1<br><span class="hljs-keyword">WHERE</span> (CounterID <span class="hljs-operator">=</span> <span class="hljs-number">912887</span>) <span class="hljs-keyword">AND</span> (toYYYYMM(StartDate) <span class="hljs-operator">=</span> <span class="hljs-number">201403</span>) <span class="hljs-keyword">AND</span> (domain(StartURL) <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;yandex.ru&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Ops"><a href="#Ops" class="headerlink" title="Ops"></a>Ops</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>    cluster,<br>    shard_num,<br>    replica_num,<br>    host_name,<br>    is_local,<br>    <span class="hljs-keyword">user</span>,<br>    default_database<br><span class="hljs-keyword">FROM</span> system.clusters<br></code></pre></td></tr></table></figure><h3 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">yandex</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">users</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- If user name was not specified, &#x27;default&#x27; user is used. --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">user_name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- Or --&gt;</span><br>      <span class="hljs-comment">&lt;!-- PASSWORD=$(base64 &lt; /dev/urandom | head -c8); echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d &#x27;-&#x27; --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">password_sha256_hex</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">password_sha256_hex</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">access_management</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">access_management</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;<span class="hljs-name">networks</span> <span class="hljs-attr">incl</span>=<span class="hljs-string">&quot;networks&quot;</span> <span class="hljs-attr">replace</span>=<span class="hljs-string">&quot;replace&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">networks</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span>profile_name<span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;<span class="hljs-name">quota</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">quota</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;<span class="hljs-name">databases</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">database_name</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">table_name</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span>expression<span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">table_name</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">database_name</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">databases</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">user_name</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- Other users settings --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">users</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">yandex</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PASSWORD=$(<span class="hljs-built_in">base64</span> &lt; /dev/urandom | <span class="hljs-built_in">head</span> -c8); <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$PASSWORD</span>&quot;</span>; <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$PASSWORD</span>&quot;</span> | <span class="hljs-built_in">sha256sum</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;-&#x27;</span><br></code></pre></td></tr></table></figure><ul><li><a href="https://clickhouse.tech/docs/zh/operations/access-rights/">https://clickhouse.tech/docs/zh/operations/access-rights/</a></li></ul><h1 id="理想配置"><a href="#理想配置" class="headerlink" title="理想配置"></a>理想配置</h1><blockquote><ul><li><a href="https://altinity.com/blog/2018/5/10/circular-replication-cluster-topology-in-clickhouse">https://altinity.com/blog/2018/5/10/circular-replication-cluster-topology-in-clickhouse</a></li><li><a href="https://github.com/ClickHouse/ClickHouse/issues/1287">https://github.com/ClickHouse/ClickHouse/issues/1287</a></li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">remote_servers</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mycluster</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span><br>          <span class="hljs-comment">&lt;!-- Optional. Shard weight when writing data. Default: 1. --&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">weight</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">weight</span>&gt;</span><br>          <span class="hljs-comment">&lt;!-- Optional. Whether to write data to just one of the replicas. Default: false (write data to all replicas). --&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">internal_replication</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">internal_replication</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">weight</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">weight</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">internal_replication</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">internal_replication</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">weight</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">weight</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">internal_replication</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">internal_replication</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>9000<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mycluster</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">remote_servers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">zookeeper</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">host</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">host</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">port</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">port</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">node</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">zookeeper</span>&gt;</span><br><span class="hljs-comment">&lt;!-- vm-node001 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br><span class="hljs-comment">&lt;!-- vm-node002 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>02<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>02<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br><span class="hljs-comment">&lt;!-- vm-node003 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">macros</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">layer</span>&gt;</span>03<span class="hljs-tag">&lt;/<span class="hljs-name">layer</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">shard</span>&gt;</span>03<span class="hljs-tag">&lt;/<span class="hljs-name">shard</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">replica</span>&gt;</span>vm-node001<span class="hljs-tag">&lt;/<span class="hljs-name">replica</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">macros</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>BigData</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ClickHouse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据Hadoop-HBase集群环境构建</title>
    <link href="/2021/06/06/hadoop-hbase/"/>
    <url>/2021/06/06/hadoop-hbase/</url>
    
    <content type="html"><![CDATA[<p>HDFS NameNode DataNode<br>Yarn ResourceManager NodeManager<br>HBase HMaster HRegionServer</p><p>三个组件均采用Active-Standby主备模式，但Active选主方法不尽相同。<br>HDFS HA通过JournalNode选举active NameNode，通过ZKFC(DFSZKFailoverController)实现自动故障转移</p><p>服务启动方式基本相同<br>hadoop-daemon.sh<br>hadoop-daemons.sh<br>yarn-daemon.sh<br>yarn-daemons.sh<br>hbase-daemon.sh<br>hbase-daemons.sh</p><p>服务管理方式基本类似<br>hadoop/etc/hadoop/slaves<br>hbase/conf/backup-masters<br>hhase/conf/regionservers<br>通过定义target文件，使用ssh免密实现统一管理远程服务</p><span id="more"></span><h2 id="1-环境信息"><a href="#1-环境信息" class="headerlink" title="1. 环境信息"></a>1. 环境信息</h2><table><thead><tr><th>Hostname</th><th>IPAdress</th><th>Zookeeper</th><th>NameNode[ZKFC]</th><th>JournalNode</th><th>DataNode</th><th>ResourceManager</th><th>NodeManager</th><th>HMaster</th><th>HRegionServer</th></tr></thead><tbody><tr><td>vm-node001</td><td>10.10.253.16</td><td>yes</td><td>yes</td><td>yes</td><td>no</td><td>no</td><td>no</td><td>yes</td><td>yes</td></tr><tr><td>vm-node002</td><td>10.10.253.17</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td><td>no</td><td>yes</td></tr><tr><td>vm-node003</td><td>10.10.253.18</td><td>yes</td><td>no</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td></tr></tbody></table><p><strong>注意配置hosts/dns</strong></p><h2 id="2-版本选择"><a href="#2-版本选择" class="headerlink" title="2. 版本选择"></a>2. 版本选择</h2><p><a href="https://hbase.apache.org/book.html#hadoop">https://hbase.apache.org/book.html#hadoop</a><br><strong>Hadoop 2.x is recommended.</strong></p><p><a href="https://hadoop.apache.org/docs/r2.10.1/">https://hadoop.apache.org/docs/r2.10.1/</a></p><p><strong>Binary download</strong></p><ul><li>curl -LO <a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz">https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz</a></li><li>curl -LO <a href="https://downloads.apache.org/hbase/2.3.5/hbase-2.3.5-bin.tar.gz">https://downloads.apache.org/hbase/2.3.5/hbase-2.3.5-bin.tar.gz</a></li><li>curl -LO <a href="https://downloads.apache.org/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz">https://downloads.apache.org/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz</a></li><li>curl -LO <a href="https://archive.apache.org/dist/pulsar/pulsar-2.6.4/apache-pulsar-2.6.4-bin.tar.gz">https://archive.apache.org/dist/pulsar/pulsar-2.6.4/apache-pulsar-2.6.4-bin.tar.gz</a></li><li>curl -LO <a href="https://mirrors.bfsu.edu.cn/apache/flink/flink-1.12.4/flink-1.12.4-bin-scala_2.11.tgz">https://mirrors.bfsu.edu.cn/apache/flink/flink-1.12.4/flink-1.12.4-bin-scala_2.11.tgz</a></li></ul><table><thead><tr><th>组件</th><th>版本</th></tr></thead><tbody><tr><td>Hadoop</td><td>2.10.1</td></tr><tr><td>HBase</td><td>2.3.5</td></tr><tr><td>Zookeeper</td><td>3.6.3</td></tr><tr><td>Pulsar</td><td>2.6.4</td></tr><tr><td>Flink</td><td>1.12.4</td></tr></tbody></table><h2 id="3-Hadoop安装配置"><a href="#3-Hadoop安装配置" class="headerlink" title="3. Hadoop安装配置"></a>3. Hadoop安装配置</h2><h3 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h3><p>core配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>io.file.buffer.size<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>131072<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.trash.interval<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/srv/hadoop/tmp<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ha.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node001:2181,vm-node002:2181,vm-node003:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>hdfs配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.nameservices<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.replication<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.blocksize<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>268435456<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.name.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/srv/hadoop/name<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.datanode.data.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/srv/hadoop/data<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/srv/hadoop/checkpoint<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/srv/hadoop/journalnode<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.handler.count<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.datanode.handler.count<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.namenodes.mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>nn1,nn2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node001:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node002:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node001:50070<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node002:50070<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>qjournal://vm-node001:8485;vm-node002:8485;vm-node003:8485/mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.failover.proxy.provider.mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>shell(/bin/true)<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.datanode.max.transfer.threads<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>4096<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>yarn配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mycluster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>rm1,rm2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node002<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node002:8088<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node003:8088<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node001:2181,vm-node002:2181,vm-node003:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mapred配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>hadoop环境配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">The only required environment variable is JAVA_HOME.  All others are</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">optional.  When running a distributed configuration it is best to</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">set</span> JAVA_HOME <span class="hljs-keyword">in</span> this file, so that it is correctly defined on</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">remote nodes.</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The java implementation to use.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">export</span> JAVA_HOME=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span></span><br>export JAVA_HOME=/usr/local/jdk8u292-b10<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The maximum amount of heap to use, <span class="hljs-keyword">in</span> MB. Default is 1000.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">export</span> HADOOP_HEAPSIZE=</span><br>export HADOOP_HEAPSIZE=4096<br>export HADOOP_LOG_DIR=/srv/hadoop/logs<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">export</span> HADOOP_PID_DIR=<span class="hljs-variable">$&#123;HADOOP_PID_DIR&#125;</span></span><br>export HADOOP_PID_DIR=/srv/hadoop/pids<br></code></pre></td></tr></table></figure><p>yarn环境配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">export JAVA_HOME=/usr/local/jdk8u292-b10<br>YARN_HEAPSIZE=4096<br>export YARN_RESOURCEMANAGER_HEAPSIZE=2048<br>export YARN_NODEMANAGER_HEAPSIZE=2048<br>YARN_LOG_DIR=/srv/hadoop/logs<br>export YARN_PID_DIR=/srv/hadoop/pids<br></code></pre></td></tr></table></figure><p>日志配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">etc/hadoop/log4j.properties</span><br>hadoop.log.dir=/srv/hadoop/logs<br></code></pre></td></tr></table></figure><p>Slave配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># etc/hadoop/slaves</span><br>vm-node002<br>vm-node003<br></code></pre></td></tr></table></figure><h3 id="SSH免密"><a href="#SSH免密" class="headerlink" title="SSH免密"></a>SSH免密</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen <span class="hljs-comment"># 回车N+</span><br>ssh-copy-id $(<span class="hljs-built_in">whoami</span>)@vm-node002 <span class="hljs-comment"># etc/hadoop/slaves</span><br>ssh-copy-id $(<span class="hljs-built_in">whoami</span>)@vm-node003 <span class="hljs-comment"># etc/hadoop/slaves</span><br></code></pre></td></tr></table></figure><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">bin/hdfs zkfc -formatZK<br><br>bin/hdfs namenode -format<br><br><span class="hljs-comment"># sbin/start-all.sh</span><br><span class="hljs-comment"># bin/hdfs namenode -bootstrapStandby</span><br><span class="hljs-comment"># sbin/stop-all.sh</span><br><br><span class="hljs-comment">## 建议阅读此二脚本</span><br>sbin/start-dfs.sh <span class="hljs-comment"># namenode执行</span><br>bin/hdfs namenode -bootstrapStandby <span class="hljs-comment"># namenode standby执行</span><br>sbin/start-yarn.sh <span class="hljs-comment"># resourcemanager执行</span><br></code></pre></td></tr></table></figure><h3 id="FQA"><a href="#FQA" class="headerlink" title="FQA"></a>FQA</h3><h4 id="1、No-valid-image-files-found"><a href="#1、No-valid-image-files-found" class="headerlink" title="1、No valid image files found"></a>1、No valid image files found</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># makedirs</span><br>/srv/<br>├── hadoop<br>│   ├── checkpoint<br>│   ├── data<br>│   ├── journalnode<br>│   ├── logs<br>│   ├── name<br>│   ├── pids<br>│   └── tmp<br>├── hbase<br>|   ├── logs<br>│   └── pids<br>└── zookeeper<br><br><span class="hljs-comment"># good idea</span><br>bin/hdfs namenode -bootstrapStandby<br><br><span class="hljs-comment"># bad idea</span><br><span class="hljs-comment"># vm-node001</span><br>scp -r /srv/hadoop/name/current root@vm-node002:/srv/hadoop/name/<br></code></pre></td></tr></table></figure><h3 id="Oops"><a href="#Oops" class="headerlink" title="Oops"></a>Oops</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">sbin/start-yarn.sh<br><span class="hljs-comment"># start resourceManager</span><br>sbin/yarn-daemon.sh --config <span class="hljs-variable">$YARN_CONF_DIR</span>  start resourcemanager<br>sbin/yarn-daemons.sh --config <span class="hljs-variable">$YARN_CONF_DIR</span>  start resourcemanager<br><br>bin/hdfs haadmin -getServiceState nn1<br><br>bin/yarn rmadmin -getServiceState rm1<br>yarn rmadmin -transitionToStandby rm1<br></code></pre></td></tr></table></figure><h2 id="4-HBase安装配置"><a href="#4-HBase安装配置" class="headerlink" title="4. HBase安装配置"></a>4. HBase安装配置</h2><p>配置<br><code>vim conf/hbase-site.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.rootdir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://mycluster/hbase<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.cluster.distributed<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.unsafe.stream.capability.enforce<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>vm-node001,vm-node002,vm-node003<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>环境变量<br><code>vim conf/hbase-env.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">export JAVA_HOME=/usr/local/jdk8u292-b10<br>export HBASE_HEAPSIZE=1G<br>export SERVER_GC_OPTS=&quot;-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:&lt;FILE-PATH&gt;&quot;<br><br>export HBASE_REGIONSERVERS=$&#123;HBASE_HOME&#125;/conf/regionservers<br>export HBASE_BACKUP_MASTERS=$&#123;HBASE_HOME&#125;/conf/backup-masters<br><br>export HBASE_LOG_DIR=/srv/hbase/logs<br>export HBASE_PID_DIR=/srv/hbase/pids<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 使用外部的zk组件</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Tell HBase whether it should manage it<span class="hljs-string">&#x27;s own instance of ZooKeeper or not.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">export HBASE_MANAGES_ZK=true</span></span><br>export HBASE_MANAGES_ZK=false<br></code></pre></td></tr></table></figure><p>日志配置<br><code>vim conf/log4j.properties</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">hbase.log.dir</span>=<span class="hljs-string">/srv/hbase/logs</span><br><span class="hljs-comment"># add other you want.</span><br></code></pre></td></tr></table></figure><p>regionservers配置<br><code>vim conf/regionservers</code></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">vm-<span class="hljs-symbol">node001</span><br>vm-<span class="hljs-symbol">node002</span><br>vm-<span class="hljs-symbol">node003</span><br></code></pre></td></tr></table></figure><p>backup-masters配置<br><code>vim conf/backup-masters</code></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">vm-<span class="hljs-symbol">node003</span><br></code></pre></td></tr></table></figure><h3 id="SSH免密-1"><a href="#SSH免密-1" class="headerlink" title="SSH免密"></a>SSH免密</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen <span class="hljs-comment"># 回车N+</span><br>ssh-copy-id $(<span class="hljs-built_in">whoami</span>)@vm-node001 <span class="hljs-comment"># conf/backup-masters or conf/regionservers</span><br>ssh-copy-id $(<span class="hljs-built_in">whoami</span>)@vm-node002 <span class="hljs-comment"># conf/backup-masters or conf/regionservers</span><br>ssh-copy-id $(<span class="hljs-built_in">whoami</span>)@vm-node003 <span class="hljs-comment"># conf/backup-masters or conf/regionservers</span><br></code></pre></td></tr></table></figure><h3 id="HA-HDFS适配"><a href="#HA-HDFS适配" class="headerlink" title="HA HDFS适配"></a>HA HDFS适配</h3><p>拷贝Hadoop etc/hadoop/{core-site.xml,hdfs-site.xml}到HBase conf/{core-site.xml,hdfs-site.xml}<br><code>cp $&#123;HADOOP_HOME&#125;/etc/hadoop/&#123;core-site.xml,hdfs-site.xml&#125; $&#123;HBASE_HOME&#125;/conf/&#123;core-site.xml,hdfs-site.xml&#125;</code></p><h3 id="启动与停止"><a href="#启动与停止" class="headerlink" title="启动与停止"></a>启动与停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">bin/start-hbase.sh<br>bin/stop-hbase.sh<br></code></pre></td></tr></table></figure><h2 id="5-WebUI"><a href="#5-WebUI" class="headerlink" title="5. WebUI"></a>5. WebUI</h2><table><thead><tr><th>组件</th><th>URL</th></tr></thead><tbody><tr><td>NameNode</td><td><a href="http://10.10.253.16:50070/">http://10.10.253.16:50070</a></td></tr><tr><td>ResourceManager</td><td><a href="http://10.10.253.18:8088/">http://10.10.253.18:8088</a></td></tr><tr><td>HMaster</td><td><a href="http://10.10.253.16:16010/">http://10.10.253.16:16010</a></td></tr><tr><td>RegionServer</td><td><a href="http://10.10.253.16:16030/">http://10.10.253.16:16030</a></td></tr></tbody></table><h2 id="6-Reference"><a href="#6-Reference" class="headerlink" title="6. Reference"></a>6. Reference</h2><ul><li><p><a href="https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-common/ClusterSetup.html">https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-common/ClusterSetup.html</a></p></li><li><p><a href="https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-hdfs/HDFSHighAvailabilityWithQJM.html">https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-hdfs/HDFSHighAvailabilityWithQJM.html</a></p></li><li><p><a href="https://hadoop.apache.org/docs/r2.10.1/hadoop-yarn/hadoop-yarn-site/ResourceManagerHA.html">https://hadoop.apache.org/docs/r2.10.1/hadoop-yarn/hadoop-yarn-site/ResourceManagerHA.html</a></p></li><li><p><a href="https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-common/FileSystemShell.html">https://hadoop.apache.org/docs/r2.10.1/hadoop-project-dist/hadoop-common/FileSystemShell.html</a></p></li><li><p><a href="https://hbase.apache.org/book.html#getting_started">https://hbase.apache.org/book.html#getting_started</a></p></li><li><p><a href="https://ken.io/note/hadoop-cluster-deploy-guide">Hadoop高可用集群部署指南</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/222937515">Flink集群搭建一篇就够了</a></p></li><li><p><a href="https://blog.csdn.net/nazeniwaresakini/article/details/108770855">Flink on YARN的第三种部署模式：Application Mode</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/54192454">深入浅出 Hadoop YARN</a></p></li><li><p><a href="https://i6448038.github.io/2018/12/12/raft/">raft一致性算法详解</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>BigData</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
      <tag>HDFS</tag>
      
      <tag>Yarn</tag>
      
      <tag>HBase</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kafka老矣？Pulsar真香...</title>
    <link href="/2021/06/01/pulsar-kafka/"/>
    <url>/2021/06/01/pulsar-kafka/</url>
    
    <content type="html"><![CDATA[<p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/pulsar-featrue.jpg?x-oss-process=style/blog-img-watermark"></p><p><a href="https://www.confluent.io/kafka-vs-pulsar/">https://www.confluent.io/kafka-vs-pulsar/</a></p>]]></content>
    
    
    <categories>
      
      <category>BigData</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kafka</tag>
      
      <tag>Pulsar</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ZUUL网关API接口防刷限流</title>
    <link href="/2021/05/21/zuul-ratelimit/"/>
    <url>/2021/05/21/zuul-ratelimit/</url>
    
    <content type="html"><![CDATA[<p>Spring Cloud Zuul RateLimit对Zuul APIGateway进行限流</p><span id="more"></span><h3 id="1、POM依赖"><a href="#1、POM依赖" class="headerlink" title="1、POM依赖"></a>1、POM依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"># Spring Cloud Zuul RateLimit<br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.marcosbarbero.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-zuul-ratelimit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.7.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br># Redis<br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、YAML配置"><a href="#2、YAML配置" class="headerlink" title="2、YAML配置"></a>2、YAML配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">springcloud-zuul</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">$&#123;ENVIRONMENT:pro&#125;</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">10.10</span><span class="hljs-number">.253</span><span class="hljs-number">.16</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8125</span><br><span class="hljs-attr">zuul:</span><br>  <span class="hljs-attr">prefix:</span> <span class="hljs-string">/api</span> <span class="hljs-comment"># 给网关路由添加前缀</span><br>  <span class="hljs-attr">ignored-services:</span> <span class="hljs-string">springboot-produce,</span> <span class="hljs-string">springboot-consume</span> <span class="hljs-comment"># 关闭默认路由配置</span><br>  <span class="hljs-attr">add-host-header:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 设置为true重定向是会添加host请求头</span><br>  <span class="hljs-attr">routes:</span><br>    <span class="hljs-attr">springboot-produce:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/produce/**</span><br>    <span class="hljs-attr">springboot-consume:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/consume/**</span><br>  <span class="hljs-attr">ratelimit:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">REDIS</span><br>    <span class="hljs-attr">key-prefix:</span> <span class="hljs-string">zrl-</span><br>    <span class="hljs-attr">behind-proxy:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">add-response-headers:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">deny-request:</span><br>      <span class="hljs-attr">response-status-code:</span> <span class="hljs-number">404</span><br>      <span class="hljs-attr">origins:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">boer.xyz</span><br>    <span class="hljs-attr">default-policy-list:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span><br>        <span class="hljs-attr">refresh-interval:</span> <span class="hljs-number">30</span><br>        <span class="hljs-attr">type:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">origin</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">url</span><br>    <span class="hljs-attr">policy-list:</span><br>      <span class="hljs-attr">springboot-produce:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">limit:</span> <span class="hljs-number">5</span><br>          <span class="hljs-attr">refresh-interval:</span> <span class="hljs-number">60</span><br>          <span class="hljs-attr">type:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">url=/hello</span><br></code></pre></td></tr></table></figure><h3 id="3、Test验证"><a href="#3、Test验证" class="headerlink" title="3、Test验证"></a>3、Test验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 对/hello接口每分钟限制5次访问</span><br>curl -is http://10.10.10.56:8125/api/produce/hello<br><span class="hljs-comment"># 对其他接口无限制</span><br>curl -is http://10.10.10.56:8125/api/produce/<br></code></pre></td></tr></table></figure><h3 id="4、Ref参考"><a href="#4、Ref参考" class="headerlink" title="4、Ref参考"></a>4、Ref参考</h3><ol><li><a href="https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit/tree/2.2.x">https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit/tree/2.2.x</a></li><li><a href="https://www.baeldung.com/spring-cloud-zuul-rate-limit">https://www.baeldung.com/spring-cloud-zuul-rate-limit</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>SRE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zuul</tag>
      
      <tag>api</tag>
      
      <tag>ratelimit</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes新技术研究</title>
    <link href="/2021/05/20/k8s-containerd-cilium/"/>
    <url>/2021/05/20/k8s-containerd-cilium/</url>
    
    <content type="html"><![CDATA[<p>eBPF 是我见过的 Linux 中最神奇的技术，没有之一，已成为 Linux 内核中顶级子模块，从 tcpdump 中用作网络包过滤的经典 cbpf，到成为通用 Linux 内核技术的 eBPF，已经完成华丽蜕变，为应用与神奇的内核打造了一座桥梁，在系统跟踪、观测、性能调优、安全和网络等领域发挥重要的角色。为 Service Mesh 打造了具备 API 感知和安全高效的容器网络方案 Cilium，其底层正是基于 eBPF 技术</p><p>-<a href="https://cloudnative.to/blog/bpf-intro/">https://cloudnative.to/blog/bpf-intro/</a></p><span id="more"></span><h1 id="Containerd"><a href="#Containerd" class="headerlink" title="Containerd"></a>Containerd</h1><p>cat &lt;&lt;EOF | tee /etc/modules-load.d/containerd.conf<br>overlay<br>br_netfilter<br>EOF</p><p>modprobe overlay<br>modprobe br_netfilter</p><p>yum install -y yum-utils<br>yum-config-manager –add-repo <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a><br>yum install containerd.io</p><p>mkdir -p /etc/containerd<br>containerd config default | sudo tee /etc/containerd/config.toml</p><p>[plugins.”io.containerd.grpc.v1.cri”.containerd.runtimes.runc]<br>  …<br>  [plugins.”io.containerd.grpc.v1.cri”.containerd.runtimes.runc.options]<br>    SystemdCgroup = true</p><p>sed -i ‘s#k8s.gcr.io#registry.aliyuncs.com/google_containers#g’ /etc/containerd/config.toml<br>sed -i ‘s#registry-1.docker.io#890une7x.mirror.aliyuncs.com#g’ /etc/containerd/config.toml</p><p>systemctl restart containerd</p><h1 id="crictl"><a href="#crictl" class="headerlink" title="crictl"></a>crictl</h1><p><a href="https://kubernetes.io/zh/docs/tasks/debug-application-cluster/crictl/">https://kubernetes.io/zh/docs/tasks/debug-application-cluster/crictl/</a><br><a href="https://github.com/kubernetes-sigs/cri-tools/tags">https://github.com/kubernetes-sigs/cri-tools/tags</a><br>curl -L <a href="https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz">https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz</a> -o crictl-v1.21.0-linux-amd64.tar.gz</p><p>cat &lt;&lt; EOF | tee /etc/crictl.yaml<br>runtime-endpoint: unix:///run/containerd/containerd.sock<br>image-endpoint: unix:///run/containerd/containerd.sock<br>timeout: 10<br>debug: false<br>EOF</p><h1 id="Cilium"><a href="#Cilium" class="headerlink" title="Cilium"></a>Cilium</h1><p><a href="https://docs.cilium.io/en/v1.10/concepts/kubernetes/requirements/#k8s-requirements">https://docs.cilium.io/en/v1.10/concepts/kubernetes/requirements/#k8s-requirements</a></p><h2 id="内核升级"><a href="#内核升级" class="headerlink" title="内核升级"></a>内核升级</h2><h1 id="https-elrepo-org-tiki-HomePage"><a href="#https-elrepo-org-tiki-HomePage" class="headerlink" title="https://elrepo.org/tiki/HomePage"></a><a href="https://elrepo.org/tiki/HomePage">https://elrepo.org/tiki/HomePage</a></h1><p>rpm –import <a href="https://www.elrepo.org/RPM-GPG-KEY-elrepo.org">https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</a><br>yum install <a href="https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm">https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</a><br>yum –enablerepo=elrepo-kernel install kernel-lt<br>kernel-lt is based on a “long term support” branch<br>kernel-ml is based on the “mainline stable” branch</p><p>#centos8不用更改内核启动顺序<br>#centos7的bios启动，选择第一个启动<br>grub2-set-default 0;grub2-mkconfig -o /boot/grub2/grub.cfg;<br>#centos7的efi启动，选择第一个启动<br>grub2-set-default 0;grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg;</p><h2 id="K8S初始化"><a href="#K8S初始化" class="headerlink" title="K8S初始化"></a>K8S初始化</h2><p>yum install kubelet kubeadm kubectl containerd.io</p><h3 id="contained-retag-images"><a href="#contained-retag-images" class="headerlink" title="contained retag images"></a>contained retag images</h3><p>ctr -n k8s.io i pull registry.aliyuncs.com/google_containers/coredns:1.8.0<br>ctr -n k8s.io i tag registry.aliyuncs.com/google_containers/coredns:1.8.0 registry.aliyuncs.com/google_containers/coredns:v1.8.0</p><h3 id="指定CoreDNS-IP"><a href="#指定CoreDNS-IP" class="headerlink" title="指定CoreDNS IP"></a>指定CoreDNS IP</h3><p>helm repo add coredns <a href="https://coredns.github.io/helm">https://coredns.github.io/helm</a><br>helm -n kube-system install coredns coredns/coredns –set service.clusterIP=10.96.0.10 service.name=kube-dns</p><p>kubeadm config print init-defaults<br>kubeadm –config init-defaults.yaml config images list<br>kubeadm –config init-defaults.yaml config images pull</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/control-plane-flags/</span><br><span class="hljs-comment"># kubeadm init --config init-defaults.yaml --upload-certs</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeadm.k8s.io/v1beta2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">InitConfiguration</span><br><span class="hljs-attr">nodeRegistration:</span><br>  <span class="hljs-attr">criSocket:</span> <span class="hljs-string">/var/run/containerd/containerd.sock</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">node</span><br>  <span class="hljs-attr">taints:</span> <span class="hljs-literal">null</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeadm.k8s.io/v1beta2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterConfiguration</span><br><span class="hljs-attr">certificatesDir:</span> <span class="hljs-string">/etc/kubernetes/pki</span><br><span class="hljs-attr">clusterName:</span> <span class="hljs-string">kubernetes</span><br><span class="hljs-attr">controllerManager:</span> &#123;&#125;<br><span class="hljs-attr">dns:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">CoreDNS</span><br><span class="hljs-attr">etcd:</span><br>  <span class="hljs-attr">local:</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">/var/lib/etcd</span><br><span class="hljs-attr">imageRepository:</span> <span class="hljs-string">registry.aliyuncs.com/google_containers</span><br><span class="hljs-attr">kubernetesVersion:</span> <span class="hljs-number">1.21</span><span class="hljs-number">.2</span><br><span class="hljs-attr">networking:</span><br>  <span class="hljs-attr">dnsDomain:</span> <span class="hljs-string">cluster.local</span><br>  <span class="hljs-attr">serviceSubnet:</span> <span class="hljs-number">10.96</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/12</span><br><span class="hljs-attr">scheduler:</span> &#123;&#125;<br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeproxy.config.k8s.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">KubeProxyConfiguration</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">ipvs</span><br></code></pre></td></tr></table></figure><p>kubeadm init –config init-defaults.yaml –upload-certs –skip-phases=addon/coredns<br>–skip-phases=addon/coredns<br>–skip-phases=addon/kube-proxy<br>–skip-phases=addon/kube-proxy,addon/coredns</p><h3 id="CA"><a href="#CA" class="headerlink" title="CA"></a>CA</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell">openssl x509 -in ca.pem -out ca.crt<br>openssl rsa -in ca-key.pem -out ca.key<br><br>只在主节点上生成CA<br>bin/elasticsearch-certutil ca --days 36500<br>签发证书<br>bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 --days 36500<br>转换证书、验证有效期<br>openssl pkcs12 -in elastic-certificates.p12 -out elastic-certificates.pem -nodes<br>openssl x509 -in elastic-certificates.pem -noout -dates<br><br>mkdir -p $HOME/.kube<br>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>  sudo chown $(id -u):$(id -g) $HOME/.kube/config<br><br>kubeadm join 10.10.253.16:6443 --token 8gntrw.collopy8yolzmxzu \<br>--discovery-token-ca-cert-hash sha256:3b6ceec33bc3d99ce5f2dd157eed51c7cd010e48948a71068e4a63fece02a1b4<br><br>vim /var/lib/kubelet/kubeadm-flags.env<br>KUBELET_KUBEADM_ARGS=&quot;--container-runtime=remote --container-runtime-endpoint=/var/run/containerd/containerd.sock --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.4.1&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ComponentStatus</span><br>kubectl get cs<br>/etc/kubernetes/manifests/kube-scheduler.yaml<br>/etc/kubernetes/manifests/kube-controller-manager.yaml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除这两个文件中命令选项中的- --port=0这行，重启kubelet</span><br><br>yum install bash-completion<br>kubectl completion bash &gt;/etc/bash_completion.d/kubectl<br>helm completion bash &gt; /etc/bash_completion.d/helm<br>curl -L https://raw.githubusercontent.com/containerd/containerd/main/contrib/autocomplete/ctr -o /etc/bash_completion.d/ctr # ctr自动补全<br></code></pre></td></tr></table></figure><p>iptables -F<br>iptables -X<br>iptables -L</p><p>ipvsadm –clear<br>ipvsadm -l</p><p>ctr -n k8s.io i rm $(ctr -n k8s.io i ls -q)<br>ctr -n k8s.io task kill -s SIGKILL $(ctr -n k8s.io task ls -q)<br>for t in $(ctr -n k8s.io task ls -q); do ctr -n k8s.io task kill -s SIGKILL $t; done<br>ctr -n k8s.io c rm $(ctr -n k8s.io c ls -q)</p><p>cilium install<br>cilium status<br>cilium hubble enable –ui</p>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cilium</tag>
      
      <tag>Containerd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL运维笔记</title>
    <link href="/2021/05/20/mysql-note/"/>
    <url>/2021/05/20/mysql-note/</url>
    
    <content type="html"><![CDATA[<p>我的MySQL运维笔记</p><span id="more"></span><h3 id="MySQL备份恢复"><a href="#MySQL备份恢复" class="headerlink" title="MySQL备份恢复"></a>MySQL备份恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## MySQL客户端必须软件包</span><br><span class="hljs-comment"># https://downloads.mysql.com/archives/community/</span><br>curl -LO https://cdn.mysql.com/archives/mysql-5.7/mysql-community-client-5.7.26-1.el7.x86_64.rpm<br>curl -LO https://cdn.mysql.com/archives/mysql-5.7/mysql-community-common-5.7.26-1.el7.x86_64.rpm<br>curl -LO https://cdn.mysql.com/archives/mysql-5.7/mysql-community-libs-5.7.26-1.el7.x86_64.rpm<br>curl -LO https://cdn.mysql.com/archives/mysql-5.7/mysql-community-libs-compat-5.7.26-1.el7.x86_64.rpm<br><br>mysql-community-client<br>mysql-community-common<br>mysql-community-libs<br>mysql-community-libs-compat<br><br><span class="hljs-comment"># mysql login-path登录信息</span><br>mysql_config_editor <span class="hljs-built_in">set</span> --host=mysql.boer.xyz --login-path=dev-mysql --password --user=boer --port=3306<br>mysql_config_editor <span class="hljs-built_in">print</span> --all<br>mysql_config_editor <span class="hljs-built_in">print</span> --login-path=dev-mysql<br>mysql_config_editor remove --login-path=dev-mysql<br><span class="hljs-built_in">cat</span> ~/.mylogin.cnf<br><br><span class="hljs-comment"># dump</span><br>mysqldump --login-path=dev-mysql --default-character-set=utf8 --set-gtid-purged=OFF --single-transaction bwi_task &gt; /backup/bwi_task.$(<span class="hljs-built_in">date</span> +%Y-%m-%d).sql<br><br><span class="hljs-comment"># set mysql var. speed up recovery</span><br>mysql --login-path=dev-mysql &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">set global innodb_flush_log_at_trx_commit = 0;</span><br><span class="hljs-string">set global sync_binlog = 2000;</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-comment"># restore</span><br>mysql --login-path=dev-mysql bwi_task_sub &lt; /backup/bwi_task.$(<span class="hljs-built_in">date</span> +%Y-%m-%d).sql<br><br><span class="hljs-comment"># reset mysql var.</span><br>mysql --login-path=dev-mysql &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">set global innodb_flush_log_at_trx_commit = 1;</span><br><span class="hljs-string">set global sync_binlog = 1;</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;finish time at: <span class="hljs-subst">$(date +%Y-%m-%d_%H:%M:%S)</span>&quot;</span><br></code></pre></td></tr></table></figure><h3 id="获取MySQL-TOP10"><a href="#获取MySQL-TOP10" class="headerlink" title="获取MySQL TOP10"></a>获取MySQL TOP10</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>TABLE_SCHEMA <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;数据库&#x27;</span>,<br>TABLE_NAME <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;表名&#x27;</span>,<br>TABLE_ROWS <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;记录数&#x27;</span>,<br>TABLE_COMMENT <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;建表说明&#x27;</span>,<br><span class="hljs-keyword">TRUNCATE</span> ( DATA_LENGTH <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span>, <span class="hljs-number">2</span> ) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;数据容量(MB)&#x27;</span>,<br><span class="hljs-keyword">TRUNCATE</span> ( INDEX_LENGTH <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span>, <span class="hljs-number">2</span> ) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;索引容量(MB)&#x27;</span> <br><span class="hljs-keyword">FROM</span><br>information_schema.TABLES <br><span class="hljs-keyword">WHERE</span><br>TABLE_SCHEMA <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;meisoodev&#x27;</span> <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>TABLE_ROWS <span class="hljs-keyword">DESC</span> <br>LIMIT <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><h3 id="useradd-with-passwd"><a href="#useradd-with-passwd" class="headerlink" title="useradd with passwd"></a>useradd with passwd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl passwd -1 &lt;password&gt;<br>useradd -c <span class="hljs-string">&#x27;DBA Account&#x27;</span> -p <span class="hljs-string">&#x27;$1$MZKAIaY6$rqR264o5joCNsxp987NZD.&#x27;</span> dbaops<br><span class="hljs-comment"># 卸载rpm不执行脚本</span><br>rpm -e --nopostun --nopreun x.rpm<br></code></pre></td></tr></table></figure><h3 id="MySQL增量备份-同步-my2sql"><a href="#MySQL增量备份-同步-my2sql" class="headerlink" title="MySQL增量备份/同步 my2sql"></a>MySQL增量备份/同步 my2sql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">outputs=$(MYSQL_PWD=Root_123 mysql -h 10.10.253.16 -s -u root &lt;&lt; EOF<br>show master status;<br>EOF<br>)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">read</span> <span class="hljs-built_in">history</span> postion and binlog file.</span><br>history=$(cat .history.db)<br>his_binlog=$(echo $history | cut -d&#x27; &#x27; -f1)<br>his_binpos=$(echo $history | cut -d&#x27; &#x27; -f2)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">write current postion and binlog file.</span><br>echo $outputs &gt; .history.db<br>binlog=$(echo $outputs | cut -d&#x27; &#x27; -f1)<br>binpos=$(echo $outputs | cut -d&#x27; &#x27; -f2)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">MYSQL_PWD=Root_123 mysqlbinlog -h 10.10.253.16 -d <span class="hljs-variable">$db_name</span> -R -u root --base64-output=decode-rows -v --start-position=<span class="hljs-variable">$his_binpos</span> --stop-position=<span class="hljs-variable">$binpos</span> <span class="hljs-variable">$his_binlog</span> <span class="hljs-variable">$binlog</span> &gt; $db_name$his_binpos<span class="hljs-variable">$binpos</span>.sql</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">my2sql tool parse binlog to sql</span><br>db_name=test<br>db_tables=all<br><span class="hljs-meta prompt_"># </span><span class="language-bash">db_tables=order,common,payment</span><br>my2sql -user root -password Root_123 -host 10.10.253.16 -port 3306 -databases $db_name -work-type 2sql -start-file $his_binlog -stop-file $binlog -start-pos $his_binpos -stop-pos $binpos -output-dir sql -do-not-add-prifixDb<br><span class="hljs-meta prompt_"># </span><span class="language-bash">&gt;/dev/null 2&gt;&amp;1</span><br>echo &quot;binlog parse ok...&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">import target database.</span><br>MYSQL_PWD=Root_123 mysql -h 10.10.253.16 -s -u root testbus &lt; sql/forward.3.sql<br>echo &quot;increment restore ok...&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SRE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis KEYS命令引发的一次生产故障</title>
    <link href="/2021/03/03/redis-keys-command/"/>
    <url>/2021/03/03/redis-keys-command/</url>
    
    <content type="html"><![CDATA[<p>硬件设备无Cookie机制 -&gt; Session保存时间加长 -&gt; spring-* Keys激增 -&gt; KEYS TempLock_*慢日志 -&gt; 应用响应速度慢</p><span id="more"></span><h3 id="一、事件背景"><a href="#一、事件背景" class="headerlink" title="一、事件背景"></a>一、事件背景</h3><p>  按计划于2021年2月25日00：00开始停服上线，预计于2月25日凌晨2点完成上线，并交付测试产品同学测试，验证。</p><h3 id="二、故障现象"><a href="#二、故障现象" class="headerlink" title="二、故障现象"></a>二、故障现象</h3><p>  从2月25日01：00左右开始，生产环境redis内存占用开始从300MB稳定上升，于25日上午10：30左右达到1200MB后：</p><ol><li>阿里云监控几乎所有指标开始频繁归零</li><li>Redis慢日志 KEYS TempLock_*</li><li>监控趋势显示Redis内存使用量持续增大、Keys数量持续增大</li><li>经分析工具分析内存占用清空 spring-session前缀的key峰值时占用1300M内存</li><li>应用日志频繁间歇性报Redis connection timeout异常，应用健康检查地址连接超时导致告警</li></ol><h3 id="三、排查过程"><a href="#三、排查过程" class="headerlink" title="三、排查过程"></a>三、排查过程</h3><p>  通过以上各类监控系统观察得到的现象，做出如下尝试与努力：</p><ol><li>KEYS TempLock_*慢日志：经研发排查代码发现此代码为2年前代码，此次上线未变更</li><li>内存增长与keys数量增长：排查spring-session模块机制，结论如下：</li></ol><ul><li><p>springboot 1.x </p><p>spring-session-data-redis 这个依赖 通过@EnableRedisHttpSession注解来开启配置 只要控制器(包括拦截器)有对session的处理，就会在redis写入3个key（hash\set\string各一）</p></li><li><p>spring boot 2.x</p><p>不需要注解开关来开启配置，默认只要控制器(包括拦截器)有对session的处理，就会在redis写入3个key（hash\set\string各一）</p></li></ul><p>但是，在重构/升级前，即在springboot 1.x时@EnableRedisHttpSession注解就是开启的，即spring-session前缀的keys以前就存在。（我勒个去，一线希望又破灭了）</p><ol start="3"><li>阿里云监控频繁归零问题：提工单、电话沟通阿里云工程师，建议先优化慢日志、排查大key</li></ol><h3 id="四、故障处理"><a href="#四、故障处理" class="headerlink" title="四、故障处理"></a>四、故障处理</h3><p>  经以上排查分析和阿里云工程师建议，此时已是清晨7.00时，马上早高峰业务量激增，再不修复后果不堪设想。</p><p>  抱着试一试的想法(因为之前排查过此代码为2年前代码)，决定先优化<code>hardHighLevelVideoService</code>，<code>hardParkLockService</code>，<code>hardVideoService</code>三个服务的KEYS TempLock_*慢日志，于26日7.40上线，上线后奇迹发生：</p><ol><li>阿里云监控频繁归零问题消除</li><li>keys、内存持续走低，过期的key持续走高</li><li>业务响应速度有所改观</li></ol><p><strong>至此，经过48小时、通宵2个晚上加班，此故障从现象上看已经修复</strong></p><h3 id="五、根因分析"><a href="#五、根因分析" class="headerlink" title="五、根因分析"></a>五、根因分析</h3><p>问题与思考：</p><ol><li>KEYS TempLock_*慢日志以前就存在，为什么以前没有发生过历史问题？</li><li>spring-session前缀的keys以前就存在，上线后为什么会持续增多？</li></ol><p>原来，<code>hardHighLevelVideoService</code>，<code>hardParkLockService</code>，<code>hardVideoService</code>三个服务26日7.40上线的时候，开发还改了一行代码。注释了在全局拦截器中操作session的代码 （只要控制器(包括拦截器)有对session的处理，就会在redis写入3个key（hash\set\string各一）），这才是消除故障的根本原因。</p><p>至此，虽然原因找到了，还是不能解释 </p><blockquote><p>2、spring-session前缀的keys以前就存在，上线后为什么会持续增多？</p></blockquote><p>最后经周一研发分析，SpringBoot版本从1.5.13版本使用RedisOperationsSessionRepository，升级后，在高版本过期，使用的则是RedisIndexedSessionRepository，二者对于配置的参数读取发生了改变。导致session会话保存时间不同，在springboot1.x取默认值1800s，而springboot2.x取配置值86400s，因为高位视频等硬件设备没有cookie不会保存session, 每次硬件设备心跳都会经全局拦截器产生不同session，之前过期时间为1800s，现在为24hour(86400s), 导致keys数量激增，之前在keys少的时候KEYS TempLock_*慢日志不足为患，然而在keys激增后，KEYS命令会每次扫描所有的keys，导致redis在执行KEYS时，应用连接redis connection timeout, 进而使业务响应速度下降。</p><h3 id="六、应急处理措施"><a href="#六、应急处理措施" class="headerlink" title="六、应急处理措施"></a>六、应急处理措施</h3><ol><li>因内存使用量持续增长，已接近内存最大值2G，根据内存增长速度以及故障排查进度，在25日17.00时对Redis服务进行扩容到16G，事实证明扩容的决策是及时的、正确的。</li><li>通过观察调取各类监控系统，积极研究排查故障原因。</li><li>工单、电话联系阿里云工程师，寻求援助并排除阿里云Redis服务本身问题。</li></ol><hr><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://blog.didispace.com/spring-session-source-learning-xjf/">https://blog.didispace.com/spring-session-source-learning-xjf/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Cache缓存使用示例</title>
    <link href="/2020/08/16/golang-gin-cache/"/>
    <url>/2020/08/16/golang-gin-cache/</url>
    
    <content type="html"><![CDATA[<p>如何在一个 HTTP 服务器中使用缓存来提升性能，同时使用 sync.Once 和 Ticker 来实现了缓存的初始化和定时更新。</p><p>sync.Once 是 Go 标准库提供的使函数只执行一次的实现，常应用于单例模式，例如初始化配置、保持数据库连接等。</p><p>go-cache 是一个轻量级的基于内存的 K-V 储存组件，内部实现了一个线程安全的 map[string]interface{}，适用于单机应用。</p><span id="more"></span><p>go-cache 具备如下功能：</p><ol><li>线程安全，多 goroutine 并发安全访问；</li><li>每个 item 可以设置过期时间（或无过期时间）</li><li>自动定期清理过期的 item；</li><li>可以自定义清理回调函数；</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;context&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br><span class="hljs-string">&quot;sync&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br><br><span class="hljs-string">&quot;github.com/gin-gonic/gin&quot;</span><br><span class="hljs-string">&quot;github.com/patrickmn/go-cache&quot;</span><br>)<br><br><span class="hljs-keyword">const</span> (<br>defaultExpireTime = <span class="hljs-number">10</span> * time.Second<br>)<br><br><span class="hljs-keyword">var</span> (<br>firstOnce  sync.Once<br>secondOnce sync.Once<br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">NewCacheClient</span><span class="hljs-params">()</span></span> *cache.Cache &#123;<br><span class="hljs-keyword">var</span> cacheWithTTL *cache.Cache<br>firstOnce.Do(<span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>cacheWithTTL = cache.New(<span class="hljs-number">5</span>*time.Minute, <span class="hljs-number">10</span>*time.Minute)<br>&#125;)<br><span class="hljs-keyword">return</span> cacheWithTTL<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">setDefaultCache</span><span class="hljs-params">(cacheClient *cache.Cache)</span></span> &#123;<br>time.Sleep(<span class="hljs-number">1</span> * time.Second) <span class="hljs-comment">// 模拟耗时操作，比如查询MySQL</span><br>cacheClient.Set(<span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;balalala~&quot;</span>+time.Now().Format(time.RFC3339Nano), defaultExpireTime)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>r := gin.Default()<br><br>cacheClient := NewCacheClient()<br>ctx, cancel := context.WithCancel(context.Background())<br><span class="hljs-keyword">defer</span> cancel()<br><br><span class="hljs-comment">// r.Use(authMiddleware())</span><br>apiv1 := r.Group(<span class="hljs-string">&quot;/api/v1&quot;</span>)<br>&#123;<br>apiv1.GET(<span class="hljs-string">&quot;/go-cache&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>secondOnce.Do(<span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>setDefaultCache(cacheClient) <span class="hljs-comment">// 初始化cache</span><br><span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>log.Printf(<span class="hljs-string">&quot;----debug----&gt; %s \n&quot;</span>, time.Now().Format(time.RFC3339))<br>ticker := time.NewTicker(defaultExpireTime - <span class="hljs-number">1</span>*time.Microsecond)<br><span class="hljs-keyword">defer</span> ticker.Stop()<br><span class="hljs-keyword">for</span> &#123;<br><span class="hljs-keyword">select</span> &#123;<br><span class="hljs-keyword">case</span> &lt;-ticker.C:<br>setDefaultCache(cacheClient)<br><span class="hljs-keyword">case</span> &lt;-ctx.Done():<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br>&#125;()<br>&#125;)<br>foo, found := cacheClient.Get(<span class="hljs-string">&quot;foo&quot;</span>)<br><span class="hljs-keyword">if</span> !found &#123;<br>c.JSON(http.StatusOK, gin.H&#123;<br><span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;cache not found&quot;</span>,<br>&#125;)<br><span class="hljs-keyword">return</span><br>&#125;<br>c.JSON(http.StatusOK, gin.H&#123;<br><span class="hljs-string">&quot;message&quot;</span>: foo,<br>&#125;)<br>&#125;)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Gin</tag>
      
      <tag>Cache</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes APM链路追踪Skywalking</title>
    <link href="/2020/08/16/k8s-apm-skywalking/"/>
    <url>/2020/08/16/k8s-apm-skywalking/</url>
    
    <content type="html"><![CDATA[<p>随着RPC框架、微服务、云计算、大数据的发展，业务的规模和深度相比过往也都在增加。一个业务可能横跨多个模块/服务/容器，依赖的中间件也越来越多，其中任何一个节点出现异常，都可能导致业务出现波动或者异常，这就导致服务质量监控和异常诊断/定位变得异常复杂。于是催生了新的业务监控模式：调用链跟踪系统APM</p><span id="more"></span><p>在诸多优秀的开源APM产品中<code>Skywalking</code>和<code>Pinpoint</code>脱颖而出，两款产品都通过字节码注入的方式，实现了对代码完全无任何侵入。对比如下：<br><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200828170623.png?x-oss-process=style/blog-img-watermark"></p><blockquote><p>前面我们介绍过<a href="/2019/05/09/pinpoint-deployment/">单纯Docker方式(<code>docker-compose</code>)部署Pinpoint</a>, 可以提供参考。本节我们介绍在Kubernetes上部署Skywalking。</p></blockquote><h3 id="1、Helm3"><a href="#1、Helm3" class="headerlink" title="1、Helm3"></a>1、Helm3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -LO https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz<br>tar -zxf helm-v3.2.4-linux-amd64.tar.gz<br><span class="hljs-built_in">cp</span> linux-amd64/helm /usr/local/bin/helm3<br></code></pre></td></tr></table></figure><h3 id="2、服务端"><a href="#2、服务端" class="headerlink" title="2、服务端"></a>2、服务端</h3><blockquote><p>Skywalking后端存储，使用EFK日志系统的ES集群。注意index加前缀区分<br>详细的Elasticsearch集群部署可以参考：<a href="/2019/10/24/k8s-logging-efk/">Kubernetes日志系统EFK</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/k8s/helm/charts<br>git <span class="hljs-built_in">clone</span> https://github.com/apache/skywalking-kubernetes.git<br><span class="hljs-built_in">cd</span> skywalking-kubernetes/chart<br>helm dep up skywalking<br><span class="hljs-comment"># 创建namespace</span><br>kubectl create ns skywalking<br><span class="hljs-comment"># 准备values文件, 详见Values</span><br>vim skywalking/values.yaml<br><span class="hljs-comment">#</span><br>helm3 install skywalking skywalking -n skywalking --values ./skywalking/values.yaml<br>helm3 -n skywalking list<br>helm3 -n skywalking delete skywalking<br>helm3 -n skywalking upgrade skywalking --values ./skywalking/values.yaml<br></code></pre></td></tr></table></figure><h4 id="Helm-Values"><a href="#Helm-Values" class="headerlink" title="Helm Values"></a>Helm Values</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">oap:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">oap</span><br>  <span class="hljs-attr">dynamicConfigEnabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">image:</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">apache/skywalking-oap-server</span><br>    <span class="hljs-attr">tag:</span> <span class="hljs-number">8.1</span><span class="hljs-number">.0</span><span class="hljs-string">-es7</span><br>    <span class="hljs-attr">pullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>  <span class="hljs-attr">storageType:</span> <span class="hljs-string">elasticsearch7</span> <span class="hljs-comment"># 存储类型es7</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-attr">grpc:</span> <span class="hljs-number">11800</span><br>    <span class="hljs-attr">rest:</span> <span class="hljs-number">12800</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span><br>  <span class="hljs-attr">javaOpts:</span> <span class="hljs-string">-Xmx2g</span> <span class="hljs-string">-Xms2g</span><br>  <span class="hljs-attr">antiAffinity:</span> <span class="hljs-string">&quot;soft&quot;</span><br>  <span class="hljs-attr">nodeAffinity:</span> &#123;&#125;<br>  <span class="hljs-attr">nodeSelector:</span> &#123;&#125;<br>  <span class="hljs-attr">tolerations:</span> []<br>  <span class="hljs-attr">resources:</span> &#123;&#125;<br>  <span class="hljs-attr">env:</span><br>    <span class="hljs-attr">SW_NAMESPACE:</span> <span class="hljs-string">&quot;skywalking&quot;</span> <span class="hljs-comment"># es索引前缀skywalking_, _下划线会自动加上</span><br><span class="hljs-attr">ui:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ui</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">image:</span><br>    <span class="hljs-attr">repository:</span> <span class="hljs-string">apache/skywalking-ui</span><br>    <span class="hljs-attr">tag:</span> <span class="hljs-number">8.1</span><span class="hljs-number">.0</span><br>    <span class="hljs-attr">pullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>  <span class="hljs-attr">ingress:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">annotations:</span> &#123;&#125;<br>    <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">hosts:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">skywalking.boer.xyz</span> <span class="hljs-comment"># ingress地址</span><br>    <span class="hljs-attr">tls:</span> []<br><span class="hljs-attr">elasticsearch:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 关闭内置es，我们使用EFK日志系统的ES集群</span><br>  <span class="hljs-attr">config:</span><br>    <span class="hljs-attr">port:</span><br>      <span class="hljs-attr">http:</span> <span class="hljs-number">9200</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">&quot;elasticsearch-logging.logging.svc&quot;</span> <span class="hljs-comment"># 日志系统ES地址</span><br>    <span class="hljs-attr">user:</span> <span class="hljs-string">&quot;elastic&quot;</span> <br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;&lt;your-es-password&gt;&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="3、客户端"><a href="#3、客户端" class="headerlink" title="3、客户端"></a>3、客户端</h3><h4 id="制作skywalking-agent镜像"><a href="#制作skywalking-agent镜像" class="headerlink" title="制作skywalking-agent镜像"></a>制作skywalking-agent镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/k8s/apps/skywalking-agent<br>tar -zxf apache-skywalking-apm-es7-8.1.0.tar.gz<br><span class="hljs-built_in">cp</span> apache-skywalking-apm-bin-es7/agent agent<br>vim Dockerfile <span class="hljs-comment"># 准备Dockerfile, 详见Dockerfile</span><br>docker build -t registry.boer.xyz/public/skywalking-agent:8.1.0 .<br>docker push registry.boer.xyz/public/skywalking-agent:8.1.0<br></code></pre></td></tr></table></figure><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> busybox:latest<br><span class="hljs-keyword">ENV</span> LANG=C.UTF-<span class="hljs-number">8</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /usr/skywalking/agent</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> agent/ .</span><br></code></pre></td></tr></table></figure><h4 id="skywalking-agent配置"><a href="#skywalking-agent配置" class="headerlink" title="skywalking-agent配置"></a>skywalking-agent配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># vim agent/config</span><br>agent.service_name=<span class="hljs-variable">$&#123;SW_AGENT_NAME:Your_ApplicationName&#125;</span> <span class="hljs-comment"># 服务名：区分不同服务，通过环境变量设置</span><br>agent.instance_name=<span class="hljs-variable">$&#123;HOSTNAME&#125;</span> <span class="hljs-comment"># 实例名：区分多实例，取Pod主机名</span><br>collector.backend_service=<span class="hljs-variable">$&#123;SW_AGENT_COLLECTOR_BACKEND_SERVICES:skywalking-oap.skywalking.svc:11800&#125;</span> <span class="hljs-comment"># 服务端地址</span><br>logging.file_name=<span class="hljs-variable">$&#123;SW_LOGGING_FILE_NAME:skywalking-api.log&#125;</span><br>logging.level=<span class="hljs-variable">$&#123;SW_LOGGING_LEVEL:INFO&#125;</span><br>logging.max_file_size=<span class="hljs-variable">$&#123;SW_LOGGING_MAX_FILE_SIZE:31457280&#125;</span><br></code></pre></td></tr></table></figure><h3 id="4、使用示例"><a href="#4、使用示例" class="headerlink" title="4、使用示例"></a>4、使用示例</h3><p>使用<code>skywalking-agent</code>一般会想到两种方法：</p><ul><li>将 agent 包构建到已经存在的基础镜像中</li><li>通过<code>initContainer</code>方式拷贝Agent</li></ul><p>initContainer方式将<code>skywalking-agent</code>拷贝到应用Pod中，无需修改基础JVM镜像，所以更推荐此方法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">produce-deployment</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">kubernetes.io/change-cause:</span> <span class="hljs-string">&lt;CHANGE_CAUSE&gt;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">produce</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">produce</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">initContainers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">image:</span> <span class="hljs-string">registry.boer.xyz/public/skywalking-agent:8.1.0</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&#x27;sh&#x27;</span>]<br>          <span class="hljs-attr">args:</span> [<span class="hljs-string">&#x27;-c&#x27;</span>,<span class="hljs-string">&#x27;cp -r /usr/skywalking/agent/* /skywalking/agent&#x27;</span>]<br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/skywalking/agent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">produce</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">&lt;IMAGE&gt;:&lt;IMAGE_TAG&gt;</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/skywalking/agent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>          <span class="hljs-attr">ports:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">10080</span><br>          <span class="hljs-attr">resources:</span><br>            <span class="hljs-attr">requests:</span><br>              <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;512Mi&quot;</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;200m&quot;</span><br>            <span class="hljs-attr">limits:</span><br>              <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;1Gi&quot;</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;600m&quot;</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ENVIRONMENT</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;pro&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">SW_AGENT_NAME</span> <span class="hljs-comment"># sw服务名</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;springboot-produce&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">JVM_OPTS</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;-Xms512m -Xmx512m -javaagent:/usr/skywalking/agent/skywalking-agent.jar&quot;</span><br>          <span class="hljs-attr">livenessProbe:</span><br>            <span class="hljs-attr">httpGet:</span><br>              <span class="hljs-attr">path:</span> <span class="hljs-string">/actuator/health</span><br>              <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">5</span><br>          <span class="hljs-attr">readinessProbe:</span><br>            <span class="hljs-attr">httpGet:</span><br>              <span class="hljs-attr">path:</span> <span class="hljs-string">/actuator/health</span><br>              <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">5</span><br>          <span class="hljs-attr">lifecycle:</span><br>            <span class="hljs-attr">preStop:</span><br>              <span class="hljs-attr">exec:</span><br>                <span class="hljs-attr">command:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;curl&quot;</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;-XPOST&quot;</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;http://127.0.0.1:10080/actuator/shutdown&quot;</span><br>      <span class="hljs-attr">imagePullSecrets:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">regcred</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>          <span class="hljs-attr">emptyDir:</span> &#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="5、Skywalking-ES存储索引管理"><a href="#5、Skywalking-ES存储索引管理" class="headerlink" title="5、Skywalking ES存储索引管理"></a>5、Skywalking ES存储索引管理</h3><blockquote><p>详细<a href="/2019/10/24/k8s-logging-efk/#iLM%E7%AE%A1%E7%90%86%E7%B4%A2%E5%BC%95%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"><strong>iLM索引生命周期</strong></a>，见Kubernetes日志系统EFK一文</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs json">PUT _ilm/policy/skywalking-policy   <br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;policy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>                       <br>    <span class="hljs-attr">&quot;phases&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;warm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;min_age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2d&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;actions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;forcemerge&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;max_num_segments&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;min_age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;3d&quot;</span><span class="hljs-punctuation">,</span>           <br>        <span class="hljs-attr">&quot;actions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;delete&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span>              <br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br>PUT _template/skywalking-template<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;index_patterns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;skywalking_*&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 这里完全匹配skywalking索引前缀，即SW_NAMESPACE</span><br>  <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;number_of_shards&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;number_of_replicas&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;index.lifecycle.name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;skywalking-policy&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;index.refresh_interval&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;30s&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;index.translog.durability&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;async&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;index.translog.sync_interval&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;60s&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="6、The-show"><a href="#6、The-show" class="headerlink" title="6、The show"></a>6、The show</h3><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200828182335.png?x-oss-process=style/blog-img-watermark"><br><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200828182157.png?x-oss-process=style/blog-img-watermark"></p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://github.com/apache/skywalking-kubernetes">https://github.com/apache/skywalking-kubernetes</a></li><li><a href="https://skywalking.apache.org/zh/blog/2019-08-30-how-to-use-Skywalking-Agent.html">https://skywalking.apache.org/zh/blog/2019-08-30-how-to-use-Skywalking-Agent.html</a></li><li><a href="https://skywalking.apache.org/zh/blog/2019-02-24-skywalking-pk-pinpoint.html">https://skywalking.apache.org/zh/blog/2019-02-24-skywalking-pk-pinpoint.html</a></li><li><a href="https://skywalking.apache.org/zh/blog/2019-11-07-skywalking-elasticsearch-storage-optimization.html">https://skywalking.apache.org/zh/blog/2019-11-07-skywalking-elasticsearch-storage-optimization.html</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Kubernetes</tag>
      
      <tag>Skywalking</tag>
      
      <tag>Pinpoint</tag>
      
      <tag>APM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Gin&amp;Gorm分页实现</title>
    <link href="/2020/08/15/golang-gin-gorm-paginate/"/>
    <url>/2020/08/15/golang-gin-gorm-paginate/</url>
    
    <content type="html"><![CDATA[<p>HTTP处理流程:</p><ol><li>接收参数</li><li>参数验证</li><li>处理逻辑</li><li>入库操作</li><li>返回用户</li></ol><span id="more"></span><p>1、接收前端请求，路由到指定Handler</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// http://127.0.0.1:8080/api/v1/users?page=1&amp;page_size=10&amp;age=30</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>r := gin.Default()<br>r.GET(<span class="hljs-string">&quot;/users&quot;</span>, v1.ListUser)<br>r.Run()<br>&#125;<br></code></pre></td></tr></table></figure><p>2、Hander解析前端请求的查询参数: page, page_size, age</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ListUser</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>resp := app.NewResponse(c)<br>pager := app.Pager&#123;Page: app.GetPage(c), PageSize: app.GetPageSize(c)&#125;<br>users, totalRows := model.ListUser(pager)<br>resp.ToResponseList(users, totalRows)<br>&#125;<br><span class="hljs-comment">// 粗暴的方法</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ListUserV2</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br><span class="hljs-keyword">var</span> users []User <span class="hljs-comment">// 返回对象结果集</span><br>page := c.Query(<span class="hljs-string">&quot;page&quot;</span>) <span class="hljs-comment">// 转int</span><br>pageSize := c.Query(<span class="hljs-string">&quot;page_size&quot;</span>)<br>age := c.Query(<span class="hljs-string">&quot;age&quot;</span>)<br>results := g.DB.Where(<span class="hljs-string">&quot;age = ?&quot;</span>, age).Find(&amp;users) <span class="hljs-comment">// g.DB 全局db句柄</span><br>totalRows := results.RowsAffected<br>offset := (page - <span class="hljs-number">1</span>) * pageSize<br>results.Offset().Limit(pageSize).Find(&amp;users)<br>c.JSON(<span class="hljs-number">200</span>, gin.H&#123;<br><span class="hljs-string">&quot;data&quot;</span>: users,<br><span class="hljs-string">&quot;page&quot;</span>: page,<br><span class="hljs-string">&quot;page_size&quot;</span>: pageSize,<br><span class="hljs-string">&quot;total_rows&quot;</span>: totalRows,<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>3、Model根据Handler解析的查询参数，查询数据库，返回符合条件的总数据条数，并在次结果集之上返回当前页的数据集</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ListUser</span><span class="hljs-params">(p app.Pager)</span></span> ([]U, <span class="hljs-type">int64</span>) &#123;<br><span class="hljs-keyword">var</span> users []U<br><span class="hljs-comment">// 总数据结果集</span><br>results := db.Where(<span class="hljs-string">&quot;age = ?&quot;</span>, <span class="hljs-number">30</span>).Find(&amp;users)<br>totalRows := results.RowsAffected<br><span class="hljs-comment">// 当前页结果集</span><br>results.Scopes(Paginate(p)).Find(&amp;users)<br><span class="hljs-keyword">return</span> users, totalRows<br>&#125;<br></code></pre></td></tr></table></figure><p>3.1、分页</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// 分页</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Paginate</span><span class="hljs-params">(p app.Pager)</span></span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(db *gorm.DB)</span></span> *gorm.DB &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(db *gorm.DB)</span></span> *gorm.DB &#123;<br>offset := app.GetPageOffset(p.Page, p.PageSize)<br><span class="hljs-keyword">return</span> db.Offset(offset).Limit(p.PageSize)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Gin</tag>
      
      <tag>Gorm</tag>
      
      <tag>分页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - Modules</title>
    <link href="/2020/08/09/golang-modules/"/>
    <url>/2020/08/09/golang-modules/</url>
    
    <content type="html"><![CDATA[<p>Go Modules是Go 1.11引入的新特性，它是 Go 语言的包管理工具，用于管理 Go 项目中的依赖关系。</p><span id="more"></span><h3 id="自建仓库"><a href="#自建仓库" class="headerlink" title="自建仓库"></a>自建仓库</h3><p><a href="https://go.dev/ref/mod">https://go.dev/ref/mod</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">go <span class="hljs-built_in">env</span> -w GO111MODULE=on<br>go <span class="hljs-built_in">env</span> -w GOPROXY=https://goproxy.cn,direct<br><br>go mod init code.boer.xyz/boerlabs/sm<br>go mod init code.boer.xyz/boerlabs/sm/v2<br>go mod tidy<br>go mod verify<br>go mod vendor<br><br>go clean -modcache<br><br>go run -mod=vendor main.go<br>go build -mod=verdor -o s2m main.go<br>go build -mod=mod -o s2m main.go <span class="hljs-comment"># disable vendor</span><br>go build -o s2m main.go <span class="hljs-comment"># disable vendor</span><br><br>go <span class="hljs-built_in">env</span> -w GOFLAGS=<span class="hljs-string">&quot;-mod=vendor”</span><br><span class="hljs-string"></span><br><span class="hljs-string">## 自建仓库作为go mod地址</span><br><span class="hljs-string"># http仓库</span><br><span class="hljs-string">go env -w GOINSECURE=&quot;</span>code.boer.xyz<span class="hljs-string">&quot;</span><br><span class="hljs-string"># 私有仓库</span><br><span class="hljs-string">go env -w GOPRIVATE=&quot;</span>code.boer.xyz<span class="hljs-string">&quot;</span><br><span class="hljs-string"># GOPRIVATE变量是 低级别的 GONOPROXY 和 GONOSUMDB 变量的默认值</span><br><span class="hljs-string"># go env -w GONOPROXY=&quot;</span>code.boer.xyz<span class="hljs-string">&quot;</span><br><span class="hljs-string"># go env -w GONOSUMDB=&quot;</span>code.boer.xyz<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><h3 id="导入本地包"><a href="#导入本地包" class="headerlink" title="导入本地包"></a>导入本地包</h3><blockquote><p>或者更改其他开源库后，放在本地</p></blockquote><p><a href="https://go.dev/doc/tutorial/call-module-code">https://go.dev/doc/tutorial/call-module-code</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;home&gt;/<br> |-- greetings/<br> |-- hello/<br><span class="hljs-comment"># go mod edit -replace example.com/greetings=../greetings</span><br><br>module example.com/hello<br><br>go 1.16<br><br>require example.com/greetings<br><br>replace example.com/greetings =&gt; ../greetings<br><br>---<br><br>&lt;home&gt;/<br> |-- greetings/<br> |-- hello/<br><span class="hljs-comment"># go mod edit -replace example.com/greetings=./greetings</span><br><br>module example.com/hello<br><br>go 1.16<br><br>require example.com/greetings<br><br>replace example.com/greetings =&gt; ./greetings<br></code></pre></td></tr></table></figure><h2 id="VSCode-use-vendor"><a href="#VSCode-use-vendor" class="headerlink" title="VSCode use vendor"></a>VSCode use vendor</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 全局配置</span><br>go <span class="hljs-built_in">env</span> -w GOFLAGS=<span class="hljs-string">&quot;-mod=vendor&quot;</span><br><span class="hljs-comment"># 工作区配置</span><br>&#123;<br>  <span class="hljs-string">&quot;go.toolsEnvVars&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;GOFLAGS&quot;</span>: <span class="hljs-string">&quot;-mod=vendor&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes SpringCloud微服务容器云之路</title>
    <link href="/2020/07/22/k8s-springcloud-fly/"/>
    <url>/2020/07/22/k8s-springcloud-fly/</url>
    
    <content type="html"><![CDATA[<p>SpringCloud微服务容器云之路</p><ol><li>Springboot应用配合Actuator开启：<code>监控检查</code>，<code>优雅停机</code>，<code>监控metrics</code>等endpoints</li><li>根据<code>Dockerfile</code>定义制作Docker镜像并上传<code>Harbor</code>私有Docker Registry</li><li>渲染K8S部署模板文件并完成应用部署，同时应该考虑快速回滚等保障机制</li></ol><blockquote><p><strong>Tips:</strong> 步骤2 - 可使用Maven Plugin <a href="https://github.com/spotify/dockerfile-maven">dockerfile-maven</a>集成到Maven流程中，命令如: <code>mvn dockerfile:build</code>, <code>mvn dockerfile:push</code>, 详见官方文档</p></blockquote><span id="more"></span><h3 id="1、Springboot配置示例"><a href="#1、Springboot配置示例" class="headerlink" title="1、Springboot配置示例"></a>1、Springboot配置示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">spring-produce</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">$&#123;ENVIRONMENT:pro&#125;</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br><span class="hljs-attr">management:</span><br>  <span class="hljs-attr">endpoints:</span><br>    <span class="hljs-attr">web:</span><br>      <span class="hljs-attr">base-path:</span> <span class="hljs-string">/actuator/</span><br>      <span class="hljs-attr">exposure:</span><br>        <span class="hljs-attr">include:</span> <span class="hljs-string">health,shutdown,prometheus</span> <span class="hljs-comment"># 监控检查，优雅停机，监控metrics</span><br>  <span class="hljs-attr">endpoint:</span><br>    <span class="hljs-attr">shutdown:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">metrics:</span><br>    <span class="hljs-attr">tags:</span><br>      <span class="hljs-attr">application:</span> <span class="hljs-string">$&#123;spring.application.name&#125;</span> <span class="hljs-comment"># 监控metrics Tag</span><br><span class="hljs-attr">eureka:</span><br>  <span class="hljs-attr">instance:</span><br>    <span class="hljs-attr">preferIpAddress:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">serviceUrl:</span><br>      <span class="hljs-attr">defaultZone:</span> <span class="hljs-string">http://eureka-0.eureka.micro-public.svc.cluster.local:8761/eureka,http://eureka-1.eureka.micro-public.svc.cluster.local:8761/eureka,http://eureka-2.eureka.micro-public.svc.cluster.local:8761/eureka</span><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">max-size:</span> <span class="hljs-string">200MB</span><br>    <span class="hljs-attr">max-history:</span> <span class="hljs-number">7</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">/opt/logs</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">/opt/logs/$&#123;HOSTNAME&#125;.$&#123;spring.application.name&#125;.log</span><br></code></pre></td></tr></table></figure><p><strong>注意：actuator开启prometheus需要添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.micrometer<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>micrometer-registry-prometheus<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;micrometer.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、Dockerfile"><a href="#2、Dockerfile" class="headerlink" title="2、Dockerfile"></a>2、Dockerfile</h3><blockquote><p>在项目根目录下创建<code>Dockerfile</code></p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-comment"># base镜像 - JDK发行版</span><br><span class="hljs-keyword">FROM</span> adoptopenjdk:<span class="hljs-number">8</span>u252-b09-jdk-hotspot<br><span class="hljs-comment"># 署名</span><br><span class="hljs-keyword">MAINTAINER</span> Boer Zhang &lt;boer0924@gmail.com&gt;<br><span class="hljs-comment"># 工作目录 - 即jar包所在目录</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /opt</span><br><span class="hljs-comment"># mvn clean package -Dmaven.test.skip=true</span><br><span class="hljs-comment">## 服务版本</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> target/produce-1.0.1.jar .</span><br><span class="hljs-comment"># 更改镜像时区</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Asia/Chongqing&quot;</span> &gt; /etc/timezone</span><br><span class="hljs-comment"># 暴露服务端口</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">10080</span><br><span class="hljs-comment"># 服务启动命令</span><br><span class="hljs-comment">## 1、$&#123;JVM_OPTS&#125; - JVM配置，如：-Xms768m -Xmx768m -javaagent:/usr/skywalking/agent/skywalking-agent.jar</span><br><span class="hljs-comment">## 2、$&#123;APP_OPTS&#125; - APP配置，如：--spring.profiles.active=dev --spring.kafka.consumer.group-id=xxx.group</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [ <span class="hljs-string">&quot;sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, <span class="hljs-string">&quot;java <span class="hljs-variable">$&#123;JVM_OPTS&#125;</span> -jar produce-1.0.1.jar <span class="hljs-variable">$&#123;APP_OPTS&#125;</span>&quot;</span> ]</span><br></code></pre></td></tr></table></figure><h3 id="3、K8S容器云部署文件模板"><a href="#3、K8S容器云部署文件模板" class="headerlink" title="3、K8S容器云部署文件模板"></a>3、K8S容器云部署文件模板</h3><blockquote><p>在项目根目录下创建<code>manifests</code>目录，在目录下创建文件<code>k8s.yaml</code></p></blockquote><ol><li><strong>服务名称</strong> - 全局替换<code>&lt;change-me&gt;</code>为您的服务名称</li><li><strong>服务端口</strong> - 全局替换<code>10080</code>为您的服务端口</li><li><strong>服务资源</strong> - 注意<code>resources</code>字段服务所申请的资源</li><li><strong>服务域名</strong> - 根据实际情况，选择是否需要对外暴露Ingress</li><li><strong>服务版本</strong> - 根据项目pom文件<code>version</code>字段，同时修改Dockerfile中jar包版本</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;change-me&gt;-deployment</span> <span class="hljs-comment"># deployment名称</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">kubernetes.io/change-cause:</span> <span class="hljs-string">&lt;CHANGE_CAUSE&gt;</span> <span class="hljs-comment"># 版本说明 - 用于回滚等</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">&lt;change-me&gt;</span> <span class="hljs-comment"># 标签选择器，与下面[Flag_label]对应</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># 多实例</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">&lt;change-me&gt;</span> <span class="hljs-comment"># [Flag_label]</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">initContainers:</span> <span class="hljs-comment"># skywalking-agent initContainer</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">image:</span> <span class="hljs-string">registry.boer.xyz/public/skywalking-agent:8.1.0</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&#x27;sh&#x27;</span>]<br>          <span class="hljs-attr">args:</span> [<span class="hljs-string">&#x27;-c&#x27;</span>,<span class="hljs-string">&#x27;cp -r /usr/skywalking/agent/* /skywalking/agent&#x27;</span>]<br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/skywalking/agent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;change-me&gt;</span> <span class="hljs-comment"># EFK日志系统日志查询tag</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">&lt;IMAGE&gt;:&lt;IMAGE_TAG&gt;</span> <span class="hljs-comment"># 镜像地址:版本</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/skywalking/agent</span> <span class="hljs-comment"># 挂载skywalking-agent到pod</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/opt/logs</span> <span class="hljs-comment"># 挂载app-logs到node</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">app-logs</span><br>          <span class="hljs-attr">ports:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">10080</span> <span class="hljs-comment"># 服务暴露端口</span><br>          <span class="hljs-attr">resources:</span> <span class="hljs-comment"># 服务所需资源申请</span><br>            <span class="hljs-attr">requests:</span><br>              <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;512Mi&quot;</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;200m&quot;</span><br>            <span class="hljs-attr">limits:</span><br>              <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;1Gi&quot;</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;600m&quot;</span><br>          <span class="hljs-attr">env:</span> <span class="hljs-comment"># 环境变量</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ENVIRONMENT</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;pro&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">APP_OPTS</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;--spring.kafka.consumer.group-id=consumer.group&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">JVM_OPTS</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;-Xms512m -Xmx512m -javaagent:/usr/skywalking/agent/skywalking-agent.jar&quot;</span><br>          <span class="hljs-attr">livenessProbe:</span> <span class="hljs-comment"># 存活探针</span><br>            <span class="hljs-attr">httpGet:</span><br>              <span class="hljs-attr">path:</span> <span class="hljs-string">/actuator/health</span><br>              <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">60</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">5</span><br>          <span class="hljs-attr">readinessProbe:</span> <span class="hljs-comment"># 就绪探针</span><br>            <span class="hljs-attr">httpGet:</span><br>              <span class="hljs-attr">path:</span> <span class="hljs-string">/actuator/health</span><br>              <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">30</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">5</span><br>          <span class="hljs-attr">lifecycle:</span><br>            <span class="hljs-attr">preStop:</span> <span class="hljs-comment"># pod停止前Hook - 优雅停机</span><br>              <span class="hljs-attr">exec:</span><br>                <span class="hljs-attr">command:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;curl&quot;</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;-XPOST&quot;</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;http://127.0.0.1:10080/actuator/shutdown&quot;</span><br>      <span class="hljs-attr">imagePullSecrets:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">regcred</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">skywalking-agent</span><br>          <span class="hljs-attr">emptyDir:</span> &#123;&#125;<br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">app-logs</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/opt/app-logs/&lt;change-me&gt;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">DirectoryOrCreate</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;change-me&gt;-service</span> <span class="hljs-comment"># 服务名称</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">prometheus.io/path:</span> <span class="hljs-string">/actuator/prometheus</span> <span class="hljs-comment"># 应用监控metrics路径 - 对应配置文件开启prometheus</span><br>    <span class="hljs-attr">prometheus.io/port:</span> <span class="hljs-string">&quot;10080&quot;</span><br>    <span class="hljs-attr">prometheus.io/scrape:</span> <span class="hljs-string">&quot;true&quot;</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">&lt;change-me&gt;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">10080</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">10080</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">&lt;change-me&gt;</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># 请根据实际情况，选择是否需要对外暴露Ingress</span><br><span class="hljs-comment">## 在微服务架构中，一般通过Gateway网关统一对外提供服务，微服务单独对外暴露Ingress情况请谨慎选择</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">networking.k8s.io/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&lt;change-me&gt;-ingress</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/load-balance:</span> <span class="hljs-string">&quot;ip_hash&quot;</span> <span class="hljs-comment"># session保持</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/upstream-hash-by:</span> <span class="hljs-string">&quot;$request_uri&quot;</span> <span class="hljs-comment"># 配合ip_hash使用</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">rules:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">&lt;change-me&gt;.boer.xyz</span> <span class="hljs-comment"># Ingress 域名</span><br>      <span class="hljs-attr">http:</span><br>        <span class="hljs-attr">paths:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>            <span class="hljs-attr">backend:</span><br>              <span class="hljs-attr">serviceName:</span> <span class="hljs-string">&lt;change-me&gt;-service</span><br>              <span class="hljs-attr">servicePort:</span> <span class="hljs-number">10080</span><br></code></pre></td></tr></table></figure><h3 id="4、K8S发布"><a href="#4、K8S发布" class="headerlink" title="4、K8S发布"></a>4、K8S发布</h3><blockquote><p>此过程已通过<a href="/2020/06/23/k8s-cicd-jenkins-pipeline/">Jenkins Pipeline自动化CICD方式实现</a></p></blockquote><ol><li><strong>Git clone/pull代码</strong>：<code>git clone git://gitea.boer.xyz/spring-produce.git</code></li><li><strong>Junit单元测试</strong>：<code>mvn test</code> # 普通程序员都没有单元测试？</li><li><strong>Maven编译打包</strong>：<code>mvn clean package -Dmaven.test.skip=true</code></li><li><strong>Docker打包镜像</strong>：<code>docker build -t $&#123;image&#125;:$&#123;imageTag&#125; .</code></li><li><strong>Harbor镜像推送</strong>：<code>docker push $&#123;image&#125;:$&#123;imageTag&#125;</code></li><li><strong>Sed渲染模板</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;s|&lt;CHANGE_CAUSE&gt;|<span class="hljs-variable">$&#123;changeCause&#125;</span>|g&quot;</span> manifests/k8s.yaml<br>sed -i <span class="hljs-string">&quot;s|&lt;IMAGE&gt;|<span class="hljs-variable">$&#123;image&#125;</span>|g&quot;</span> manifests/k8s.yaml<br>sed -i <span class="hljs-string">&quot;s|&lt;IMAGE_TAG&gt;|<span class="hljs-variable">$&#123;imageTag&#125;</span>|g&quot;</span> manifests/k8s.yaml<br></code></pre></td></tr></table></figure></li><li><strong>Kubectl部署应用</strong>：<code>kubectl --kubeconfig $kubeconfig apply -f manifests/k8s.yaml -n $&#123;NAMESPACE&#125;</code></li><li><strong>Rollout快速回滚</strong>：<code>kubectl --kubeconfig $&#123;kubeconfig&#125; rollout undo deployment consume-deployment -n $&#123;NAMESPACE&#125;</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
      <tag>微服务</tag>
      
      <tag>SpringCloud</tag>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿里云API监控</title>
    <link href="/2020/06/24/aliyun-api-sdk-monitor/"/>
    <url>/2020/06/24/aliyun-api-sdk-monitor/</url>
    
    <content type="html"><![CDATA[<p>使用阿里云API-SDK获取阿里云Redis的监控指标</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> datetime<br><br><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<br><span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<br><span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<br><span class="hljs-keyword">from</span> aliyunsdkr_kvstore.request.v20150101.DescribeHistoryMonitorValuesRequest <span class="hljs-keyword">import</span> DescribeHistoryMonitorValuesRequest<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_metric</span>(<span class="hljs-params">metric</span>):<br>    client = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-beijing&#x27;</span>)<br><br>    request = DescribeHistoryMonitorValuesRequest()<br>    request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)<br><br>    <span class="hljs-comment"># Alyun utc格式</span><br>    utc_now = datetime.datetime.utcnow()<br>    utc_minutes_later = utc_now + datetime.timedelta(minutes=<span class="hljs-number">1</span>)<br>    aliyun_utc_format = <span class="hljs-string">&#x27;%Y-%m-%dT%H:%M:00Z&#x27;</span><br>    start_time = utc_now.strftime(aliyun_utc_format)<br>    end_time = utc_minutes_later.strftime(aliyun_utc_format)<br><br>    request.set_StartTime(start_time)<br>    request.set_EndTime(end_time)<br>    request.set_IntervalForHistory(<span class="hljs-string">&#x27;01m&#x27;</span>)<br>    request.set_InstanceId(<span class="hljs-string">&#x27;r-2zef7cf6dadbd110&#x27;</span>)<br>    request.set_MonitorKeys(metric)<br><br>    response = client.do_action_with_exception(request)<br><br>    resp_json = json.loads(response.decode())<br>    <span class="hljs-comment"># print(resp_json)</span><br>    monitor_history = resp_json.get(<span class="hljs-string">&#x27;MonitorHistory&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(json.loads(monitor_history).get(start_time).get(metric)) <span class="hljs-comment"># start_time</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    get_metric(<span class="hljs-string">&#x27;Keys&#x27;</span>)  <span class="hljs-comment"># Key总数量，即实例存储的一级Key总数。Counts</span><br>    get_metric(<span class="hljs-string">&#x27;CpuUsage&#x27;</span>)  <span class="hljs-comment"># CPU使用率。%</span><br>    get_metric(<span class="hljs-string">&#x27;InFlow&#x27;</span>)  <span class="hljs-comment"># 入流量速率。KBps</span><br>    get_metric(<span class="hljs-string">&#x27;OutFlow&#x27;</span>)  <span class="hljs-comment"># 出流量速率。KBps</span><br>    get_metric(<span class="hljs-string">&#x27;UsedMemory&#x27;</span>)  <span class="hljs-comment"># 数据占用的内存。Bytes</span><br>    get_metric(<span class="hljs-string">&#x27;memoryUsage&#x27;</span>)  <span class="hljs-comment"># 内存使用率。%</span><br></code></pre></td></tr></table></figure><h3 id="引用参考"><a href="#引用参考" class="headerlink" title="引用参考"></a>引用参考</h3><ul><li><a href="https://api.aliyun.com/#/?product=R-kvstore">https://api.aliyun.com/#/?product=R-kvstore</a></li><li><a href="https://help.aliyun.com/document_detail/189831.html">https://help.aliyun.com/document_detail/189831.html</a></li><li><a href="https://github.com/aliyun/aliyun-openapi-python-sdk">https://github.com/aliyun/aliyun-openapi-python-sdk</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Aliyun</tag>
      
      <tag>Redis</tag>
      
      <tag>API</tag>
      
      <tag>SDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes CICD工具Drone</title>
    <link href="/2020/06/24/k8s-cicd-drone/"/>
    <url>/2020/06/24/k8s-cicd-drone/</url>
    
    <content type="html"><![CDATA[<p>Drone是一个Go语言实现的CICD编排工具，超级轻量级。</p><p>Drone by Harness™ is a modern Continuous Integration platform that empowers busy teams to automate their build, test and release workflows using a powerful, cloud native pipeline engine.</p><span id="more"></span><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">pipeline</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">kubernetes</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">boer</span><br><br><span class="hljs-attr">steps:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">build</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">maven:3.6.3-jdk-8</span><br>    <span class="hljs-attr">pull:</span> <span class="hljs-string">if-not-exists</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">maven-cache</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/root/.m2</span><br>    <span class="hljs-attr">commands:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">mvn</span> <span class="hljs-string">clean</span> <span class="hljs-string">package</span> <span class="hljs-string">-DskipTests=true</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">docker:19.03.8</span><br>    <span class="hljs-attr">pull:</span> <span class="hljs-string">if-not-exists</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-sock</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/var/run/docker.sock</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-cache</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/docker</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">repo:</span> <span class="hljs-string">registry.boer.xyz/public/spring-produce</span><br>      <span class="hljs-attr">registry:</span> <span class="hljs-string">registry.boer.xyz</span><br>      <span class="hljs-attr">username:</span><br>        <span class="hljs-attr">from_secret:</span> <span class="hljs-string">docker_username</span><br>      <span class="hljs-attr">password:</span><br>        <span class="hljs-attr">from_secret:</span> <span class="hljs-string">docker_password</span><br>      <span class="hljs-attr">tags:</span> <span class="hljs-string">&quot;$&#123;DRONE_COMMIT_SHA:0:10&#125;&quot;</span><br>    <span class="hljs-attr">commands:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">docker</span> <span class="hljs-string">login</span> <span class="hljs-string">$&#123;registry&#125;</span> <span class="hljs-string">-u</span> <span class="hljs-string">$&#123;username&#125;</span> <span class="hljs-string">-p</span> <span class="hljs-string">$&#123;password&#125;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">docker</span> <span class="hljs-string">build</span> <span class="hljs-string">-t</span> <span class="hljs-string">&quot;$&#123;repo&#125;:$&#123;tags&#125;&quot;</span> <span class="hljs-string">.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">docker</span> <span class="hljs-string">push</span> <span class="hljs-string">&quot;$&#123;repo&#125;:$&#123;tags&#125;&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">k8s</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">boer0924/kubectl:1.18.3</span><br>    <span class="hljs-attr">pull:</span> <span class="hljs-string">if-not-exists</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">kube-config</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/root/.kube/config</span><br>    <span class="hljs-attr">commands:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">kubectl</span> <span class="hljs-string">get</span> <span class="hljs-string">nodes</span><br><span class="hljs-attr">trigger:</span><br>  <span class="hljs-attr">branch:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br>  <span class="hljs-attr">event:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">push</span><br><span class="hljs-attr">volumes:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">maven-cache</span><br>    <span class="hljs-attr">host:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/cache/.m2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">kube-config</span><br>    <span class="hljs-attr">host:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/root/.kube/config</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-cache</span><br>    <span class="hljs-attr">host:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/docker</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-sock</span><br>    <span class="hljs-attr">host:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/var/run/docker.sock</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
      <tag>CICD</tag>
      
      <tag>Jenkins</tag>
      
      <tag>Pipeline</tag>
      
      <tag>Drone</tag>
      
      <tag>Harbor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes CICD工具Jenkins Pipeline</title>
    <link href="/2020/06/23/k8s-cicd-jenkins-pipeline/"/>
    <url>/2020/06/23/k8s-cicd-jenkins-pipeline/</url>
    
    <content type="html"><![CDATA[<p>持续构建与发布是我们日常工作中必不可少的一个步骤，目前大多公司都采用 Jenkins 集群来搭建符合需求的 CI/CD 流程，然而传统的 Jenkins Slave 一主多从方式会存在一些痛点，比如：</p><ul><li>主 Master 发生单点故障时，整个流程都不可用了</li><li>每个 Slave 的配置环境不一样，来完成不同语言的编译打包等操作，但是这些差异化的配置导致管理起来非常不方便，维护起来也是比较费劲</li><li>资源分配不均衡，有的 Slave 要运行的 job 出现排队等待，而有的 Slave 处于空闲状态</li><li>资源有浪费，每台 Slave 可能是物理机或者虚拟机，当 Slave 处于空闲状态时，也不会完全释放掉资源。</li></ul><span id="more"></span><p>正因为上面的这些种种痛点，我们渴望一种更高效更可靠的方式来完成这个 CI/CD 流程，而 Docker 虚拟化容器技术能很好的解决这个痛点，又特别是在 Kubernetes 集群环境下面能够更好来解决上面的问题，下图是基于 Kubernetes 搭建 Jenkins 集群的简单示意图：<br><img src="/img/k8s-jenkins-arch.png"></p><p>从图上可以看到 Jenkins Master 和 Jenkins Slave 以 Pod 形式运行在 Kubernetes 集群的 Node 上，Master 运行在其中一个节点，并且将其配置数据存储到一个 Volume 上去，Slave 运行在各个节点上，并且它不是一直处于运行状态，它会按照需求动态的创建并自动删除。</p><p>这种方式的工作流程大致为：当 Jenkins Master 接受到 Build 请求时，会根据配置的 Label 动态创建一个运行在 Pod 中的 Jenkins Slave 并注册到 Master 上，当运行完 Job 后，这个 Slave 会被注销并且这个 Pod 也会自动删除，恢复到最初状态。</p><p>那么我们使用这种方式带来了哪些好处呢？</p><ul><li>服务高可用，当 Jenkins Master 出现故障时，Kubernetes 会自动创建一个新的 Jenkins Master 容器，并且将 Volume 分配给新创建的容器，保证数据不丢失，从而达到集群服务高可用。</li><li>动态伸缩，合理使用资源，每次运行 Job 时，会自动创建一个 Jenkins Slave，Job 完成后，Slave 自动注销并删除容器，资源自动释放，而且 Kubernetes 会根据每个资源的使用情况，动态分配 Slave 到空闲的节点上创建，降低出现因某节点资源利用率高，还排队等待在该节点的情况。</li><li>扩展性好，当 Kubernetes 集群的资源严重不足而导致 Job 排队等待时，可以很容易的添加一个 Kubernetes Node 到集群中，从而实现扩展。 当然这也是 Kubernetes 集群本来的便捷性。</li></ul><h3 id="Jenkins-Pipeline"><a href="#Jenkins-Pipeline" class="headerlink" title="Jenkins Pipeline"></a>Jenkins Pipeline</h3><p>Jenkins流水线是一套插件，它支持实现和集成持续交付流水线到Jenkins中。</p><p>Jenkinsfile一般有几个配置管理方式：</p><ol><li>在Jenkins WebUI中配置管理</li><li>检入到源码管理系统中配置管理(推荐方式)</li></ol><p>Jenkinsfile: 创建一个检入到源码管理系统中的<code>Jenkinsfile</code>带来了一些直接的好处：</p><ol><li>流水线上的代码评审/迭代</li><li>对流水线进行审计跟踪</li><li>流水线的单一可信数据源，能够被项目的多个成员查看和编辑</li></ol><p>流水线支持 两种语法：声明式（在 Pipeline 2.5 引入）和脚本式流水线。<a href="https://www.jenkins.io/doc/book/pipeline/syntax/">官方文档</a></p><h3 id="Jenkins安装"><a href="#Jenkins安装" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">helm <span class="hljs-keyword">fetch</span> <span class="hljs-keyword">stable</span>/jenkins -<span class="hljs-keyword">version</span> <span class="hljs-number">2.1</span><span class="hljs-number">.2</span><br>tar -zxf jenkins<span class="hljs-number">-2.1</span><span class="hljs-number">.2</span>.tgz<br>vim jenkins/<span class="hljs-keyword">values</span>.yaml<br>helm install <span class="hljs-comment">--name jenkins -f values.yaml . --namespace devops</span><br>helm upgrade jenkins -f <span class="hljs-keyword">values</span>.yaml . <span class="hljs-comment">--namespace devops</span><br>helm <span class="hljs-keyword">delete</span> <span class="hljs-comment">--purge jenkins</span><br></code></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/helm/charts/tree/master/stable/jenkins#200-configuration-as-code-now-default--container-does-not-run-as-root-anymore">https://github.com/helm/charts/tree/master/stable/jenkins#200-configuration-as-code-now-default--container-does-not-run-as-root-anymore</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># values.yaml</span><br><span class="hljs-attr">clusterZone:</span> <span class="hljs-string">&quot;cluster.local&quot;</span><br><span class="hljs-attr">master:</span><br>  <span class="hljs-attr">numExecutors:</span> <span class="hljs-number">2</span> <span class="hljs-comment"># 允许在master节点上同时执行2个任务</span><br>  <span class="hljs-comment"># https://github.com/helm/charts/tree/master/stable/jenkins#200-configuration-as-code-now-default--container-does-not-run-as-root-anymore</span><br>  <span class="hljs-attr">enableXmlConfig:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 允许变更配置 -&gt; &lt;your-jenkins-ingress&gt;/configureSecurity此url下设置`安全域`为`Jenkins专有用户数据库`</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;50m&quot;</span><br>      <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;256Mi&quot;</span><br>    <span class="hljs-attr">limits:</span><br>      <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;1000m&quot;</span><br>      <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;1024Mi&quot;</span><br>  <span class="hljs-attr">installPlugins:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">kubernetes:1.25.7</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">workflow-job:2.39</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">workflow-aggregator:2.6</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">credentials-binding:1.23</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">git:4.2.2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">configuration-as-code:1.41</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">blueocean:1.23.2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">git-parameter:0.9.12</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">localization-zh-cn:1.0.17</span><br>  <span class="hljs-attr">ingress:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">hostName:</span> <span class="hljs-string">jenkins.boer.xyz</span><br><span class="hljs-attr">agent:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 我们在pipeline中自定义Agent Pod</span><br><span class="hljs-attr">persistence:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">storageClass:</span> <span class="hljs-string">openebs-hostpath</span><br>  <span class="hljs-attr">accessMode:</span> <span class="hljs-string">&quot;ReadWriteOnce&quot;</span><br>  <span class="hljs-attr">size:</span> <span class="hljs-string">&quot;2Gi&quot;</span><br></code></pre></td></tr></table></figure><p>必备Plugins:</p><ul><li>kubernetes:1.25.7</li><li>workflow-job:2.39</li><li>workflow-aggregator:2.6</li><li>credentials-binding:1.23</li><li>git:4.2.2</li><li>configuration-as-code:1.41</li><li>blueocean:1.23.2</li><li>git-parameter:0.9.12</li><li>localization-zh-cn:1.0.17</li></ul><h3 id="Jenkins配置操作"><a href="#Jenkins配置操作" class="headerlink" title="Jenkins配置操作"></a>Jenkins配置操作</h3><h4 id="全局安全配置"><a href="#全局安全配置" class="headerlink" title="全局安全配置"></a>全局安全配置</h4><blockquote><p>系统管理 -&gt; 全局安全配置 -&gt; Authentication -&gt; 安全域 -&gt; Jenkins专有用户数据库</p></blockquote><p><img src="/img/jenkins_auth.png" alt="auth"></p><h4 id="添加全局凭证"><a href="#添加全局凭证" class="headerlink" title="添加全局凭证"></a>添加全局凭证</h4><blockquote><p>系统管理 -&gt; Manage Credentials -&gt; Stores scoped to Jenkins -&gt; Jenkins -&gt; 全局凭据 (unrestricted) -&gt; 添加凭据</p></blockquote><h5 id="1-添加代码仓库凭证"><a href="#1-添加代码仓库凭证" class="headerlink" title="1. 添加代码仓库凭证"></a>1. 添加<code>代码仓库</code>凭证</h5><p><img src="/img/jenkins_key_gitea.jpg" alt="key-gitea"></p><h5 id="2-添加Harbor-Registry凭证"><a href="#2-添加Harbor-Registry凭证" class="headerlink" title="2. 添加Harbor Registry凭证"></a>2. 添加Harbor Registry凭证</h5><ul><li>方法同添加<code>代码仓库</code>凭证</li><li>添加harbor统一镜像拉取账号 <a href="/2019/09/09/k8s-registry-harbor/#%E5%88%9B%E5%BB%BARegistry-secret">参考</a></li></ul><h5 id="3-添加kubeconfig凭证"><a href="#3-添加kubeconfig凭证" class="headerlink" title="3. 添加kubeconfig凭证"></a>3. 添加kubeconfig凭证</h5><p><img src="/img/jenkins_key_kubeconfig.jpg" alt="key-kubeconfig"></p><h3 id="KubernetesPod-yaml"><a href="#KubernetesPod-yaml" class="headerlink" title="KubernetesPod.yaml"></a>KubernetesPod.yaml</h3><p><strong>划重点</strong></p><ol><li>maven缓存.m2</li><li>docker in docker</li><li>jnlp容器必须有，command不能覆盖<code>jenkins-slave</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">jenkins-slave:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">volumes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">maven-cache</span><br>      <span class="hljs-attr">hostPath:</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/cache/.m2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-sock</span><br>      <span class="hljs-attr">hostPath:</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/var/run/docker.sock</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker-cache</span><br>      <span class="hljs-attr">hostPath:</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/docker</span><br>  <span class="hljs-attr">containers:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">jnlp</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">jenkins/jnlp-slave:3.27-1</span><br>      <span class="hljs-attr">tty:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">maven</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">maven:3.6.3-jdk-8</span><br>      <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cat</span><br>      <span class="hljs-attr">tty:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/root/.m2</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">maven-cache</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">docker</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">docker:19.03.8</span><br>      <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/run/docker.sock</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">docker-sock</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/lib/docker</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">docker-cache</span><br>      <span class="hljs-attr">tty:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cat</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">kubectl</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">boer0924/kubectl:1.18.3</span><br>      <span class="hljs-attr">tty:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cat</span><br></code></pre></td></tr></table></figure><h3 id="Jenkinsfile"><a href="#Jenkinsfile" class="headerlink" title="Jenkinsfile"></a>Jenkinsfile</h3><h4 id="声明式Jenkinsfile"><a href="#声明式Jenkinsfile" class="headerlink" title="声明式Jenkinsfile"></a>声明式Jenkinsfile</h4><p><strong>划重点</strong></p><ol><li>定义agent label是为在k8s中调度job的pod名字</li><li>定义parameters来选择需要部署的环境。</li><li>Jenkinsfile的两个全局变量：env/params。</li></ol><ul><li>设置env变量: <code>env.KEY = value</code></li><li>使用env变量: <code>$&#123;KEY&#125;</code></li></ul><ol start="4"><li>username&amp;password凭证的使用: <code>registryCre = credentials(&#39;registry&#39;)</code> [_USR/_PSW]</li></ol><ul><li>获取username: <code>$&#123;registryCre_USR&#125;</code></li><li>获取passowrd: <code>$&#123;registryCre_PSW&#125;</code></li></ul><ol start="5"><li>使用short commit_id作为image_tag 和 <code>kubernetes.io/change-cause</code>, 以保证镜像唯一，和可以回退到指定版本。</li><li>sed动态修改k8s资源定义文件manifests/k8s.yaml：</li></ol><ul><li><CHANGE_CAUSE>: 便于指定版本回退</li><li><IMAGE_TAG>: 指定版本</li><li><INGRESS>: 不同环境不同域名</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">pipeline</span> &#123;<br>  <span class="hljs-string">agent</span> &#123;<br>    <span class="hljs-string">kubernetes</span> &#123;<br>      <span class="hljs-string">label</span> <span class="hljs-string">&#x27;jenkins-worker&#x27;</span><br>      <span class="hljs-string">defaultContainer</span> <span class="hljs-string">&#x27;jnlp&#x27;</span><br>      <span class="hljs-string">yamlFile</span> <span class="hljs-string">&#x27;manifests/KubernetesPod.yaml&#x27;</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-string">parameters</span> &#123;<br>    <span class="hljs-string">choice(name:</span> <span class="hljs-string">&#x27;ENV&#x27;</span>, <span class="hljs-attr">choices:</span> [<span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-string">&#x27;pre&#x27;</span>, <span class="hljs-string">&#x27;prod&#x27;</span>], <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;选择部署环境？&#x27;</span><span class="hljs-string">)</span><br>  &#125;<br>  <span class="hljs-string">environment</span> &#123;<br>    <span class="hljs-string">AUTHOR</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;boer&#x27;</span><br>    <span class="hljs-string">EMAIL</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;boer0924@gmail.com&#x27;</span><br>    <span class="hljs-string">registryUrl</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;registry.boer.xyz&#x27;</span><br>    <span class="hljs-string">image</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;$&#123;registryUrl&#125;/public/spring-consume&quot;</span><br>    <span class="hljs-string">imageTag</span> <span class="hljs-string">=</span> <span class="hljs-string">sh(script:</span> <span class="hljs-string">&quot;git rev-parse --short HEAD&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span><span class="hljs-string">).trim()</span><br>    <span class="hljs-string">changeCause</span> <span class="hljs-string">=</span> <span class="hljs-string">sh(script:</span> <span class="hljs-string">&quot;git log --oneline -1 HEAD&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span><span class="hljs-string">).trim()</span><br>  &#125;<br>  <span class="hljs-string">stages</span> &#123;<br>    <span class="hljs-string">stage(&#x27;Test&#x27;)</span> &#123;<br>      <span class="hljs-string">steps</span> &#123;<br>        <span class="hljs-string">echo</span> <span class="hljs-string">&quot;单元测试&quot;</span><br>        <span class="hljs-string">echo</span> <span class="hljs-string">&quot;TEST&quot;</span><br>        <span class="hljs-string">script</span> &#123;<br>          <span class="hljs-string">if</span> <span class="hljs-string">(&quot;$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;test&#x27;) &#123;</span><br><span class="hljs-string">            env.NAMESPACE = &#x27;boer-test&#x27;</span><br><span class="hljs-string">            env.INGRESS = &#x27;test.consume.boer.xyz&#x27;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">          if (&quot;</span><span class="hljs-string">$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;pre&#x27;) &#123;</span><br><span class="hljs-string">            env.NAMESPACE = &#x27;boer-pre&#x27;</span><br><span class="hljs-string">            env.INGRESS = &#x27;pre.consume.boer.xyz&#x27;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">          if (&quot;</span><span class="hljs-string">$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;prod&#x27;) &#123;</span><br><span class="hljs-string">            env.NAMESPACE = &#x27;boer-prod&#x27;</span><br><span class="hljs-string">            env.INGRESS = &#x27;consume.boer.xyz&#x27;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    stage(&#x27;Maven&#x27;) &#123;</span><br><span class="hljs-string">      steps &#123;</span><br><span class="hljs-string">        container(&#x27;maven&#x27;) &#123;</span><br><span class="hljs-string">          echo &quot;</span><span class="hljs-string">编译打包&quot;</span><br>          <span class="hljs-string">sh</span> <span class="hljs-string">&quot;mvn clean package -Dmaven.test.skip=true&quot;</span><br>        &#125;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-string">stage(&#x27;Docker&#x27;)</span> &#123;<br>      <span class="hljs-string">environment</span> &#123;<br>        <span class="hljs-string">registryCre</span> <span class="hljs-string">=</span> <span class="hljs-string">credentials(&#x27;dockerhub&#x27;)</span><br>        <span class="hljs-string">registryUser</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;$&#123;registryCre_USR&#125;&quot;</span><br>        <span class="hljs-string">registryPass</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;$&#123;registryCre_PSW&#125;&quot;</span><br>      &#125;<br>      <span class="hljs-string">steps</span> &#123;<br>        <span class="hljs-string">container(&#x27;docker&#x27;)</span> &#123;<br>          <span class="hljs-string">echo</span> <span class="hljs-string">&quot;构建镜像&quot;</span><br>          <span class="hljs-string">sh</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">          docker login $&#123;registryUrl&#125; -u $&#123;registryUser&#125; -p $&#123;registryPass&#125;</span><br><span class="hljs-string">          docker build -t $&#123;image&#125;:$&#123;imageTag&#125; .</span><br><span class="hljs-string">          docker push $&#123;image&#125;:$&#123;imageTag&#125;</span><br><span class="hljs-string">          &#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>        &#125;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-string">stage(&#x27;K8S&#x27;)</span> &#123;<br>      <span class="hljs-string">environment</span> &#123;<br>        <span class="hljs-string">kubeconfig</span> <span class="hljs-string">=</span> <span class="hljs-string">credentials(&#x27;kubeconfig&#x27;)</span><br>      &#125;<br>      <span class="hljs-string">steps</span> &#123;<br>        <span class="hljs-string">container(&#x27;kubectl&#x27;)</span> &#123;<br>          <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Kubernetes发布&quot;</span><br>          <span class="hljs-string">sh</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">          sed -i &quot;s|&lt;CHANGE_CAUSE&gt;|$&#123;changeCause&#125;|g&quot; manifests/k8s.yaml</span><br><span class="hljs-string">          sed -i &quot;s|&lt;IMAGE&gt;|$&#123;image&#125;|g&quot; manifests/k8s.yaml</span><br><span class="hljs-string">          sed -i &quot;s|&lt;IMAGE_TAG&gt;|$&#123;imageTag&#125;|g&quot; manifests/k8s.yaml</span><br><span class="hljs-string">          sed -i &quot;s|&lt;INGRESS&gt;|$&#123;INGRESS&#125;|g&quot; manifests/k8s.yaml</span><br><span class="hljs-string">          kubectl --kubeconfig $kubeconfig apply -f manifests/k8s.yaml -n $&#123;NAMESPACE&#125;</span><br><span class="hljs-string">          &#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>        &#125;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-string">stage(&#x27;RollOut&#x27;)</span> &#123;<br>      <span class="hljs-string">environment</span> &#123;<br>        <span class="hljs-string">kubeconfig</span> <span class="hljs-string">=</span> <span class="hljs-string">credentials(&#x27;kubeconfig&#x27;)</span><br>      &#125;<br>      <span class="hljs-string">input</span> &#123;<br>        <span class="hljs-string">id</span> <span class="hljs-string">&#x27;ROLLOUT&#x27;</span><br>        <span class="hljs-string">message</span> <span class="hljs-string">&quot;是否快速回滚？&quot;</span><br>        <span class="hljs-string">ok</span> <span class="hljs-string">&quot;确认&quot;</span><br>        <span class="hljs-string">submitter</span> <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-string">parameters</span> &#123;<br>          <span class="hljs-string">choice(name:</span> <span class="hljs-string">&#x27;UNDO&#x27;</span>, <span class="hljs-attr">choices:</span> [<span class="hljs-string">&#x27;NO&#x27;</span>, <span class="hljs-string">&#x27;YES&#x27;</span>], <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;是否快速回滚？&#x27;</span><span class="hljs-string">)</span><br>        &#125;<br>      &#125;<br>      <span class="hljs-string">steps</span> &#123;<br>        <span class="hljs-string">container(&#x27;kubectl&#x27;)</span> &#123;<br>          <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Kubernetes快速回滚&quot;</span><br>          <span class="hljs-string">script</span> &#123;<br>            <span class="hljs-string">if</span> <span class="hljs-string">(&quot;$</span>&#123;<span class="hljs-string">UNDO</span>&#125;<span class="hljs-string">&quot; == &#x27;YES&#x27;) &#123;</span><br><span class="hljs-string">              sh &#x27;&#x27;&#x27;</span><br><span class="hljs-string">              # 快速回滚 - 回滚到最近版本</span><br><span class="hljs-string">              kubectl --kubeconfig $&#123;kubeconfig&#125; rollout undo deployment consume-deployment -n $&#123;NAMESPACE&#125;</span><br><span class="hljs-string">              # 回滚到指定版本</span><br><span class="hljs-string">              # kubectl -n $&#123;NAMESPACE&#125; rollout undo deployment consume-deployment --to-revision=$(kubectl -n $&#123;NAMESPACE&#125; rollout history deployment consume-deployment | grep $&#123;COMMIT_ID&#125; | awk &#x27;&#123;print $1&#125;&#x27;)</span><br><span class="hljs-string">              # kubectl -n $&#123;NAMESPACE&#125; rollout status deployment consume-deployment</span><br><span class="hljs-string">              &#x27;&#x27;&#x27;</span><br><span class="hljs-string">            &#125;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="脚本式Jenkinsfile"><a href="#脚本式Jenkinsfile" class="headerlink" title="脚本式Jenkinsfile"></a>脚本式Jenkinsfile</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">def</span> <span class="hljs-string">label</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;jenkins-slave&quot;</span><br><br><span class="hljs-string">properties([</span><br>   <span class="hljs-string">parameters([</span><br>      <span class="hljs-string">choice(name:</span> <span class="hljs-string">&#x27;ENV&#x27;</span><span class="hljs-string">,</span> <span class="hljs-attr">choices:</span> [<span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-string">&#x27;pre&#x27;</span>, <span class="hljs-string">&#x27;prod&#x27;</span>]<span class="hljs-string">,</span> <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;选择部署环境？&#x27;</span><span class="hljs-string">)</span><br>   <span class="hljs-string">])</span><br><span class="hljs-string">])</span><br><br><span class="hljs-string">podTemplate(label:</span> <span class="hljs-string">label,</span> <span class="hljs-attr">containers:</span> [<br>  <span class="hljs-string">containerTemplate(name:</span> <span class="hljs-string">&#x27;maven&#x27;</span>, <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;maven:3.6.3-jdk-8&#x27;</span>, <span class="hljs-attr">command:</span> <span class="hljs-string">&#x27;cat&#x27;</span>, <span class="hljs-attr">ttyEnabled:</span> <span class="hljs-literal">true</span><span class="hljs-string">)</span>,<br>  <span class="hljs-string">containerTemplate(name:</span> <span class="hljs-string">&#x27;docker&#x27;</span>, <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;docker:19.03.8&#x27;</span>, <span class="hljs-attr">command:</span> <span class="hljs-string">&#x27;cat&#x27;</span>, <span class="hljs-attr">ttyEnabled:</span> <span class="hljs-literal">true</span><span class="hljs-string">)</span>,<br>  <span class="hljs-string">containerTemplate(name:</span> <span class="hljs-string">&#x27;kubectl&#x27;</span>, <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;boer0924/kubectl:1.18.3&#x27;</span>, <span class="hljs-attr">command:</span> <span class="hljs-string">&#x27;cat&#x27;</span>, <span class="hljs-attr">ttyEnabled:</span> <span class="hljs-literal">true</span><span class="hljs-string">)</span>]<span class="hljs-string">,</span> <span class="hljs-attr">serviceAccount:</span> <span class="hljs-string">&#x27;jenkins&#x27;</span><span class="hljs-string">,</span> <span class="hljs-attr">volumes:</span> [<br>  <span class="hljs-string">hostPathVolume(mountPath:</span> <span class="hljs-string">&#x27;/root/.m2&#x27;</span>, <span class="hljs-attr">hostPath:</span> <span class="hljs-string">&#x27;/var/lib/cache/.m2&#x27;</span><span class="hljs-string">)</span>,<br>  <span class="hljs-string">hostPathVolume(mountPath:</span> <span class="hljs-string">&#x27;/var/run/docker.sock&#x27;</span>, <span class="hljs-attr">hostPath:</span> <span class="hljs-string">&#x27;/var/run/docker.sock&#x27;</span><span class="hljs-string">)</span>,<br>  <span class="hljs-string">hostPathVolume(mountPath:</span> <span class="hljs-string">&#x27;/var/lib/docker&#x27;</span>, <span class="hljs-attr">hostPath:</span> <span class="hljs-string">&#x27;/var/lib/docker&#x27;</span><span class="hljs-string">)</span><br>]<span class="hljs-string">)</span> &#123;<br>  <span class="hljs-string">node(label)</span> &#123;<br>    <span class="hljs-string">if</span> <span class="hljs-string">(&quot;$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;test&#x27;) &#123;</span><br><span class="hljs-string">      env.NAMESPACE = &#x27;devops&#x27;</span><br><span class="hljs-string">      env.INGRESS = &#x27;test&#x27;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    if (&quot;</span><span class="hljs-string">$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;pre&#x27;) &#123;</span><br><span class="hljs-string">      env.NAMESPACE = &#x27;pre&#x27;</span><br><span class="hljs-string">      env.INGRESS = &#x27;pre&#x27;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    if (&quot;</span><span class="hljs-string">$</span>&#123;<span class="hljs-string">params.ENV</span>&#125;<span class="hljs-string">&quot; == &#x27;prod&#x27;) &#123;</span><br><span class="hljs-string">      env.NAMESPACE = &#x27;prod&#x27;</span><br><span class="hljs-string">      env.INGRESS = &#x27;prod&#x27;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    def myRepo = checkout scm</span><br><span class="hljs-string">    def gitCommit = myRepo.GIT_COMMIT</span><br><span class="hljs-string">    def gitBranch = myRepo.GIT_BRANCH</span><br><span class="hljs-string">    def imageTag = sh(script: &quot;</span><span class="hljs-string">git</span> <span class="hljs-string">rev-parse</span> <span class="hljs-string">--short</span> <span class="hljs-string">HEAD&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span><span class="hljs-string">).trim()</span><br>    <span class="hljs-string">def</span> <span class="hljs-string">changeCause</span> <span class="hljs-string">=</span> <span class="hljs-string">sh(script:</span> <span class="hljs-string">&quot;git log --oneline -1 HEAD&quot;</span>, <span class="hljs-attr">returnStdout:</span> <span class="hljs-literal">true</span><span class="hljs-string">).trim()</span><br>    <span class="hljs-string">def</span> <span class="hljs-string">dockerRegistryUrl</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;registry.boer.xyz&quot;</span><br>    <span class="hljs-string">def</span> <span class="hljs-string">imageEndpoint</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;public/spring-produce&quot;</span><br>    <span class="hljs-string">def</span> <span class="hljs-string">image</span> <span class="hljs-string">=</span> <span class="hljs-string">&quot;$&#123;dockerRegistryUrl&#125;/$&#123;imageEndpoint&#125;&quot;</span><br><br>    <span class="hljs-string">stage(&#x27;单元测试&#x27;)</span> &#123;<br>      <span class="hljs-string">echo</span> <span class="hljs-string">&quot;1.测试阶段&quot;</span><br>    &#125;<br>    <span class="hljs-string">stage(&#x27;代码编译打包&#x27;)</span> &#123;<br>      <span class="hljs-string">try</span> &#123;<br>        <span class="hljs-string">container(&#x27;maven&#x27;)</span> &#123;<br>          <span class="hljs-string">echo</span> <span class="hljs-string">&quot;2. 代码编译打包阶段&quot;</span><br>          <span class="hljs-string">sh</span> <span class="hljs-string">&quot;mvn clean package -Dmaven.test.skip=true&quot;</span><br>        &#125;<br>      &#125; <span class="hljs-string">catch</span> <span class="hljs-string">(exc)</span> &#123;<br>        <span class="hljs-string">println</span> <span class="hljs-string">&quot;构建失败 - $&#123;currentBuild.fullDisplayName&#125;&quot;</span><br>        <span class="hljs-string">throw(exc)</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-string">stage(&#x27;构建</span> <span class="hljs-string">Docker</span> <span class="hljs-string">镜像&#x27;)</span> &#123;<br>      <span class="hljs-string">withCredentials(</span>[[<span class="hljs-string">$class:</span> <span class="hljs-string">&#x27;UsernamePasswordMultiBinding&#x27;</span>,<br>        <span class="hljs-attr">credentialsId:</span> <span class="hljs-string">&#x27;dockerhub&#x27;</span>,<br>        <span class="hljs-attr">usernameVariable:</span> <span class="hljs-string">&#x27;DOCKER_HUB_USER&#x27;</span>,<br>        <span class="hljs-attr">passwordVariable:</span> <span class="hljs-string">&#x27;DOCKER_HUB_PASSWORD&#x27;</span>]]<span class="hljs-string">)</span> &#123;<br>          <span class="hljs-string">container(&#x27;docker&#x27;)</span> &#123;<br>            <span class="hljs-string">echo</span> <span class="hljs-string">&quot;3. 构建 Docker 镜像阶段&quot;</span><br>            <span class="hljs-string">sh</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">              docker login $&#123;dockerRegistryUrl&#125; -u $&#123;DOCKER_HUB_USER&#125; -p $&#123;DOCKER_HUB_PASSWORD&#125;</span><br><span class="hljs-string">              docker build -t $&#123;image&#125;:$&#123;imageTag&#125; .</span><br><span class="hljs-string">              docker push $&#123;image&#125;:$&#123;imageTag&#125;</span><br><span class="hljs-string">              &quot;</span><span class="hljs-string">&quot;&quot;</span><br>          &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-string">stage(&#x27;运行</span> <span class="hljs-string">Kubectl&#x27;)</span> &#123;<br>      <span class="hljs-string">withCredentials(</span>[<span class="hljs-string">file(credentialsId:</span> <span class="hljs-string">&#x27;kubeconfig&#x27;</span>, <span class="hljs-attr">variable:</span> <span class="hljs-string">&#x27;KUBECONFIG&#x27;</span><span class="hljs-string">)</span>]<span class="hljs-string">)</span> &#123;<br>        <span class="hljs-string">container(&#x27;kubectl&#x27;)</span> &#123;<br>          <span class="hljs-string">sh</span> <span class="hljs-string">&quot;mkdir -p ~/.kube &amp;&amp; cp $&#123;KUBECONFIG&#125; ~/.kube/config&quot;</span><br>          <span class="hljs-string">echo</span> <span class="hljs-string">&quot;查看当前目录&quot;</span><br>          <span class="hljs-string">sh</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">            sed -i &quot;</span><span class="hljs-string">s|&lt;CHANGE_CAUSE&gt;|$</span>&#123;<span class="hljs-string">changeCause</span>&#125;<span class="hljs-string">|g&quot;</span> <span class="hljs-string">manifests/k8s.yaml</span><br>            <span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&quot;s|&lt;IMAGE&gt;|$&#123;image&#125;|g&quot;</span> <span class="hljs-string">manifests/k8s.yaml</span><br>            <span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&quot;s|&lt;IMAGE_TAG&gt;|$&#123;imageTag&#125;|g&quot;</span> <span class="hljs-string">manifests/k8s.yaml</span><br>            <span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&quot;s|&lt;INGRESS&gt;|$&#123;INGRESS&#125;|g&quot;</span> <span class="hljs-string">manifests/k8s.yaml</span><br>            <span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">manifests/k8s.yaml</span> <span class="hljs-string">--namespace</span> <span class="hljs-string">$</span>&#123;<span class="hljs-string">NAMESPACE</span>&#125;<br>          <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    stage(&#x27;快速回滚?&#x27;) &#123;</span><br><span class="hljs-string">      withCredentials([file(credentialsId: &#x27;kubeconfig&#x27;, variable: &#x27;KUBECONFIG&#x27;)]) &#123;</span><br><span class="hljs-string">        container(&#x27;kubectl&#x27;) &#123;</span><br><span class="hljs-string">          sh &quot;</span><span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">~/.kube</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">cp</span> <span class="hljs-string">$</span>&#123;<span class="hljs-string">KUBECONFIG</span>&#125; <span class="hljs-string">~/.kube/config&quot;</span><br>          <span class="hljs-string">def</span> <span class="hljs-string">userInput</span> <span class="hljs-string">=</span> <span class="hljs-string">input(</span><br>            <span class="hljs-attr">id:</span> <span class="hljs-string">&#x27;userInput&#x27;</span>,<br>            <span class="hljs-attr">message:</span> <span class="hljs-string">&#x27;是否需要快速回滚？&#x27;</span>,<br>            <span class="hljs-attr">parameters:</span> [<br>              [<br>                <span class="hljs-string">$class:</span> <span class="hljs-string">&#x27;ChoiceParameterDefinition&#x27;</span>,<br>                <span class="hljs-attr">choices:</span> <span class="hljs-string">&quot;N\nY&quot;</span>,<br>                <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;回滚?&#x27;</span><br>              ]<br>            ]<br>          <span class="hljs-string">)</span><br>          <span class="hljs-string">if</span> <span class="hljs-string">(userInput</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;Y&quot;</span><span class="hljs-string">)</span> &#123;<br>            <span class="hljs-string">sh</span> <span class="hljs-string">&quot;kubectl rollout undo deployment produce-deployment -n $&#123;NAMESPACE&#125;&quot;</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><blockquote><p>划重点<br>1.根据${COMMIT_ID}找出REVISION (<code>自动</code>)<br>2.根据commit_msg找出REVISION (<code>人工</code>)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ kubectl -n <span class="hljs-variable">$&#123;NAMESPACE&#125;</span> rollout <span class="hljs-built_in">history</span> deployment consume-deployment <br>deployment.apps/consume-deployment <br>REVISION  CHANGE-CAUSE<br>1         a03d0eb optimize change-cause msg<br>2         73f5a5c resource quota<br>3         2772a88 resource quota up<br>4         254b592 plus probe time<br>5         87989d8 更新配置文件<br><br><span class="hljs-comment"># 1.根据$&#123;COMMIT_ID&#125;找出REVISION(自动) 2.根据commit_msg找出REVISION(人工)</span><br>$ kubectl -n <span class="hljs-variable">$&#123;NAMESPACE&#125;</span> rollout undo deployment consume-deployment --to-revision=$(kubectl -n <span class="hljs-variable">$&#123;NAMESPACE&#125;</span> rollout <span class="hljs-built_in">history</span> deployment consume-deployment | grep <span class="hljs-variable">$&#123;COMMIT_ID&#125;</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>$ kubectl -n <span class="hljs-variable">$&#123;NAMESPACE&#125;</span> rollout status deployment consume-deployment<br></code></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://www.jenkins.io/doc/book/pipeline/syntax/">https://www.jenkins.io/doc/book/pipeline/syntax/</a></li><li><a href="https://www.jenkins.io/doc/pipeline/steps/workflow-multibranch/">https://www.jenkins.io/doc/pipeline/steps/workflow-multibranch/</a></li><li><a href="https://github.com/jenkinsci/kubernetes-plugin/tree/master/examples/declarative_from_yaml_file">https://github.com/jenkinsci/kubernetes-plugin/tree/master/examples/declarative_from_yaml_file</a></li><li><a href="https://plugins.jenkins.io/kubernetes/">https://plugins.jenkins.io/kubernetes/</a></li><li><a href="http://blog.jboost.cn/k8s3-cd.html">http://blog.jboost.cn/k8s3-cd.html</a></li><li><a href="https://plugins.jenkins.io/git-parameter/">https://plugins.jenkins.io/git-parameter/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
      <tag>CICD</tag>
      
      <tag>Jenkins</tag>
      
      <tag>Pipeline</tag>
      
      <tag>Harbor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>打破认知边界·融入未来世界</title>
    <link href="/2020/06/18/theai-train/"/>
    <url>/2020/06/18/theai-train/</url>
    
    <content type="html"><![CDATA[<p>《打破认知边界·融入未来世界》培训心得</p><h3 id="不管你接受不接受-人工智能都来了"><a href="#不管你接受不接受-人工智能都来了" class="headerlink" title="不管你接受不接受,人工智能都来了"></a>不管你接受不接受,人工智能都来了</h3><p>不管是从国家战略「新基建」主要包含5G基建、特高压、城际高速铁路和城际轨道交通、新能源汽车充电桩、大数据中心、人工智能、工业互联网等七大领域。人工智能屹立其中。<br>还是从你能”触摸”的人工智能：苹果公司的语音助手Siri；微软公司的人工智能助理Cortana(小娜)；小米科技打造的智能化语音助手小爱同学及其后续产品小爱音箱等一大批AI产品等。<br>最后到2016年，李世石与谷歌deepmind团队打造的AlphaGo对弈失败的直播震惊了世界，其后中国棋手柯洁同样惨败于AlphaGo的蒙特卡洛树算法之下。<br>这时方才知道，AI距离我们如此之近，AI的运用场景如此广泛。</p><span id="more"></span><p>AI在某一个方面战胜人类可能只是个时间早晚的问题<br>而在十几年前IBM的深蓝服务器和国际象棋大师卡斯帕罗夫对战时候，人们还是很惊愕，世界舆论哗然一片。<br>历史总是惊人相似，如果我们今天不努力、不反省、不学习，必然会被历史的车轮又一次碾碎。</p><h3 id="自省力"><a href="#自省力" class="headerlink" title="自省力"></a>自省力</h3><p>不能只满足我们引以为自豪的5G，更应该看到SpaceX推出的星链计划(Starlink)对世界格局的扭转<br>自卑之人，不敢反省<br>虚弱之人，逃避问题<br>自负之人，不屑于反省<br>自我之人，不懂得反省<br>好强之人，不愿反省</p><h3 id="学习力"><a href="#学习力" class="headerlink" title="学习力"></a>学习力</h3><p>未来企业和个人竞争力取决于学习力。 学习力=学习动力+学习毅力+学习能力=把知识转换化为智慧和知识资本=竞争力<br>学习动力是内在的驱动力，包括需要、情感和兴趣<br>学习毅力是学习意志，学习意志是驱使目标和克服困难的目标管理能力。<br>学习能力是感知力、记忆力、思维力、逻辑力、想象力等的总和，亦因此而形成对知识和信息的采集、存储、处理、决策、应用能力的基础性智力，是学习力的基础因素。<br>每天进步一盎司，摆脱功利和浮躁。<br>让学习无处不在，化于无形，溶于血液，变成习惯。<br>用心倾听世界和他人，并保持同理心和换位本能</p><p>所以“真正的敌人是我们自己” “凡是你排斥的，都是你应该学习的。”</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>你的心态才是你的真正主人。<br>你的最大的敌人往往是你自己。<br>你的思维往往决定你的高度。<br>你的心胸往往决定你的快（痛）感。<br>你的认知边界最终决定你的世界。</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Openconnect VPN</title>
    <link href="/2020/05/10/oc-vpn-connect/"/>
    <url>/2020/05/10/oc-vpn-connect/</url>
    
    <content type="html"><![CDATA[<p>2020年已注定是不平凡的一年<br>新冠肺炎疫情<br>科比逝世<br>……<br>疫情影响下各个公司启动远程办公，VPN成了必不可少的服务。</p><p><a href="http://www.infradead.org/openconnect/">http://www.infradead.org/openconnect/</a><br>Openconnect server (ocserv) is an SSL VPN server for administrators who require elaborate user management and control. Openconnect server provides user management interfaces and back-ends necessary in enterprise environments, as well as security features, such as isolation of connected clients, features currently not available to any existing VPN servers.</p><span id="more"></span><h3 id="1-安装ocserv"><a href="#1-安装ocserv" class="headerlink" title="1. 安装ocserv"></a>1. 安装ocserv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ocserv 已经在epel仓库中提供了，所以可以直接通过yum安装</span><br>yum install epel-release<br>yum install ocserv<br></code></pre></td></tr></table></figure><h3 id="2-创建-CA"><a href="#2-创建-CA" class="headerlink" title="2. 创建 CA"></a>2. 创建 CA</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/ocserv<br><span class="hljs-built_in">mkdir</span> CA<br><span class="hljs-built_in">cd</span> CA<br><span class="hljs-comment">## Root CA</span><br>vim ca.tmpl<br>cn = <span class="hljs-string">&quot;boer&quot;</span> <br>organization = <span class="hljs-string">&quot;boer&quot;</span> <br>serial = 1 <br>expiration_days = 3650<br>ca <br>signing_key <br>cert_signing_key <br>crl_signing_key<br><span class="hljs-comment"># Root CA 密钥</span><br>certtool --generate-privkey --outfile ca-key.pem<br><span class="hljs-comment"># 签发证书</span><br>certtool --generate-self-signed --load-privkey ca-key.pem --template ca.tmpl --outfile ca-cert.pem<br><br><span class="hljs-comment">## Server CA</span><br>vim server.tmpl<br><span class="hljs-comment">#cn 为服务器密码或者执行该服务器的域名</span><br>cn = <span class="hljs-string">&quot;vpn.boer.xyz&quot;</span> <br>organization = <span class="hljs-string">&quot;boer&quot;</span> <br>expiration_days = 3650<br>signing_key <br>encryption_key<br>tls_www_server<br><span class="hljs-comment"># Server 密钥</span><br>certtool --generate-privkey --outfile server-key.pem<br><span class="hljs-comment"># 签发证书</span><br>certtool --generate-certificate --load-privkey server-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template server.tmpl --outfile server-cert.pem<br><br><span class="hljs-comment"># 证书路径（上述步骤创建）：</span><br>/etc/ocserv/CA/ca-cert.pem <br>/etc/ocserv/CA/server-cert.pem<br>/etc/ocserv/CA/server-key.pem<br></code></pre></td></tr></table></figure><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建路由分组管理目录</span><br><span class="hljs-built_in">mkdir</span> -p /etc/ocserv/group<br>vim /etc/ocserv/ocserv.conf<br>auth = <span class="hljs-string">&quot;plain[/etc/ocserv/ocpasswd]&quot;</span><br>tcp-port = 443 <span class="hljs-comment"># *</span><br>run-as-user = ocserv<br>run-as-group = ocserv<br>config-per-group = /etc/ocserv/group/ <span class="hljs-comment"># *</span><br>default-group-config = /etc/ocserv/group/Default<br>default-select-group = Default<br>auto-select-group = <span class="hljs-literal">false</span> <br>socket-file = ocserv.sock<br>chroot-dir = /var/lib/ocserv<br>isolate-workers = <span class="hljs-literal">true</span><br>max-clients = 50 <span class="hljs-comment"># *</span><br>max-same-clients = 2<br>keepalive = 32400<br>dpd = 90<br>mobile-dpd = 1800<br>switch-to-tcp-timeout = 25<br>try-mtu-discovery = <span class="hljs-literal">true</span> <span class="hljs-comment"># false</span><br>server-cert = /etc/ocserv/CA/server-cert.pem <span class="hljs-comment"># *</span><br>server-key = /etc/ocserv/CA/server-key.pem <span class="hljs-comment"># *</span><br>ca-cert = /etc/ocserv/CA/ca-cert.pem <span class="hljs-comment"># *</span><br>cert-user-oid = 2.5.4.3 <span class="hljs-comment"># 0.9.2342.19200300.100.1.1</span><br>tls-priorities = <span class="hljs-string">&quot;NORMAL:%SERVER_PRECEDENCE:%COMPAT:-VERS-SSL3.0&quot;</span><br>auth-timeout = 240<br>min-reauth-time = 300<br>max-ban-score = 0<br>ban-reset-time = 300<br>cookie-timeout = 300<br>deny-roaming = <span class="hljs-literal">false</span><br>rekey-time = 172800<br>rekey-method = ssl<br>use-occtl = <span class="hljs-literal">true</span><br>pid-file = /var/run/ocserv.pid<br>device = vpns<br>predictable-ips = <span class="hljs-literal">true</span><br>default-domain = boer.xyz <span class="hljs-comment"># *</span><br>ipv4-network = 192.168.5.0/24 <span class="hljs-comment"># *</span><br>dns = 192.168.5.1 <span class="hljs-comment"># * 自建dns服务</span><br>split-dns = *.boer.xyz <span class="hljs-comment"># *</span><br>ping-leases = <span class="hljs-literal">false</span><br>cisco-client-compat = <span class="hljs-literal">true</span><br>dtls-legacy = <span class="hljs-literal">true</span><br>user-profile = profile.xml<br><br><span class="hljs-comment"># 创建一个登陆用的用户名与密码</span><br>ocpasswd -c /etc/ocserv/ocpasswd boer<br></code></pre></td></tr></table></figure><h3 id="4-转发与安全配置"><a href="#4-转发与安全配置" class="headerlink" title="4. 转发与安全配置"></a>4. 转发与安全配置</h3><ul><li>network 192.169.5.0/24 为/etc/ocserv/ocserv.conf中的ipv4-network = 192.168.5.0/24 </li><li>ocserv WAN interface 为eth0</li></ul><h4 id="4-1-修改内核配置"><a href="#4-1-修改内核配置" class="headerlink" title="4.1 修改内核配置"></a>4.1 修改内核配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysctl.conf<br><span class="hljs-comment"># Protect from IP Spoofing</span><br>net.ipv4.conf.all.rp_filter = 1<br>net.ipv4.conf.default.rp_filter = 1<br><br><span class="hljs-comment"># Ignore ICMP broadcast requests</span><br>net.ipv4.icmp_echo_ignore_broadcasts = 1<br><br><span class="hljs-comment"># Protect from bad icmp error messages</span><br>net.ipv4.icmp_ignore_bogus_error_responses = 1<br><br><span class="hljs-comment"># Disable source packet routing</span><br>net.ipv4.conf.all.accept_source_route = 0<br>net.ipv6.conf.all.accept_source_route = 0<br>net.ipv4.conf.default.accept_source_route = 0<br>net.ipv6.conf.default.accept_source_route = 0<br><br><span class="hljs-comment"># Turn on exec shield</span><br>kernel.exec-shield = 1<br>kernel.randomize_va_space = 1<br><br><span class="hljs-comment"># Block SYN attacks</span><br>net.ipv4.tcp_syncookies = 1<br>net.ipv4.tcp_max_syn_backlog = 2048<br>net.ipv4.tcp_synack_retries = 2<br>net.ipv4.tcp_syn_retries = 5<br><br><span class="hljs-comment"># Log Martians</span><br>net.ipv4.conf.all.log_martians = 1<br>net.ipv4.icmp_ignore_bogus_error_responses = 1<br><br><span class="hljs-comment"># Ignore send redirects</span><br>net.ipv4.conf.all.send_redirects = 0<br>net.ipv4.conf.default.send_redirects = 0<br><br><span class="hljs-comment"># Ignore ICMP redirects</span><br>net.ipv4.conf.all.accept_redirects = 0<br>net.ipv6.conf.all.accept_redirects = 0<br>net.ipv4.conf.default.accept_redirects = 0<br>net.ipv6.conf.default.accept_redirects = 0<br>net.ipv4.conf.all.secure_redirects = 0<br>net.ipv4.conf.default.secure_redirects = 0<br><br>net.ipv6.conf.all.accept_ra = 2<br>net.ipv6.conf.eth0.accept_ra = 2<br><br>net.ipv4.ip_forward = 1<br></code></pre></td></tr></table></figure><p>使之生效： sysctl -p</p><h4 id="4-2-IPtables"><a href="#4-2-IPtables" class="headerlink" title="4.2 IPtables"></a>4.2 IPtables</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop firewalld<br>systemctl <span class="hljs-built_in">disable</span> firewalld<br>yum install iptables <br>systemcctl start iptables<br>systemcctl <span class="hljs-built_in">enable</span> iptables<br></code></pre></td></tr></table></figure><h4 id="4-3-IPtables配置"><a href="#4-3-IPtables配置" class="headerlink" title="4.3 IPtables配置"></a>4.3 IPtables配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysconfig/iptables<br><span class="hljs-comment"># sample configuration for iptables service</span><br><span class="hljs-comment"># you can edit this manually or use system-config-firewall</span><br><span class="hljs-comment"># please do not ask us to add additional ports/services to this default configuration</span><br><span class="hljs-comment">#*filter</span><br><span class="hljs-comment">#:INPUT ACCEPT [0:0]</span><br><span class="hljs-comment">#:FORWARD ACCEPT [0:0]</span><br><span class="hljs-comment">#:OUTPUT ACCEPT [0:0]</span><br><span class="hljs-comment">#-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="hljs-comment">#-A INPUT -p icmp -j ACCEPT</span><br><span class="hljs-comment">#-A INPUT -i lo -j ACCEPT</span><br><span class="hljs-comment">#-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="hljs-comment">#-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="hljs-comment">#-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="hljs-comment">#COMMIT</span><br><span class="hljs-comment">#</span><br>*nat<br>:INPUT ACCEPT [0:0]<br>:PREROUTING ACCEPT [0:0]<br>:OUTPUT ACCEPT [0:0]<br>:POSTROUTING ACCEPT [0:0]<br><span class="hljs-comment"># Generic NAT for LAN Network 192.168.5.0/24</span><br>-A POSTROUTING -s 192.168.5.0/24 -o eth0 -j MASQUERADE<br>COMMIT<br><br>*mangle<br>:PREROUTING ACCEPT [0:0]<br>:INPUT ACCEPT [0:0]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [0:0]<br>:POSTROUTING ACCEPT [0:0]<br>COMMIT<br><br>*filter<br>:INPUT ACCEPT [0:0]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [0:0]<br><span class="hljs-comment"># START INPUT RULES</span><br><span class="hljs-comment"># Stateful Rule - INPUT</span><br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><span class="hljs-comment"># ACCEPT traffic from Loopback interface</span><br>-A INPUT -i lo -j ACCEPT<br><span class="hljs-comment"># ACCEPT SSH from LAN</span><br>-A INPUT -p tcp -m tcp -i eth0 --dport 22 -j ACCEPT<br><span class="hljs-comment"># ACCEPT DHCP from LAN</span><br>-A INPUT -p udp -m udp -i eth1 --dport 67:68 -j ACCEPT<br><span class="hljs-comment"># ACCEPT Webmin from LAN (Optional, only for Webmin users)</span><br>-A INPUT -p tcp -m tcp -i eth0 --dport 10000 -j ACCEPT<br><span class="hljs-comment"># ACCEPT DNS UDP From LAN</span><br>-A INPUT -p udp -m udp -i eth0 --dport 53 -j ACCEPT<br><span class="hljs-comment"># ACCEPT DNS TCP From LAN</span><br>-A INPUT -p tcp -m tcp -i eth0 --dport 53 -j ACCEPT<br><span class="hljs-comment"># ACCEPT ping from LAN</span><br>-A INPUT -p icmp --icmp-type echo-request -i eth1 -j ACCEPT<br><span class="hljs-comment"># ACCEPT OpenConnect TCP From WAN</span><br>-A INPUT -p tcp -m tcp -i eth0 --dport 443 -j ACCEPT<br><span class="hljs-comment"># ACCEPT OpenConnect UPD From WAN</span><br>-A INPUT -p udp -m udp -i eth0 --dport 443 -j ACCEPT<br><span class="hljs-comment"># DROP wan traffic</span><br>-A INPUT -i eth0 -j DROP<br><span class="hljs-comment"># LOG LAN</span><br>-A INPUT -i eth1 -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES-LOG-INPUT-LAN:&quot;</span> --log-level 4<br><span class="hljs-comment"># ACCEPT LAN traffic - Learning rule - Should be changed to DROP once custom rules are created.</span><br>-A INPUT -i eth1 -j ACCEPT<br><span class="hljs-comment"># LAST RULE - DROP all traffic</span><br>-A INPUT -j DROP<br><span class="hljs-comment"># END INPUT RULES</span><br><br><span class="hljs-comment"># START FORWARD RULES</span><br><span class="hljs-comment"># Stateful Rule - FORWARD</span><br>-A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT<br><span class="hljs-comment"># ACCEPT LAN to WAN</span><br>-A FORWARD -s 192.168.5.0/24 -j ACCEPT<br><span class="hljs-comment"># LOG Forwarded traffic</span><br>-A FORWARD -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES-LOG-FORWARD:&quot;</span> --log-level 4<br><span class="hljs-comment"># LAST RULE - ACCEPT all traffic - Should be changed to DROP once custom rules are created.</span><br>-A FORWARD -j ACCEPT<br><span class="hljs-comment"># END FORWARD RULES</span><br><br><span class="hljs-comment"># START OUTPUT RULES</span><br><span class="hljs-comment"># Stateful Rule - OUTPUT</span><br>-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><span class="hljs-comment"># LOG Outgoing traffic</span><br>-A OUTPUT -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES-LOG-OUTPUT:&quot;</span> --log-level 4<br><span class="hljs-comment"># LAST RULE - ACCEPT all traffic - Should be    changed to DROP once custom rules are created.</span><br>-A OUTPUT -j ACCEPT<br><span class="hljs-comment"># END OUTPUT RULES</span><br>COMMIT<br></code></pre></td></tr></table></figure><p>使之生效【重启机器后需要重新生效一下】<br>iptables-restore &lt; /etc/sysconfig/iptables</p><h3 id="5-ocserv-Oops"><a href="#5-ocserv-Oops" class="headerlink" title="5. ocserv Oops"></a>5. ocserv Oops</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加用户</span><br>ocpasswd -c /etc/ocserv/ocpasswd 【用户名】<br><span class="hljs-comment"># 添加用户至某个分组</span><br>ocpasswd -c /etc/ocserv/ocpasswd -g 【分组名称】 【用户名】<br><span class="hljs-comment"># 锁定用户</span><br>ocpasswd -c /etc/ocserv/ocpasswd -l 【用户名】<br><span class="hljs-comment"># 解锁用户</span><br>ocpasswd -c /etc/ocserv/ocpasswd -u 【用户名】<br><span class="hljs-comment"># 删除用户</span><br>ocpasswd -c /etc/ocserv/ocpasswd -d 【用户名】<br><br><span class="hljs-comment"># 查看当前状态:</span><br><span class="hljs-comment">## 查看当前服务运行状态:</span><br>occtl -n show status<br><span class="hljs-comment">## 查看当前在线用户详情:</span><br>occtl -n show <span class="hljs-built_in">users</span><br><br><span class="hljs-comment"># 踢掉当前在线用户:</span><br><span class="hljs-comment">## 通过用户名:</span><br>occtl disconnect user 【用户名】<br><span class="hljs-comment">## 通过id:</span><br>occtl disconnect <span class="hljs-built_in">id</span> 【<span class="hljs-built_in">id</span>号】<br></code></pre></td></tr></table></figure><h3 id="6-客户端"><a href="#6-客户端" class="headerlink" title="6. 客户端"></a>6. 客户端</h3><h4 id="6-1-Redhat系"><a href="#6-1-Redhat系" class="headerlink" title="6.1 Redhat系"></a>6.1 Redhat系</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>copr.fedorainfracloud.org<span class="hljs-regexp">/coprs/</span>dwmw2<span class="hljs-regexp">/openconnect/</span><br>yum install openconnect<br>openconnect --user=boer -b x.x.x.x:xyz<br></code></pre></td></tr></table></figure><h4 id="6-2-Windows-amp-MacOS"><a href="#6-2-Windows-amp-MacOS" class="headerlink" title="6.2 Windows &amp; MacOS"></a>6.2 Windows &amp; MacOS</h4><p><a href="https://github.com/openconnect/openconnect-gui">https://github.com/openconnect/openconnect-gui</a></p><h4 id="6-3-Android"><a href="#6-3-Android" class="headerlink" title="6.3 Android"></a>6.3 Android</h4><p><a href="https://play.google.com/store/apps/details?id=com.github.digitalsoftwaresolutions.openconnect">https://play.google.com/store/apps/details?id=com.github.digitalsoftwaresolutions.openconnect</a></p><hr><p>感谢我的同事zp</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ocserv</tag>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes部署代码仓库Gitea</title>
    <link href="/2020/04/24/k8s-codeing-gitea/"/>
    <url>/2020/04/24/k8s-codeing-gitea/</url>
    
    <content type="html"><![CDATA[<p>Gitea 是一个开源社区驱动的<strong>轻量级</strong>代码托管解决方案</p><blockquote><p><a href="https://docs.gitea.io/zh-cn/comparison/">https://docs.gitea.io/zh-cn/comparison/</a></p></blockquote><ul><li>支持活动时间线</li><li>支持 SSH 以及 HTTP/HTTPS 协议</li><li>支持 SMTP、LDAP 和反向代理的用户认证</li><li>支持反向代理子路径</li><li>支持用户、组织和仓库管理系统</li><li>支持添加和删除仓库协作者</li><li>支持仓库和组织级别 Web 钩子（包括 Slack 集成）</li><li>支持仓库 Git 钩子和部署密钥</li><li>支持仓库工单（Issue）、合并请求（Pull Request）以及 Wiki</li><li>支持迁移和镜像仓库以及它的 Wiki</li><li>支持在线编辑仓库文件和 Wiki</li><li>支持自定义源的 Gravatar 和 Federated Avatar</li><li>支持邮件服务</li><li>支持后台管理面板</li><li>支持 MySQL、PostgreSQL、SQLite3, MSSQL 和 TiDB（实验性支持） 数据库</li><li>支持多语言本地化（21 种语言）</li></ul><span id="more"></span><h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><h4 id="Fetch-MySQL-Helm-Charts"><a href="#Fetch-MySQL-Helm-Charts" class="headerlink" title="Fetch MySQL Helm Charts"></a>Fetch MySQL Helm Charts</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">helm repo add stable https://mirror.azure.cn/kubernetes/charts<br>helm repo add incubator https://mirror.azure.cn/kubernetes/charts-incubator<br><span class="hljs-built_in">cd</span> ~/k8s/helm/charts<br>helm search mysql --version 1.6.4<br>helm fetch stable/mysql --version 1.6.4<br>tar -zxf mysql-1.6.4.tgz<br><span class="hljs-built_in">cd</span> mysql<br><span class="hljs-comment"># modify values.yaml 详见下文</span><br>helm install --name mysql -f values.yaml . --namespace devops<br>helm upgrade -f values.yaml mysql . --namespace devops<br>helm delete --purge mysql <span class="hljs-comment"># It&#x27;s Dangerous</span><br></code></pre></td></tr></table></figure><h4 id="MySQL-Helm-values-yaml"><a href="#MySQL-Helm-values-yaml" class="headerlink" title="MySQL Helm values.yaml"></a>MySQL Helm values.yaml</h4><p>划重点</p><ol><li>创建gitea库、用户、密码</li><li>openebs动态持久卷storageClass</li><li>设置默认字符集initializationFiles</li><li>metallb service服务暴露<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">image:</span> <span class="hljs-string">&quot;mysql&quot;</span><br><span class="hljs-attr">imageTag:</span> <span class="hljs-string">&quot;5.7.30&quot;</span><br><span class="hljs-attr">strategy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">Recreate</span><br><span class="hljs-attr">mysqlRootPassword:</span> <span class="hljs-string">Root@123</span><br><span class="hljs-attr">mysqlUser:</span> <span class="hljs-string">gitea</span><br><span class="hljs-attr">mysqlPassword:</span> <span class="hljs-string">Gitea@123</span><br><span class="hljs-attr">mysqlDatabase:</span> <span class="hljs-string">gitea</span><br><span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br><span class="hljs-attr">persistence:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment">## database data Persistent Volume Storage Class</span><br>  <span class="hljs-comment">## If defined, storageClassName: &lt;storageClass&gt;</span><br>  <span class="hljs-comment">## If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</span><br>  <span class="hljs-comment">## If undefined (the default) or set to null, no storageClassName spec is</span><br>  <span class="hljs-comment">##   set, choosing the default provisioner.  (gp2 on AWS, standard on</span><br>  <span class="hljs-comment">##   GKE, AWS &amp; OpenStack)</span><br>  <span class="hljs-comment">##</span><br>  <span class="hljs-comment"># storageClass: &quot;-&quot;</span><br>  <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br>  <span class="hljs-attr">accessMode:</span> <span class="hljs-string">ReadWriteOnce</span><br>  <span class="hljs-attr">size:</span> <span class="hljs-string">10Gi</span><br>  <span class="hljs-attr">annotations:</span> &#123;&#125;<br><span class="hljs-attr">securityContext:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">runAsUser:</span> <span class="hljs-number">999</span><br>  <span class="hljs-attr">fsGroup:</span> <span class="hljs-number">999</span><br><span class="hljs-attr">resources:</span><br>  <span class="hljs-attr">requests:</span><br>    <span class="hljs-attr">memory:</span> <span class="hljs-string">256Mi</span><br>    <span class="hljs-attr">cpu:</span> <span class="hljs-string">100m</span><br><span class="hljs-attr">configurationFilesPath:</span> <span class="hljs-string">/etc/mysql/conf.d/</span><br><span class="hljs-attr">configurationFiles:</span> &#123;&#125;<br><span class="hljs-attr">initializationFiles:</span><br>  <span class="hljs-attr">first-db.sql:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    CREATE DATABASE IF NOT EXISTS first DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</span><br><span class="hljs-string"></span><span class="hljs-attr">metrics:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">prom/mysqld-exporter</span><br>  <span class="hljs-attr">imageTag:</span> <span class="hljs-string">v0.10.0</span><br>  <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>  <span class="hljs-attr">resources:</span> &#123;&#125;<br>  <span class="hljs-attr">annotations:</span> &#123;&#125;<br>    <span class="hljs-comment"># prometheus.io/scrape: &quot;true&quot;</span><br>    <span class="hljs-comment"># prometheus.io/port: &quot;9104&quot;</span><br>  <span class="hljs-attr">livenessProbe:</span><br>    <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">15</span><br>    <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">5</span><br>  <span class="hljs-attr">readinessProbe:</span><br>    <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">5</span><br>    <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">flags:</span> []<br>  <span class="hljs-attr">serviceMonitor:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">additionalLabels:</span> &#123;&#125;<br><span class="hljs-attr">service:</span><br>  <span class="hljs-comment"># annotations: &#123;&#125;</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">metallb.universe.tf/address-pool:</span> <span class="hljs-string">default</span><br>  <span class="hljs-comment">## Specify a service type</span><br>  <span class="hljs-comment">## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">LoadBalancer</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">3306</span><br>  <span class="hljs-comment"># nodePort: 32000</span><br>  <span class="hljs-comment"># loadBalancerIP:</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="Gitea"><a href="#Gitea" class="headerlink" title="Gitea"></a>Gitea</h3><p>划重点</p><ol><li>openebs动态持久卷storageClass</li><li>metallb service暴露ssh端口</li><li>ingress service暴露http端口<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">devops</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-deployment</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">gitea</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">gitea</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">gitea</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">gitea</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">gitea/gitea:1.12.2</span><br>        <span class="hljs-attr">ports:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">3000</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-http</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">22</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-ssh</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/data</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-data</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-data</span><br>        <span class="hljs-attr">persistentVolumeClaim:</span><br>          <span class="hljs-attr">claimName:</span> <span class="hljs-string">gitea-pvc</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-pvc</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">devops</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">openebs-hostpath</span><br>  <span class="hljs-attr">accessModes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOnce</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">5Gi</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-service</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">devops</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">metallb.universe.tf/address-pool:</span> <span class="hljs-string">default</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">gitea</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">LoadBalancer</span><br>  <span class="hljs-attr">ports:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-http</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">3000</span><br>    <span class="hljs-attr">targetPort:</span> <span class="hljs-string">gitea-http</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-ssh</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">22</span><br>    <span class="hljs-attr">targetPort:</span> <span class="hljs-string">gitea-ssh</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">networking.k8s.io/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">gitea-ingress</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">devops</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/load-balance:</span> <span class="hljs-string">&quot;ip_hash&quot;</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/upstream-hash-by:</span> <span class="hljs-string">&quot;$request_uri&quot;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">gitea.boer.xyz</span><br>    <span class="hljs-attr">http:</span><br>      <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>        <span class="hljs-attr">backend:</span><br>          <span class="hljs-attr">serviceName:</span> <span class="hljs-string">gitea-service</span><br>          <span class="hljs-attr">servicePort:</span> <span class="hljs-number">3000</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="Gitea按照引导"><a href="#Gitea按照引导" class="headerlink" title="Gitea按照引导"></a>Gitea按照引导</h3><p><img src="/img/gitea_installer.png" alt="gitea_installer"></p><ul><li>数据库类型：MySQL</li><li>数据库主机：mysql service-name:3306</li><li>用户/密码/数据库： gitea</li><li>http域名：gitea.boer.xyz (ingress域名)</li><li>ssh通过域名：gitea.boer.xyz (与ingress域名一致)</li><li>最下面创建管理员账号（如果未创建，则第一个注册账号为管理员）</li></ul><hr><blockquote><p>添加SSHKey，开始使用吧！</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Devops</tag>
      
      <tag>Gogs</tag>
      
      <tag>Gitea</tag>
      
      <tag>Gitlab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes日志系统EFK</title>
    <link href="/2019/10/24/k8s-logging-efk/"/>
    <url>/2019/10/24/k8s-logging-efk/</url>
    
    <content type="html"><![CDATA[<p>Elasticsearch + Filebeat + Kibana = EFK<br>F: it’s not Fluentd</p><blockquote><p>Fluentd需要学习配置语法, Filebeat相对熟悉</p></blockquote><p><a href="https://github.com/elastic/helm-charts">https://github.com/elastic/helm-charts</a></p><span id="more"></span><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><ul><li>Helm &gt;=2.8.0 and &lt;3.0.0</li><li>Kubernetes &gt;=1.8</li><li>3 Work-node</li><li>1GB of RAM for the JVM heap</li></ul><h3 id="Helm-Charts"><a href="#Helm-Charts" class="headerlink" title="Helm Charts"></a>Helm Charts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">helm repo add elastic https://helm.elastic.co<br>helm repo update<br><br><span class="hljs-built_in">cd</span> ~/k8s/helm/charts<br><br>helm search elasticsearch --version 7.6.2<br>helm search filebeat --version 7.6.2<br>helm search kibana --version 7.6.2<br><br>helm fetch elastic/elasticsearch --version 7.6.2<br>helm fetch elastic/filebeat --version 7.6.2<br>helm fetch elastic/kibana --version 7.6.2<br><br>tar -zxf elasticsearch-7.6.2.tgz<br>tar -zxf filebeat-7.6.2.tgz<br>tar -zxf kibana-7.6.2.tgz<br><br><span class="hljs-comment"># 安装</span><br>helm install --name elasticsearch -f values.yaml . --namespace logging<br>helm install --name filebeat -f values.yaml . --namespace logging<br>helm install --name kibana -f values.yaml . --namespace logging<br><span class="hljs-comment"># 更新</span><br>helm upgrade -f values.yaml elasticsearch . --namespace logging<br>helm upgrade -f values.yaml filebeat . --namespace logging<br>helm upgrade -f values.yaml kibana . --namespace logging<br><span class="hljs-comment"># 删除</span><br>helm delete --purge elasticsearch<br>helm delete --purge filebeat<br>helm delete --purge kibana<br><span class="hljs-comment"># 删除es-pvc *仅测试</span><br>kubectl -n logging delete pvc -l app=elasticsearch-logging<br></code></pre></td></tr></table></figure><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><h4 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建CA证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -LO https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-linux-x86_64.tar.gz<br>tar -zxf elasticsearch-7.6.2-linux-x86_64.tar.gz<br><span class="hljs-built_in">cd</span> elasticsearch-7.6.2<br><span class="hljs-comment"># 生成RootCA</span><br>bin/elasticsearch-certutil ca --days 36500 <span class="hljs-comment"># elastic-stack-ca.p12</span><br><span class="hljs-comment"># 签发证书</span><br>bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 --days 36500 <span class="hljs-comment"># elastic-certificates.p12</span><br><br><span class="hljs-comment"># 转换证书、验证有效期</span><br>openssl pkcs12 -<span class="hljs-keyword">in</span> elastic-certificates.p12 -out elastic-certificates.pem -nodes<br>openssl x509 -<span class="hljs-keyword">in</span> elastic-certificates.pem -noout -dates<br><br><span class="hljs-comment"># CA secret</span><br>kubectl -n logging create secret generic elastic-certificates --from-file=elastic-certificates.p12<br><span class="hljs-comment"># 挂载secret</span><br><span class="hljs-comment">## 详见下面values.yaml</span><br>secretMounts:<br>  - name: elastic-certificates<br>    secretName: elastic-certificates<br>    path: /usr/share/elasticsearch/config/certs<br><span class="hljs-comment"># 使用CA</span><br><span class="hljs-comment">## 详见下面values.yaml</span><br>xpack.security.enabled: <span class="hljs-literal">true</span><br>xpack.security.transport.ssl.enabled: <span class="hljs-literal">true</span><br>xpack.security.transport.ssl.verification_mode: certificate <br>xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12 <br>xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12<br></code></pre></td></tr></table></figure><h4 id="Elasticsearch-Helm-Values配置"><a href="#Elasticsearch-Helm-Values配置" class="headerlink" title="Elasticsearch Helm Values配置"></a>Elasticsearch Helm Values配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim values.yaml</span><br><span class="hljs-attr">clusterName:</span> <span class="hljs-string">&quot;elasticsearch&quot;</span><br><span class="hljs-attr">nodeGroup:</span> <span class="hljs-string">&quot;logging&quot;</span><br><span class="hljs-comment"># The service that non master groups will try to connect to when joining the cluster</span><br><span class="hljs-comment"># This should be set to clusterName + &quot;-&quot; + nodeGroup for your master group</span><br><span class="hljs-attr">masterService:</span> <span class="hljs-string">&quot;elasticsearch-logging&quot;</span><br><span class="hljs-attr">esConfig:</span><br>  <span class="hljs-attr">elasticsearch.yml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    xpack.security.enabled: true # 开启xpack.security, 所以需要下面ssl证书, 所以需要下面extraEnvs</span><br><span class="hljs-string">    xpack.security.transport.ssl.enabled: true</span><br><span class="hljs-string">    xpack.security.transport.ssl.verification_mode: certificate</span><br><span class="hljs-string">    xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12</span><br><span class="hljs-string">    xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12</span><br><span class="hljs-string">    xpack.monitoring.enabled: true # 开启xpack.monitoring监控</span><br><span class="hljs-string">    xpack.monitoring.collection.enabled: true</span><br><span class="hljs-string">    xpack.monitoring.exporters.my_local: # 监控数据export当前集群。用自己监控自己, not最佳实践</span><br><span class="hljs-string">      type: local</span><br><span class="hljs-string">      use_ingest: false</span><br><span class="hljs-string"></span><span class="hljs-attr">extraEnvs:</span> <span class="hljs-comment"># 不安全。应该使用secrets存储密码 @TODO</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ELASTIC_USERNAME</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;elastic&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ELASTIC_PASSWORD</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;123456&quot;</span><br><span class="hljs-attr">secretMounts:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">elastic-certificates</span><br>    <span class="hljs-attr">secretName:</span> <span class="hljs-string">elastic-certificates</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">/usr/share/elasticsearch/config/certs</span><br><span class="hljs-attr">esJavaOpts:</span> <span class="hljs-string">&quot;-Xmx1g -Xms1g&quot;</span> <span class="hljs-comment"># es heapsize</span><br><span class="hljs-attr">resources:</span><br>  <span class="hljs-attr">requests:</span><br>    <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;1000m&quot;</span><br>    <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;2Gi&quot;</span><br>  <span class="hljs-attr">limits:</span><br>    <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;1000m&quot;</span><br>    <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;2Gi&quot;</span><br><span class="hljs-attr">volumeClaimTemplate:</span><br>  <span class="hljs-attr">accessModes:</span> [ <span class="hljs-string">&quot;ReadWriteOnce&quot;</span> ]<br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span> <span class="hljs-comment"># StorageClass # 建议LocalPV 性能好</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">200Gi</span><br><span class="hljs-attr">clusterHealthCheckParams:</span> <span class="hljs-string">&quot;wait_for_status=green&amp;timeout=3s&quot;</span> <span class="hljs-comment"># readinessProbe</span><br><span class="hljs-attr">ingress:</span> <span class="hljs-comment"># 是否Ingress暴露</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">kubernetes.io/ingress.class:</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>  <span class="hljs-attr">hosts:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">elasticsearch.boer.xyz</span><br></code></pre></td></tr></table></figure><h3 id="Filebeat"><a href="#Filebeat" class="headerlink" title="Filebeat"></a>Filebeat</h3><h4 id="Filebeat-Helm-Values配置"><a href="#Filebeat-Helm-Values配置" class="headerlink" title="Filebeat Helm Values配置"></a>Filebeat Helm Values配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">filebeatConfig:</span><br>  <span class="hljs-attr">filebeat.yml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    filebeat.inputs:</span><br><span class="hljs-string">    - type: docker</span><br><span class="hljs-string">      containers.ids:</span><br><span class="hljs-string">      - &#x27;*&#x27;</span><br><span class="hljs-string">    processors:</span><br><span class="hljs-string">      - add_kubernetes_metadata: ~</span><br><span class="hljs-string">      - drop_fields: # drop掉不需要的字段</span><br><span class="hljs-string">          fields: [&quot;ecs&quot;, &quot;log&quot;, &quot;input&quot;, &quot;agent&quot;] # 缩进很重要</span><br><span class="hljs-string">          ignore_missing: false</span><br><span class="hljs-string"></span>    <br>    <span class="hljs-attr">setup.template.name:</span> <span class="hljs-string">&quot;kube-logging-template&quot;</span><br>    <span class="hljs-attr">setup.template.pattern:</span> <span class="hljs-string">&quot;kube-logging*&quot;</span><br>    <span class="hljs-attr">setup.ilm.enabled:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># fix输出到filebeat-&lt;version&gt; &#123;now/d&#125;-000001, BUG?</span><br><br>    <span class="hljs-attr">output.elasticsearch:</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-string">&#x27;$&#123;NODE_NAME&#125;&#x27;</span><br>      <span class="hljs-attr">hosts:</span> <span class="hljs-string">&#x27;$&#123;ELASTICSEARCH_HOSTS:elasticsearch-logging:9200&#125;&#x27;</span> <span class="hljs-comment"># es-svc:9200</span><br>      <span class="hljs-attr">index:</span> <span class="hljs-string">&quot;kube-logging&quot;</span> <span class="hljs-comment"># iLM管理的alias</span><br>      <span class="hljs-comment"># index: &quot;kube-logging-%&#123;+yyyy.MM.dd&#125;&quot;</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">&quot;elastic&quot;</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;123456&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><h4 id="Kibana-Helm-Values配置"><a href="#Kibana-Helm-Values配置" class="headerlink" title="Kibana Helm Values配置"></a>Kibana Helm Values配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">elasticsearchHosts:</span> <span class="hljs-string">&quot;http://elasticsearch-logging:9200&quot;</span><br><span class="hljs-attr">extraEnvs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;NODE_OPTIONS&quot;</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;--max-old-space-size=1800&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ELASTICSEARCH_USERNAME</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;elastic&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ELASTICSEARCH_PASSWORD</span><br>    <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;123456&quot;</span><br><span class="hljs-attr">healthCheckPath:</span> <span class="hljs-string">&quot;/app/kibana&quot;</span><br><span class="hljs-comment"># healthCheckPath: &quot;/api/status&quot; # readinessProbe搞死你</span><br><span class="hljs-attr">kibanaConfig:</span> <span class="hljs-comment"># exec进pod发现默认配置文件错误</span><br>  <span class="hljs-attr">kibana.yml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    elasticsearch:</span><br><span class="hljs-string">      i18n.locale: &quot;zh-CN&quot;</span><br><span class="hljs-string">      hosts: [ &quot;http://elasticsearch-logging:9200&quot; ]</span><br><span class="hljs-string">      username: &quot;elastic&quot;</span><br><span class="hljs-string">      password: &quot;123456&quot;</span><br><span class="hljs-string"></span><span class="hljs-attr">ingress:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">kubernetes.io/ingress.class:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-comment"># kubernetes.io/tls-acme: &quot;true&quot;</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>  <span class="hljs-attr">hosts:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">logging.boer.xyz</span><br>  <span class="hljs-attr">tls:</span> []<br><br></code></pre></td></tr></table></figure><h4 id="Kibana-Pod-readinessProbe"><a href="#Kibana-Pod-readinessProbe" class="headerlink" title="Kibana Pod readinessProbe"></a>Kibana Pod readinessProbe</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-function"><span class="hljs-title">http</span></span> () &#123;<br>    <span class="hljs-built_in">local</span> path=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;1&#125;</span>&quot;</span><br>    <span class="hljs-built_in">set</span> -- -XGET -s --fail<br><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ELASTICSEARCH_USERNAME&#125;</span>&quot;</span> ] &amp;&amp; [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ELASTICSEARCH_PASSWORD&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">set</span> -- <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span> -u <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ELASTICSEARCH_USERNAME&#125;</span>:<span class="hljs-variable">$&#123;ELASTICSEARCH_PASSWORD&#125;</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br><br>    STATUS=$(curl --output /dev/null --write-out <span class="hljs-string">&quot;%&#123;http_code&#125;&quot;</span> -k <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span> <span class="hljs-string">&quot;http://localhost:5601<span class="hljs-variable">$&#123;path&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;STATUS&#125;</span>&quot;</span> -eq 200 ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">exit</span> 0<br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Error: Got HTTP code <span class="hljs-variable">$&#123;STATUS&#125;</span> but expected a 200&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br>&#125;<br><span class="hljs-comment"># 解析后的命令</span><br>curl -XGET -s --fail --output /dev/null --write-out <span class="hljs-string">&quot;%&#123;http_code&#125;&quot;</span> -k -u elastic:123456 http://localhost:5601/app/kibana<br><span class="hljs-comment"># exec进pod curl一下</span><br><span class="hljs-comment"># ready否，请10min再下结论 ***</span><br></code></pre></td></tr></table></figure><h3 id="iLM管理索引生命周期"><a href="#iLM管理索引生命周期" class="headerlink" title="iLM管理索引生命周期"></a>iLM管理索引生命周期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET _cluster/health<br>GET _cat/indices<br><span class="hljs-comment"># iLM策略, 50gb/1d切割, 2d: forcemerge, 5d: freeze, 10d: 删除</span><br>PUT _ilm/policy/kube-logging-policy   <br>&#123;<br>  <span class="hljs-string">&quot;policy&quot;</span>: &#123;                       <br>    <span class="hljs-string">&quot;phases&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;hot&quot;</span>: &#123;                      <br>        <span class="hljs-string">&quot;actions&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;rollover&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;max_size&quot;</span>: <span class="hljs-string">&quot;50gb&quot;</span>,<br>            <span class="hljs-string">&quot;max_age&quot;</span>: <span class="hljs-string">&quot;1d&quot;</span><br>            <span class="hljs-comment"># &quot;max_docs&quot;: 6000</span><br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class="hljs-string">&quot;warm&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;min_age&quot;</span>: <span class="hljs-string">&quot;2d&quot;</span>,<br>        <span class="hljs-string">&quot;actions&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;forcemerge&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;max_num_segments&quot;</span>: 1<br>          &#125;<br>        &#125;<br>      &#125;,<br>      <span class="hljs-string">&quot;cold&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;min_age&quot;</span>: <span class="hljs-string">&quot;5d&quot;</span>,<br>        <span class="hljs-string">&quot;actions&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;freeze&quot;</span>: &#123;&#125;<br>        &#125;<br>      &#125;,<br>      <span class="hljs-string">&quot;delete&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;min_age&quot;</span>: <span class="hljs-string">&quot;10d&quot;</span>,           <br>        <span class="hljs-string">&quot;actions&quot;</span>: &#123;<br>          <span class="hljs-string">&quot;delete&quot;</span>: &#123;&#125;              <br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-comment"># 创建索引模板</span><br>PUT _template/kube-logging-template<br>&#123;<br>  <span class="hljs-string">&quot;index_patterns&quot;</span>: [<span class="hljs-string">&quot;kube-logging*&quot;</span>], <br>  <span class="hljs-string">&quot;settings&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;number_of_shards&quot;</span>: 3,<br>    <span class="hljs-string">&quot;number_of_replicas&quot;</span>: 1,<br>    <span class="hljs-string">&quot;index.lifecycle.name&quot;</span>: <span class="hljs-string">&quot;kube-logging-policy&quot;</span>, <br>    <span class="hljs-string">&quot;index.lifecycle.rollover_alias&quot;</span>: <span class="hljs-string">&quot;kube-logging&quot;</span>,<br>    <span class="hljs-string">&quot;index.refresh_interval&quot;</span>: <span class="hljs-string">&quot;30s&quot;</span>,<br>    <span class="hljs-string">&quot;index.translog.durability&quot;</span>: <span class="hljs-string">&quot;async&quot;</span>,<br>    <span class="hljs-string">&quot;index.translog.sync_interval&quot;</span>:<span class="hljs-string">&quot;30s&quot;</span><br>  &#125;<br>&#125;<br><span class="hljs-comment"># 创建第一个关联索引</span><br>PUT %3Ckube-logging-%7Bnow%2Fd%7D-000001%3E<br>&#123;<br>  <span class="hljs-string">&quot;aliases&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;kube-logging&quot;</span>: &#123;&#125;<br>  &#125;<br>&#125;<br><br>GET kube-logging-2020.07.09-000001/_search<br><br><span class="hljs-comment"># iLM生效时间</span><br>PUT _cluster/settings<br>&#123;<br>  <span class="hljs-string">&quot;persistent&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;indices.lifecycle.poll_interval&quot;</span>: <span class="hljs-string">&quot;30s&quot;</span><br>  &#125;<br>&#125;<br>GET _ilm/status<br>POST _ilm/start<br></code></pre></td></tr></table></figure><h3 id="ES进阶配置"><a href="#ES进阶配置" class="headerlink" title="ES进阶配置"></a>ES进阶配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 单机多节点部署避免主副分片被分配到同一物理机</span><br>cluster.routing.allocation.same_shard.host: <span class="hljs-literal">true</span><br>cluster.routing.allocation.awareness.attributes: box_type<br><br>index.routing.allocation.require.box_type: hot <span class="hljs-comment"># 冷热分离</span><br>index.routing.allocation.total_shards_per_node: 1<br></code></pre></td></tr></table></figure><h3 id="Filebeat配置"><a href="#Filebeat配置" class="headerlink" title="Filebeat配置"></a>Filebeat配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">filebeat.inputs:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">/home/apps/Logs/*.boer.xyz/*.log</span><br>  <span class="hljs-attr">fields:</span> &#123;<span class="hljs-attr">ip:</span> <span class="hljs-string">ipv4address</span>, <span class="hljs-attr">log_type:</span> <span class="hljs-string">apps</span>&#125;<br>  <span class="hljs-attr">fields_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">multiline.match:</span> <span class="hljs-string">after</span><br>  <span class="hljs-attr">multiline.negate:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">multiline.pattern:</span> <span class="hljs-string">^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;</span><br>  <span class="hljs-attr">tail_files:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">symlinks:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span> [<span class="hljs-string">/home/apps/Logs/nginx/*.log</span>]<br>  <span class="hljs-attr">fields:</span> &#123;<span class="hljs-attr">ip:</span> <span class="hljs-string">ipv4address</span>, <span class="hljs-attr">log_type:</span> <span class="hljs-string">elb</span>&#125;<br>  <span class="hljs-attr">fields_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tail_files:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">symlinks:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span> [<span class="hljs-string">/var/log/messages</span>, <span class="hljs-string">/var/log/secure</span>, <span class="hljs-string">/var/log/cron</span>, <span class="hljs-string">/var/log/spooler</span>, <span class="hljs-string">/var/log/audit/audit.log</span>]<br>  <span class="hljs-attr">fields:</span> &#123;<span class="hljs-attr">ip:</span> <span class="hljs-string">ipv4address</span>, <span class="hljs-attr">log_type:</span> <span class="hljs-string">syslog</span>&#125;<br>  <span class="hljs-attr">fields_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tail_files:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">symlinks:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span> [<span class="hljs-string">/home/apps/Logs/*.boer.xyz/monitor/*.log</span>]<br>  <span class="hljs-attr">fields:</span> &#123;<span class="hljs-attr">ip:</span> <span class="hljs-string">ipv4address</span>, <span class="hljs-attr">log_type:</span> <span class="hljs-string">monitor</span>&#125;<br>  <span class="hljs-attr">fields_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tail_files:</span> <span class="hljs-literal">true</span> <br>  <span class="hljs-attr">symlinks:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br>  <span class="hljs-attr">paths:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/home/apps/Logs/*.boer.xyz/audit/*.log&quot;</span><br>  <span class="hljs-attr">fields:</span> &#123;<span class="hljs-attr">ip:</span> <span class="hljs-string">ipv4address</span>, <span class="hljs-attr">log_type:</span> <span class="hljs-string">audit</span>&#125;<br>  <span class="hljs-attr">fields_under_root:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tail_files:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">symlinks:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-attr">processors:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">rename:</span><br>    <span class="hljs-attr">fields:</span><br>     <span class="hljs-bullet">-</span> <span class="hljs-attr">from:</span> <span class="hljs-string">&quot;log.file.path&quot;</span><br>       <span class="hljs-attr">to:</span> <span class="hljs-string">&quot;source&quot;</span><br>    <span class="hljs-attr">ignore_missing:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">fail_on_error:</span> <span class="hljs-literal">true</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">drop_fields:</span><br>    <span class="hljs-attr">fields:</span> [<span class="hljs-string">&quot;log&quot;</span>,<span class="hljs-string">&quot;ecs&quot;</span>,<span class="hljs-string">&quot;host&quot;</span>,<span class="hljs-string">&quot;agent&quot;</span>] <br><span class="hljs-bullet">-</span> <span class="hljs-attr">drop_fields:</span><br>    <span class="hljs-attr">when:</span><br>      <span class="hljs-attr">equals:</span><br>        <span class="hljs-attr">log_type:</span> <span class="hljs-string">monitor</span><br>    <span class="hljs-attr">fields:</span> [<span class="hljs-string">&quot;input_type&quot;</span>,<span class="hljs-string">&quot;source&quot;</span>]    <br><br><span class="hljs-attr">output.kafka:</span><br>  <span class="hljs-attr">hosts:</span> [<span class="hljs-string">&quot;node1.kafka.boer.lo:9092&quot;</span>, <span class="hljs-string">&quot;node2.kafka.boer.lo:9092&quot;</span>, <span class="hljs-string">&quot;node3.kafka.boer.lo:9092&quot;</span>, <span class="hljs-string">&quot;node4.kafka.boer.lo:9092&quot;</span>]<br>  <span class="hljs-attr">topic:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">%&#123;[log_type]&#125;</span>&quot;</span><br>  <span class="hljs-attr">partition.round_robin:</span><br>    <span class="hljs-attr">reachable_only:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">required_acks:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">compression:</span> <span class="hljs-string">lz4</span><br>  <span class="hljs-attr">max_message_bytes:</span> <span class="hljs-number">1000000</span><br></code></pre></td></tr></table></figure><h3 id="Logstash配置"><a href="#Logstash配置" class="headerlink" title="Logstash配置"></a>Logstash配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">elasticsearch:</span><br>  <span class="hljs-attr">host:</span> <span class="hljs-string">elasticsearch-logging</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">9200</span><br><br><span class="hljs-comment">## ref: https://github.com/elastic/logstash-docker/blob/master/build/logstash/env2yaml/env2yaml.go</span><br><span class="hljs-attr">config:</span><br>  <span class="hljs-attr">xpack.monitoring.enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">xpack.monitoring.elasticsearch.hosts:</span> [<span class="hljs-string">&quot;http://elasticsearch-logging:9200&quot;</span>]<br>  <span class="hljs-attr">xpack.monitoring.elasticsearch.username:</span> <span class="hljs-string">&quot;logstash_system&quot;</span><br>  <span class="hljs-attr">xpack.monitoring.elasticsearch.password:</span> <span class="hljs-string">&quot;t6XK9kDvistPyuSvVwK3&quot;</span><br>  <span class="hljs-attr">config.reload.automatic:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">config.reload.interval:</span> <span class="hljs-number">120</span><br>  <span class="hljs-attr">path.config:</span> <span class="hljs-string">/usr/share/logstash/pipeline</span><br>  <span class="hljs-attr">path.data:</span> <span class="hljs-string">/usr/share/logstash/data</span><br>  <span class="hljs-attr">pipeline.workers:</span> <span class="hljs-number">12</span><br>  <span class="hljs-attr">pipeline.batch.size:</span> <span class="hljs-number">16000</span><br>  <span class="hljs-attr">pipeline.batch.delay:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">queue.type:</span> <span class="hljs-string">memory</span><br>  <span class="hljs-attr">queue.max_bytes:</span> <span class="hljs-string">5gb</span><br><br><span class="hljs-attr">inputs:</span><br>  <span class="hljs-attr">main:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    input &#123;</span><br><span class="hljs-string">      kafka &#123;</span><br><span class="hljs-string">        bootstrap_servers =&gt; &quot;10.10.62.38:9092,10.10.62.39:9092,10.10.62.40:9092&quot;</span><br><span class="hljs-string">        topics =&gt; [&quot;app&quot;]</span><br><span class="hljs-string">        client_id =&gt; &quot;app-logs&quot;</span><br><span class="hljs-string">        group_id =&gt; [&quot;app-logs&quot;]</span><br><span class="hljs-string">        max_poll_records =&gt; &quot;8000&quot;</span><br><span class="hljs-string">        consumer_threads =&gt; 4</span><br><span class="hljs-string">        codec =&gt; &quot;json&quot;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-attr">filters:</span><br>  <span class="hljs-attr">main:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    filter &#123;</span><br><span class="hljs-string">      grok &#123;</span><br><span class="hljs-string">        break_on_match =&gt; false</span><br><span class="hljs-string">        pattern_definitions =&gt; &#123;</span><br><span class="hljs-string">            &quot;TXID_PRE&quot; =&gt; &quot;TxId\s*\:\s*&quot;</span><br><span class="hljs-string">            &quot;SDOT_SUF&quot; =&gt; &quot;\s+\,&quot;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        match =&gt; &#123;</span><br><span class="hljs-string">          &quot;source&quot; =&gt; &quot;/home/boer/Logs/%&#123;GREEDYDATA:app_name&#125;.(boer|boermall).(lo|com|xyz)/%&#123;GREEDYDATA:app_logfile&#125;.log&quot;</span><br><span class="hljs-string">          &quot;message&quot; =&gt; &quot;%&#123;TIMESTAMP_ISO8601:log_timestamp&#125;%&#123;SPACE&#125;%&#123;WORD:log_level&#125;%&#123;DATA&#125;%&#123;TXID_PRE&#125;%&#123;DATA:log_txid&#125;%&#123;SDOT_SUF&#125;%&#123;GREEDYDATA&#125;&quot;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">        remove_field =&gt; [ &quot;offset&quot;, &quot;input_type&quot;, &quot;input.type&quot;, &quot;type&quot;, &quot;tag&quot;, &quot;source&quot; ]</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-attr">outputs:</span><br>  <span class="hljs-attr">main:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    output &#123;</span><br><span class="hljs-string">      elasticsearch &#123;</span><br><span class="hljs-string">        hosts =&gt; [&quot;http://elasticsearch-logging:9200&quot;]</span><br><span class="hljs-string">        index =&gt; &quot;app-logs&quot;</span><br><span class="hljs-string">        user =&gt; &quot;elastic&quot;</span><br><span class="hljs-string">        password =&gt; &quot;rAQc9m19NdWcFIfLgNVQ&quot;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Kubernetes</tag>
      
      <tag>logging</tag>
      
      <tag>Filebeat</tag>
      
      <tag>Kibana</tag>
      
      <tag>Fluentd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes监控系统Prometheus</title>
    <link href="/2019/10/10/k8s-monitoring-prometheus/"/>
    <url>/2019/10/10/k8s-monitoring-prometheus/</url>
    
    <content type="html"><![CDATA[<p>Prometheus : Monitoring &amp; TSDB<br>Alertmanager : 告警中心<br>node-exporter : 宿主机Node基础监控<br>metrics-server (heapster) : 集群资源监控/HPA<br>kube-state-metrics : K8S资源监控<br>Grafana : 用户UI展示</p><span id="more"></span><h3 id="Prometheus-Operator"><a href="#Prometheus-Operator" class="headerlink" title="Prometheus Operator"></a>Prometheus Operator</h3><p>The Operator acts on the following custom resource definitions (CRDs):</p><ul><li><strong>Prometheus</strong>, which defines a desired Prometheus deployment. # 定义Prometheus集群</li><li><strong>Alertmanager</strong>, which defines a desired Alertmanager deployment. # 定义Alertmanager集群</li><li><strong>ThanosRuler</strong>, which defines a desired Thanos Ruler deployment.</li><li><strong>ServiceMonitor</strong>, which declaratively specifies how groups of Kubernetes services should be monitored. The Operator automatically generates Prometheus scrape configuration based on the current state of the objects in the API server. # 定义监控项</li><li><strong>PodMonitor</strong>, which declaratively specifies how group of pods should be monitored. The Operator automatically generates Prometheus scrape configuration based on the current state of the objects in the API server.</li><li><strong>Probe</strong>, which declaratively specifies how groups of ingresses or static targets should be monitored. The Operator automatically generates Prometheus scrape configuration based on the definition.</li><li><strong>PrometheusRule</strong>, which defines a desired set of Prometheus alerting and/or recording rules. The Operator generates a rule file, which can be used by Prometheus instances. # 定义告警策略</li></ul><p><a href="https://github.com/prometheus-operator/prometheus-operator#prometheus-operator-vs-kube-prometheus-vs-community-helm-chart">Prometheus Operator vs. kube-prometheus vs. community helm chart</a></p><h3 id="kube-prometheus"><a href="#kube-prometheus" class="headerlink" title="kube-prometheus"></a>kube-prometheus</h3><p>Components included in this package:</p><ul><li>The Prometheus Operator</li><li>Highly available Prometheus</li><li>Highly available Alertmanager</li><li>Prometheus node-exporter</li><li>Prometheus Adapter for Kubernetes Metrics APIs</li><li>kube-state-metrics</li><li>Grafana</li></ul><p>The kube-prometheus stack includes a resource metrics API server, <strong>so the metrics-server addon is not necessary.</strong></p><h3 id="kube-prometheus方式部署监控方案"><a href="#kube-prometheus方式部署监控方案" class="headerlink" title="kube-prometheus方式部署监控方案"></a>kube-prometheus方式部署监控方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/08-4.kube-prometheus%E6%8F%92%E4%BB%B6.md</span><br><span class="hljs-comment">## </span><br><span class="hljs-built_in">cd</span> ~/k8s<br>git <span class="hljs-built_in">clone</span> https://github.com/coreos/kube-prometheus.git<br><span class="hljs-built_in">cd</span> kube-prometheus<br>sed -i -e <span class="hljs-string">&#x27;s_quay.io_quay.mirrors.ustc.edu.cn_&#x27;</span> manifests/*.yaml manifests/setup/*.yaml <span class="hljs-comment"># quay.mirrors.ustc.edu.cn源</span><br><br>kubectl apply -f manifests/setup/ <span class="hljs-comment"># 先部署Prometheus Operator</span><br>kubectl apply -f manifests/ <span class="hljs-comment"># 再部署Prometheus, Alertmanager等各种CRD资源</span><br></code></pre></td></tr></table></figure><h3 id="暴露Ingress"><a href="#暴露Ingress" class="headerlink" title="暴露Ingress"></a>暴露Ingress</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">networking.k8s.io/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">monitoring-ingress</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">monitoring</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/load-balance:</span> <span class="hljs-string">&quot;ip_hash&quot;</span><br>    <span class="hljs-attr">nginx.ingress.kubernetes.io/upstream-hash-by:</span> <span class="hljs-string">&quot;$request_uri&quot;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">rules:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">monitoring.boer.xyz</span><br>    <span class="hljs-attr">http:</span><br>      <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>        <span class="hljs-attr">backend:</span><br>          <span class="hljs-attr">serviceName:</span> <span class="hljs-string">grafana</span><br>          <span class="hljs-attr">servicePort:</span> <span class="hljs-number">3000</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">prometheus.boer.xyz</span><br>    <span class="hljs-attr">http:</span><br>      <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>        <span class="hljs-comment"># pathType: Prefix</span><br>        <span class="hljs-attr">backend:</span><br>          <span class="hljs-attr">serviceName:</span> <span class="hljs-string">prometheus-k8s</span><br>          <span class="hljs-attr">servicePort:</span> <span class="hljs-number">9090</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">alertmanager.boer.xyz</span><br>    <span class="hljs-attr">http:</span><br>      <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/</span><br>        <span class="hljs-attr">backend:</span><br>          <span class="hljs-attr">serviceName:</span> <span class="hljs-string">alertmanager-main</span><br>          <span class="hljs-attr">servicePort:</span> <span class="hljs-number">9093</span><br></code></pre></td></tr></table></figure><h3 id="kube-prometheus自定义配置"><a href="#kube-prometheus自定义配置" class="headerlink" title="kube-prometheus自定义配置"></a>kube-prometheus自定义配置</h3><p><code>cd ~/k8s/kube-prometheus</code></p><h4 id="Grafana-数据持久化"><a href="#Grafana-数据持久化" class="headerlink" title="Grafana 数据持久化"></a>Grafana 数据持久化</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim manifests/grafana-deployment.yaml</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># - emptyDir: &#123;&#125;</span><br>      <span class="hljs-comment">#   name: grafana-storage</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">grafana-storage</span><br>        <span class="hljs-attr">persistentVolumeClaim:</span><br>          <span class="hljs-attr">claimName:</span> <span class="hljs-string">grafana-storage-k8s</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">grafana</span><br>    <span class="hljs-attr">grafana:</span> <span class="hljs-string">k8s</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">grafana-storage-k8s</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">monitoring</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">accessModes:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOnce</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">2Gi</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">openebs-hostpath</span><br></code></pre></td></tr></table></figure><h4 id="Prometheus自定义配置"><a href="#Prometheus自定义配置" class="headerlink" title="Prometheus自定义配置"></a>Prometheus自定义配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim manifests/prometheus-prometheus.yaml</span><br>  <span class="hljs-attr">retention:</span> <span class="hljs-string">72h</span> <span class="hljs-comment"># 数据保存时长</span><br>  <span class="hljs-attr">externalUrl:</span> <span class="hljs-string">http://prometheus.boer.xyz</span> <span class="hljs-comment"># 对应Ingress地址</span><br>  <span class="hljs-attr">additionalScrapeConfigs:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">additional-scrape-configs</span> <span class="hljs-comment"># 自动发现监控&lt;详见下文&gt;</span><br>    <span class="hljs-attr">key:</span> <span class="hljs-string">prometheus-additional.yaml</span><br>  <span class="hljs-attr">storage:</span> <span class="hljs-comment"># 数据持久化</span><br>    <span class="hljs-attr">volumeClaimTemplate:</span><br>      <span class="hljs-attr">spec:</span><br>        <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">openebs-hostpath</span><br>        <span class="hljs-attr">resources:</span><br>          <span class="hljs-attr">requests:</span><br>            <span class="hljs-attr">storage:</span> <span class="hljs-string">5Gi</span><br></code></pre></td></tr></table></figure><h4 id="Alertmanager自定义配置"><a href="#Alertmanager自定义配置" class="headerlink" title="Alertmanager自定义配置"></a>Alertmanager自定义配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim manifests/alertmanager-alertmanager.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">monitoring.coreos.com/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Alertmanager</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">alertmanager:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">monitoring</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">quay.mirrors.ustc.edu.cn/prometheus/alertmanager:v0.20.0</span><br>  <span class="hljs-attr">nodeSelector:</span><br>    <span class="hljs-attr">kubernetes.io/os:</span> <span class="hljs-string">linux</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">securityContext:</span><br>    <span class="hljs-attr">fsGroup:</span> <span class="hljs-number">2000</span><br>    <span class="hljs-attr">runAsNonRoot:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">runAsUser:</span> <span class="hljs-number">1000</span><br>  <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">alertmanager-main</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-string">v0.20.0</span><br>  <span class="hljs-attr">externalUrl:</span> <span class="hljs-string">http://alertmanager.boer.xyz</span> <span class="hljs-comment"># 对应Ingress地址</span><br></code></pre></td></tr></table></figure><h3 id="Alertmanager企业微信告警"><a href="#Alertmanager企业微信告警" class="headerlink" title="Alertmanager企业微信告警"></a>Alertmanager企业微信告警</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim alertmanager-main-secrets.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Secret</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">Opaque</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">alertmanager-main</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">monitoring</span><br><span class="hljs-attr">data:</span> &#123;&#125;<br><span class="hljs-attr">stringData:</span><br>  <span class="hljs-attr">alertmanager.yaml:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    &quot;global&quot;:</span><br><span class="hljs-string">      &quot;resolve_timeout&quot;: &quot;5m&quot;</span><br><span class="hljs-string">    &quot;inhibit_rules&quot;:</span><br><span class="hljs-string">    - &quot;equal&quot;:</span><br><span class="hljs-string">      - &quot;namespace&quot;</span><br><span class="hljs-string">      - &quot;alertname&quot;</span><br><span class="hljs-string">      &quot;source_match&quot;:</span><br><span class="hljs-string">        &quot;severity&quot;: &quot;critical&quot;</span><br><span class="hljs-string">      &quot;target_match_re&quot;:</span><br><span class="hljs-string">        &quot;severity&quot;: &quot;warning|info&quot;</span><br><span class="hljs-string">    - &quot;equal&quot;:</span><br><span class="hljs-string">      - &quot;namespace&quot;</span><br><span class="hljs-string">      - &quot;alertname&quot;</span><br><span class="hljs-string">      &quot;source_match&quot;:</span><br><span class="hljs-string">        &quot;severity&quot;: &quot;warning&quot;</span><br><span class="hljs-string">      &quot;target_match_re&quot;:</span><br><span class="hljs-string">        &quot;severity&quot;: &quot;info&quot;</span><br><span class="hljs-string">    &quot;receivers&quot;:</span><br><span class="hljs-string">    - &quot;name&quot;: &quot;Default&quot;</span><br><span class="hljs-string">      &quot;wechat_configs&quot;: # 企业微信接收告警信息 https://work.weixin.qq.com/api/doc/90000/90135/90236#%E6%96%87%E6%9C%AC%E6%B6%88%E6%81%AF</span><br><span class="hljs-string">      - &quot;corp_id&quot;: &quot;&lt;corp_id&gt;&quot;</span><br><span class="hljs-string">        &quot;to_user&quot;: &quot;&lt;user1|user2&gt;&quot;</span><br><span class="hljs-string">        &quot;agent_id&quot;: &quot;&lt;1000007&gt;&quot;</span><br><span class="hljs-string">        &quot;api_secret&quot;: &quot;&lt;api_secret&gt;&quot;</span><br><span class="hljs-string">    - &quot;name&quot;: &quot;Watchdog&quot;</span><br><span class="hljs-string">    - &quot;name&quot;: &quot;Critical&quot;</span><br><span class="hljs-string">    &quot;route&quot;:</span><br><span class="hljs-string">      &quot;group_by&quot;:</span><br><span class="hljs-string">      - &quot;alertname&quot; # 按alertname分组告警</span><br><span class="hljs-string">      &quot;group_interval&quot;: &quot;5m&quot;</span><br><span class="hljs-string">      &quot;group_wait&quot;: &quot;30s&quot;</span><br><span class="hljs-string">      &quot;receiver&quot;: &quot;Default&quot;</span><br><span class="hljs-string">      &quot;repeat_interval&quot;: &quot;12h&quot; # 重复告警间隔时间</span><br><span class="hljs-string">      &quot;routes&quot;:</span><br><span class="hljs-string">      - &quot;match&quot;:</span><br><span class="hljs-string">          &quot;alertname&quot;: &quot;Watchdog&quot;</span><br><span class="hljs-string">        &quot;receiver&quot;: &quot;Default&quot;</span><br><span class="hljs-string">      - &quot;match&quot;:</span><br><span class="hljs-string">          &quot;severity&quot;: &quot;critical&quot;</span><br><span class="hljs-string">        &quot;receiver&quot;: &quot;Default&quot;</span><br><span class="hljs-string"></span><span class="hljs-comment"># 强制应用配置</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">delete</span> <span class="hljs-string">-f</span> <span class="hljs-string">alertmanager-main-secrets.yaml</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">alertmanager-main-secrets.yaml</span><br></code></pre></td></tr></table></figure><h3 id="自动发现监控配置"><a href="#自动发现监控配置" class="headerlink" title="自动发现监控配置"></a>自动发现监控配置</h3><blockquote><p><a href="https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/additional-scrape-config.md">https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/additional-scrape-config.md</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim prometheus-additional.yaml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">&#x27;kubernetes-endpoints&#x27;</span><br>  <span class="hljs-attr">kubernetes_sd_configs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">role:</span> <span class="hljs-string">endpoints</span><br>  <span class="hljs-attr">relabel_configs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_service_annotation_prometheus_io_scrape</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">keep</span><br>    <span class="hljs-attr">regex:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_service_annotation_prometheus_io_scheme</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">__scheme__</span><br>    <span class="hljs-attr">regex:</span> <span class="hljs-string">(https?)</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_service_annotation_prometheus_io_path</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">__metrics_path__</span><br>    <span class="hljs-attr">regex:</span> <span class="hljs-string">(.+)</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__address__</span>, <span class="hljs-string">__meta_kubernetes_service_annotation_prometheus_io_port</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">__address__</span><br>    <span class="hljs-attr">regex:</span> <span class="hljs-string">([^:]+)(?::\d+)?;(\d+)</span><br>    <span class="hljs-attr">replacement:</span> <span class="hljs-string">$1:$2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">action:</span> <span class="hljs-string">labelmap</span><br>    <span class="hljs-attr">regex:</span> <span class="hljs-string">__meta_kubernetes_service_label_(.+)</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_namespace</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">kubernetes_namespace</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_service_name</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">kubernetes_name</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">source_labels:</span> [<span class="hljs-string">__meta_kubernetes_pod_name</span>]<br>    <span class="hljs-attr">action:</span> <span class="hljs-string">replace</span><br>    <span class="hljs-attr">target_label:</span> <span class="hljs-string">kubernetes_pod_name</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># vim additional-scrape-configs.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Secret</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">additional-scrape-configs</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">monitoring</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">prometheus-additional.yaml:</span> <span class="hljs-string">LSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtZW5kcG9pbnRzJwogIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAtIHJvbGU6IGVuZHBvaW50cwogIHJlbGFiZWxfY29uZmlnczoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19zY3JhcGVdCiAgICBhY3Rpb246IGtlZXAKICAgIHJlZ2V4OiB0cnVlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9uX3Byb21ldGhldXNfaW9fc2NoZW1lXQogICAgYWN0aW9uOiByZXBsYWNlCiAgICB0YXJnZXRfbGFiZWw6IF9fc2NoZW1lX18KICAgIHJlZ2V4OiAoaHR0cHM/KQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3BhdGhdCiAgICBhY3Rpb246IHJlcGxhY2UKICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVnZXg6ICguKykKICAtIHNvdXJjZV9sYWJlbHM6IFtfX2FkZHJlc3NfXywgX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9uX3Byb21ldGhldXNfaW9fcG9ydF0KICAgIGFjdGlvbjogcmVwbGFjZQogICAgdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVnZXg6IChbXjpdKykoPzo6XGQrKT87KFxkKykKICAgIHJlcGxhY2VtZW50OiAkMTokMgogIC0gYWN0aW9uOiBsYWJlbG1hcAogICAgcmVnZXg6IF9fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfKC4rKQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIGFjdGlvbjogcmVwbGFjZQogICAgdGFyZ2V0X2xhYmVsOiBrdWJlcm5ldGVzX25hbWVzcGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbmFtZV0KICAgIGFjdGlvbjogcmVwbGFjZQogICAgdGFyZ2V0X2xhYmVsOiBrdWJlcm5ldGVzX25hbWUKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIGFjdGlvbjogcmVwbGFjZQogICAgdGFyZ2V0X2xhYmVsOiBrdWJlcm5ldGVzX3BvZF9uYW1lCg==</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># 注意manifests/prometheus-prometheus.yaml additionalScrapeConfigs配置项</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># 需要自动发现监控的应用配置示例: (springboot)</span><br><span class="hljs-attr">prometheus.io/path:</span> <span class="hljs-string">/actuator/prometheus</span><br><span class="hljs-attr">prometheus.io/port:</span> <span class="hljs-string">&#x27;10080&#x27;</span><br><span class="hljs-attr">prometheus.io/scrape:</span> <span class="hljs-string">&#x27;true&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200821152346.png?x-oss-process=style/blog-img-watermark"></p><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/altermanager_groupby.jpg?x-oss-process=style/blog-img-watermark"></p><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200821112157.png?x-oss-process=style/blog-img-watermark"></p><h3 id="Grafana插件"><a href="#Grafana插件" class="headerlink" title="Grafana插件"></a>Grafana插件</h3><blockquote><p><a href="https://grafana.com/grafana/plugins/devopsprodigy-kubegraf-app">https://grafana.com/grafana/plugins/devopsprodigy-kubegraf-app</a></p></blockquote><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20200821154757.png?x-oss-process=style/blog-img-watermark"></p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ol><li><a href="https://github.com/prometheus-operator/prometheus-operator">https://github.com/prometheus-operator/prometheus-operator</a></li><li><a href="https://github.com/prometheus-operator/kube-prometheus">https://github.com/prometheus-operator/kube-prometheus</a></li><li><a href="https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/08-4.kube-prometheus%E6%8F%92%E4%BB%B6.md">https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/08-4.kube-prometheus%E6%8F%92%E4%BB%B6.md</a></li><li><a href="https://www.qikqiak.com/k8strain/monitor/operator/install/">https://www.qikqiak.com/k8strain/monitor/operator/install/</a></li><li><a href="https://work.weixin.qq.com/api/doc/90000/90135/90236#%E6%96%87%E6%9C%AC%E6%B6%88%E6%81%AF">https://work.weixin.qq.com/api/doc/90000/90135/90236#%E6%96%87%E6%9C%AC%E6%B6%88%E6%81%AF</a></li><li><a href="https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/additional-scrape-config.md">https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/additional-scrape-config.md</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Prometheus</tag>
      
      <tag>Monitoring</tag>
      
      <tag>Operator</tag>
      
      <tag>CRD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubeadm部署HA高可用Kubernetes集群</title>
    <link href="/2019/09/24/k8s-ha-deployment/"/>
    <url>/2019/09/24/k8s-ha-deployment/</url>
    
    <content type="html"><![CDATA[<p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a></p><p>system requirement<br>2C2G</p><span id="more"></span><h3 id="安装Aliyun-YUM-Repo"><a href="#安装Aliyun-YUM-Repo" class="headerlink" title="安装Aliyun YUM Repo"></a>安装Aliyun YUM Repo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## https://developer.aliyun.com/mirror/</span><br><br><span class="hljs-comment">### base</span><br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br>curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo<br><br><span class="hljs-comment">### epel</span><br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup<br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup<br>wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo<br><br><br><span class="hljs-comment"># 安装必需软件</span><br><span class="hljs-comment">### https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/01.%E5%88%9D%E5%A7%8B%E5%8C%96%E7%B3%BB%E7%BB%9F%E5%92%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F.md</span><br>yum install -y chrony conntrack ipvsadm ipset jq iptables curl sysstat libseccomp wget socat git<br></code></pre></td></tr></table></figure><h3 id="优化内核参数"><a href="#优化内核参数" class="headerlink" title="优化内核参数"></a>优化内核参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span><br><span class="hljs-string">net.bridge.bridge-nf-call-iptables=1</span><br><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="hljs-string">net.ipv4.ip_forward=1</span><br><span class="hljs-string">net.ipv4.tcp_tw_recycle=0</span><br><span class="hljs-string">net.ipv4.tcp_tw_reuse=1</span><br><span class="hljs-string">net.ipv4.tcp_timestamps=1</span><br><span class="hljs-string">net.ipv4.neigh.default.gc_thresh1=1024</span><br><span class="hljs-string">net.ipv4.neigh.default.gc_thresh2=2048</span><br><span class="hljs-string">net.ipv4.neigh.default.gc_thresh3=4096</span><br><span class="hljs-string">vm.swappiness=0</span><br><span class="hljs-string">vm.overcommit_memory=1</span><br><span class="hljs-string">vm.panic_on_oom=0</span><br><span class="hljs-string">vm.max_map_count = 262144</span><br><span class="hljs-string">fs.inotify.max_user_instances=8192</span><br><span class="hljs-string">fs.inotify.max_user_watches=1048576</span><br><span class="hljs-string">fs.file-max=52706963</span><br><span class="hljs-string">fs.nr_open=52706963</span><br><span class="hljs-string">net.ipv6.conf.all.disable_ipv6=1</span><br><span class="hljs-string">net.netfilter.nf_conntrack_max=2310720</span><br><span class="hljs-string">EOF</span><br>sysctl --system<br></code></pre></td></tr></table></figure><h3 id="IPVS加载内核模块"><a href="#IPVS加载内核模块" class="headerlink" title="IPVS加载内核模块"></a>IPVS加载内核模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/README.md</span><br><br>vim /etc/sysconfig/modules/ipvs.modules<br><span class="hljs-comment">#!/bin/bash</span><br>modprobe -- ip_vs<br>modprobe -- ip_vs_rr<br>modprobe -- ip_vs_wrr<br>modprobe -- ip_vs_sh<br>modprobe -- nf_conntrack_ipv4<br></code></pre></td></tr></table></figure><blockquote><p>modprobe br_netfilter</p></blockquote><h3 id="SELinux"><a href="#SELinux" class="headerlink" title="SELinux"></a>SELinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">setenforce 0<br>sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config<br></code></pre></td></tr></table></figure><h3 id="关闭-swap-分区"><a href="#关闭-swap-分区" class="headerlink" title="关闭 swap 分区"></a>关闭 swap 分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">swapoff -a<br>sed -i <span class="hljs-string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab<br></code></pre></td></tr></table></figure><h3 id="设置iptables默认转发策略"><a href="#设置iptables默认转发策略" class="headerlink" title="设置iptables默认转发策略"></a>设置iptables默认转发策略</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop firewalld<br>systemctl <span class="hljs-built_in">disable</span> firewalld<br>iptables -F &amp;&amp; iptables -X &amp;&amp; iptables -F -t nat &amp;&amp; iptables -X -t nat<br>iptables -P FORWARD ACCEPT<br></code></pre></td></tr></table></figure><h3 id="关闭无用服务"><a href="#关闭无用服务" class="headerlink" title="关闭无用服务"></a>关闭无用服务</h3><p><code>systemctl stop postfix &amp;&amp; systemctl disable postfix</code></p><h3 id="安装Aliyun-YUM-Repo-1"><a href="#安装Aliyun-YUM-Repo-1" class="headerlink" title="安装Aliyun YUM Repo"></a>安装Aliyun YUM Repo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## https://developer.aliyun.com/mirror/</span><br><span class="hljs-comment">### k8s</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="hljs-string">[kubernetes]</span><br><span class="hljs-string">name=Kubernetes</span><br><span class="hljs-string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">gpgcheck=1</span><br><span class="hljs-string">repo_gpgcheck=1</span><br><span class="hljs-string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><h3 id="安装kube-amp-docker"><a href="#安装kube-amp-docker" class="headerlink" title="安装kube* &amp; docker"></a>安装kube* &amp; docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y kubelet kubeadm kubectl <span class="hljs-comment"># 注意版本需要和镜像版本对应</span><br>systemctl <span class="hljs-built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet<br><br>yum install -y yum-utils device-mapper-persistent-data lvm2<br>yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br><br><span class="hljs-comment"># https://docs.docker.com/engine/install/centos/</span><br><br>yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>                  docker-latest-logrotate \<br>                  docker-logrotate \<br>                  docker-engine<br><br>yum update -y &amp;&amp; yum install -y \<br>  containerd.io-1.2.13 \<br>  docker-ce-19.03.8 \<br>  docker-ce-cli-19.03.8<br><span class="hljs-built_in">mkdir</span> /etc/docker<br><span class="hljs-comment"># 镜像加速  https://cr.console.aliyun.com/cn-beijing/instances/mirrors</span><br><span class="hljs-built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  &quot;registry-mirrors&quot;: [&quot;https://890une7x.mirror.aliyuncs.com&quot;],</span><br><span class="hljs-string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="hljs-string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="hljs-string">  &quot;log-opts&quot;: &#123;</span><br><span class="hljs-string">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="hljs-string">  &#125;,</span><br><span class="hljs-string">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="hljs-string">  &quot;storage-opts&quot;: [</span><br><span class="hljs-string">    &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="hljs-string">  ]</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">mkdir</span> -p /etc/systemd/system/docker.service.d<br>systemctl start docker.service<br>systemctl <span class="hljs-built_in">enable</span> docker.service<br>systemctl status docker.service<br></code></pre></td></tr></table></figure><h3 id="kubectl-autocompletion"><a href="#kubectl-autocompletion" class="headerlink" title="kubectl autocompletion"></a>kubectl autocompletion</h3><p><code>https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion</code></p><h3 id="kubeadm-config"><a href="#kubeadm-config" class="headerlink" title="kubeadm config"></a>kubeadm config</h3><p><code>vim kubeadm-config.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># kubeadm init --config kubeadm-config.yaml --upload-certs</span><br><span class="hljs-comment"># kubeadm config print init-defaults</span><br><span class="hljs-comment"># https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeadm.k8s.io/v1beta2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterConfiguration</span><br><span class="hljs-comment"># https://storage.googleapis.com/kubernetes-release/release/stable.txt</span><br><span class="hljs-comment"># kubernetesVersion: stable</span><br><span class="hljs-attr">kubernetesVersion:</span> <span class="hljs-string">v1.18.3</span><br><span class="hljs-attr">controlPlaneEndpoint:</span> <span class="hljs-string">&lt;your-lb-ip&gt;:&lt;port&gt;</span><br><span class="hljs-attr">certificatesDir:</span> <span class="hljs-string">/etc/kubernetes/pki</span><br><span class="hljs-attr">clusterName:</span> <span class="hljs-string">kubernetes</span><br><span class="hljs-attr">apiServer:</span><br>  <span class="hljs-attr">timeoutForControlPlane:</span> <span class="hljs-string">4m0s</span><br><span class="hljs-attr">controllerManager:</span> &#123;&#125;<br><span class="hljs-attr">scheduler:</span> &#123;&#125;<br><span class="hljs-attr">imageRepository:</span> <span class="hljs-string">registry.aliyuncs.com/google_containers</span><br><span class="hljs-attr">networking:</span><br>  <span class="hljs-attr">dnsDomain:</span> <span class="hljs-string">cluster.local</span><br>  <span class="hljs-attr">podSubnet:</span> <span class="hljs-number">172.30</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/16</span><br>  <span class="hljs-attr">serviceSubnet:</span> <span class="hljs-number">10.96</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/12</span><br><span class="hljs-attr">dns:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">CoreDNS</span><br><span class="hljs-attr">etcd:</span><br>  <span class="hljs-attr">local:</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">/var/lib/etcd</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeproxy.config.k8s.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">KubeProxyConfiguration</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">ipvs</span><br><br><span class="hljs-comment">## 自定义CA</span><br><span class="hljs-comment"># https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/</span><br><span class="hljs-comment"># This means you can, for example, copy an existing CA into /etc/kubernetes/pki/ca.crt and /etc/kubernetes/pki/ca.key, and kubeadm will use this CA for signing the rest of the certificates</span><br></code></pre></td></tr></table></figure><h3 id="kubeadm-deploy"><a href="#kubeadm-deploy" class="headerlink" title="kubeadm deploy"></a>kubeadm deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubeadm init --config kubeadm-config.yaml --upload-certs<br>kubeadm config images pull --config kubeadm-config.yaml <span class="hljs-comment"># 先拉取镜像</span><br>curl -LO https://docs.projectcalico.org/v3.14/manifests/calico.yaml<br><span class="hljs-comment"># 更改CALICO_IPV4POOL_CIDR 为podSubnet: 172.30.0.0/16</span><br><span class="hljs-comment"># - name: CALICO_IPV4POOL_CIDR</span><br><span class="hljs-comment">#   value: &quot;172.30.0.0/16&quot;</span><br><span class="hljs-comment"># 更改为BGP模式 https://docs.projectcalico.org/reference/node/configuration</span><br><span class="hljs-comment"># Enable IPIP</span><br><span class="hljs-comment"># - name: CALICO_IPV4POOL_IPIP</span><br><span class="hljs-comment">#   value: &quot;Never&quot;</span><br>kubectl apply -f calico.yaml<br><br><span class="hljs-comment"># core-dns pod不再pending</span><br><br>kubeadm reset<br>kubectl delete node &lt;node-name&gt;<br></code></pre></td></tr></table></figure><h3 id="ipvs重建"><a href="#ipvs重建" class="headerlink" title="ipvs重建"></a>ipvs重建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 如果安装时为iptables模式</span><br>kubectl -n kube-system edit cm kube-proxy<br><span class="hljs-comment"># mode: &quot;ipvs&quot;</span><br>kubectl get pod -n kube-system | grep kube-proxy | awk <span class="hljs-string">&#x27;&#123;system(&quot;kubectl delete pod &quot;$1&quot; -n kube-system&quot;)&#125;&#x27;</span> <span class="hljs-comment"># 重建kube-proxy的pod</span><br></code></pre></td></tr></table></figure><h3 id="Calico-BGP模式重建"><a href="#Calico-BGP模式重建" class="headerlink" title="Calico BGP模式重建"></a>Calico BGP模式重建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://docs.projectcalico.org/archive/v3.14/getting-started/kubernetes/installation/config-options</span><br>curl -LO https://docs.projectcalico.org/v3.14/manifests/calico.yaml<br><span class="hljs-comment"># 更改CALICO_IPV4POOL_CIDR 为podSubnet: 172.30.0.0/16</span><br><span class="hljs-comment"># - name: CALICO_IPV4POOL_CIDR</span><br><span class="hljs-comment">#   value: &quot;172.30.0.0/16&quot;</span><br><span class="hljs-comment"># 更改为BGP模式 https://docs.projectcalico.org/reference/node/configuration</span><br><span class="hljs-comment"># Enable IPIP</span><br><span class="hljs-comment"># - name: CALICO_IPV4POOL_IPIP</span><br><span class="hljs-comment">#   value: &quot;Never&quot;</span><br>kubectl apply -f calico.yaml<br></code></pre></td></tr></table></figure><h3 id="Operations"><a href="#Operations" class="headerlink" title="Operations"></a>Operations</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 切换默认namespace</span><br>kubectl config set-context $(kubectl config current-context) --namespace=&lt;insert-namespace-name-here&gt;<br><span class="hljs-comment"># Validate it</span><br>kubectl config view | grep namespace<br><br><span class="hljs-comment"># create registry secret</span><br>kubectl create secret docker-registry boer-harbor --docker-server=harbor.boer.xyz --docker-username=admin --docker-password=Admin@123 --docker-email=boer0924@gmail.com --namespace=boer-public<br><br><span class="hljs-comment"># join node</span><br>kubeadm token list<br>kubeadm token create --print-join-command<br><br>kubectl drain <span class="hljs-variable">$NODENAME</span><br>kubectl uncordon <span class="hljs-variable">$NODENAME</span><br><br><span class="hljs-comment"># https://docs.docker.com/engine/reference/commandline/ps/#filtering</span><br>docker <span class="hljs-built_in">rm</span> $(docker ps -a -f status=exited -q)<br>docker ps --format <span class="hljs-string">&quot;&#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Command&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;&quot;</span><br>docker ps --filter <span class="hljs-string">&quot;status=exited&quot;</span><br></code></pre></td></tr></table></figure><h4 id="etcdctl"><a href="#etcdctl" class="headerlink" title="etcdctl"></a>etcdctl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://jimmysong.io/kubernetes-handbook/guide/using-etcdctl-to-access-kubernetes-data.html</span><br>curl -LO etcd-v3.4.3-linux-amd64.tar.gz<br><span class="hljs-built_in">alias</span> etcdctl=<span class="hljs-string">&#x27;etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/peer.crt --key=/etc/kubernetes/pki/etcd/peer.key&#x27;</span><br>etcdctl get /registry/namespaces/kube-system -w=json | jq .<br>etcdctl member list<br>etcdctl <span class="hljs-built_in">help</span><br><span class="hljs-comment"># 备份</span><br>etcdctl snapshot save<br>etcdctl snapshot status<br>etcdctl snapshot restore<br></code></pre></td></tr></table></figure><h4 id="Calicoctl"><a href="#Calicoctl" class="headerlink" title="Calicoctl"></a>Calicoctl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://docs.projectcalico.org/archive/v3.14/getting-started/clis/calicoctl/</span><br>curl -O -L  https://github.com/projectcalico/calicoctl/releases/download/v3.14.1/calicoctl<br><span class="hljs-built_in">mv</span> calicoctl /usr/local/bin/<br><span class="hljs-built_in">chmod</span> a+x /usr/local/bin/calicoctl<br><br>vim /etc/calico/calicoctl.cfg<br>apiVersion: projectcalico.org/v3<br>kind: CalicoAPIConfig<br>metadata:<br>spec:<br>  datastoreType: <span class="hljs-string">&quot;kubernetes&quot;</span><br>  kubeconfig: <span class="hljs-string">&quot;/root/.kube/config&quot;</span><br><br>calicoctl get nodes<br>calicoctl node status <span class="hljs-comment"># 查看calico运行模式</span><br>calicoctl get ipPool -o yaml<br></code></pre></td></tr></table></figure><h4 id="Helm-v2安装"><a href="#Helm-v2安装" class="headerlink" title="Helm v2安装"></a>Helm v2安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://qhh.me/2019/08/08/Helm-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</span><br>curl -LO https://get.helm.sh/helm-v2.16.6-linux-amd64.tar.gz<br><br>vim rbac-config.yaml<br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: tiller<br>  namespace: kube-system<br>---<br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: tiller<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: cluster-admin<br>subjects:<br>  - kind: ServiceAccount<br>    name: tiller<br>    namespace: kube-system<br><br>helm init --service-account tiller -i registry.aliyuncs.com/google_containers/tiller:v2.16.6<br><br>helm repo list<br>helm repo add stable https://mirror.azure.cn/kubernetes/charts<br>helm repo add incubator https://mirror.azure.cn/kubernetes/charts-incubator<br><br>helm repo update<br>helm fetch stable/mysql <span class="hljs-comment"># 当前目录现在xxx.tgz</span><br>helm install stable/mysql<br></code></pre></td></tr></table></figure><h3 id="MetalLB"><a href="#MetalLB" class="headerlink" title="MetalLB"></a>MetalLB</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 不让私有云用户成为K8S世界的二等公民</span><br><span class="hljs-comment"># https://metallb.universe.tf/installation/</span><br><br><span class="hljs-comment"># 用法demo</span><br>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: theapp-service<br>  annotations:<br>    metallb.universe.tf/address-pool: default<br>  labels:<br>    app: theapp<br>spec:<br>  <span class="hljs-built_in">type</span>: LoadBalancer<br>  <span class="hljs-comment"># type: NodePort</span><br>  <span class="hljs-comment"># type: ClusterIP</span><br>  ports:<br>  - port: 5000<br>    targetPort: 5000<br>    <span class="hljs-comment"># nodePort: 31090</span><br>  selector:<br>    app: theapp<br><br>kubectl get svc <span class="hljs-comment"># curl -v EXTERNAL-IP</span><br></code></pre></td></tr></table></figure><p>MetalLB (头等舱)<br><img src="/img/figure/metallb.jpg" alt="metallb"></p><center>vs</center><p>NodePort (经济舱)<br><img src="/img/figure/nodeport.jpg" alt="nodeport"></p><h3 id="Ingress-Nginx-L7"><a href="#Ingress-Nginx-L7" class="headerlink" title="Ingress-Nginx L7"></a>Ingress-Nginx L7</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal</span><br><span class="hljs-comment"># 更改controller-service的type: LoadBalancer(默认NodePort)</span><br><span class="hljs-comment"># 添加MetalLB annotations</span><br>metadata:<br>  annotations:<br>    metallb.universe.tf/address-pool: default<br>spec:<br>  <span class="hljs-built_in">type</span>: LoadBalancer<br><br><span class="hljs-comment"># 用法demo</span><br>apiVersion: networking.k8s.io/v1beta1<br>kind: Ingress<br>metadata:<br>  name: theapp-ingress<br>  annotations:<br>    nginx.ingress.kubernetes.io/rewrite-target: /<br>    nginx.ingress.kubernetes.io/load-balance: <span class="hljs-string">&quot;ip_hash&quot;</span><br>    nginx.ingress.kubernetes.io/upstream-hash-by: <span class="hljs-string">&quot;<span class="hljs-variable">$request_uri</span>&quot;</span><br>spec:<br>  rules:<br>  - host: theapp.boer.xyz<br>    http:<br>      paths:<br>      - path: /<br>        backend:<br>          serviceName: theapp-service<br>          servicePort: 5000<br></code></pre></td></tr></table></figure><h3 id="Rancher卸载"><a href="#Rancher卸载" class="headerlink" title="Rancher卸载"></a>Rancher卸载</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># https://blog.csdn.net/gui951753/article/details/106160427</span><br>kubectl<span class="hljs-built_in"> proxy </span>&amp;<br><span class="hljs-attribute">NAMESPACE</span>=local<br>kubectl <span class="hljs-built_in">get</span> namespace <span class="hljs-variable">$NAMESPACE</span> -o json |jq <span class="hljs-string">&#x27;.spec = &#123;&quot;finalizers&quot;:[]&#125;&#x27;</span> &gt;temp.json<br>curl -k -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -X PUT --data-binary @temp.json 127.0.0.1:8001/api/v1/namespaces/<span class="hljs-variable">$NAMESPACE</span>/finalize<br><br><span class="hljs-comment"># https://github.com/rancher/rancher/issues/14715#issuecomment-430194650</span><br>kubectl <span class="hljs-built_in">get</span> customresourcedefinitions | grep cattle.io | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete customresourcedefinitions<br></code></pre></td></tr></table></figure><h3 id="模型概览"><a href="#模型概览" class="headerlink" title="模型概览"></a>模型概览</h3><p><img src="/img/figure/k8s_network_outbound.jpg" alt="k8s-boer"></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://github.com/opsnull/follow-me-install-kubernetes-cluster">https://github.com/opsnull/follow-me-install-kubernetes-cluster</a></li><li><a href="https://www.qikqiak.com/k8strain">https://www.qikqiak.com/k8strain</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
      <tag>Calico</tag>
      
      <tag>IPVS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes镜像仓库Harbor</title>
    <link href="/2019/09/09/k8s-registry-harbor/"/>
    <url>/2019/09/09/k8s-registry-harbor/</url>
    
    <content type="html"><![CDATA[<p>在Kubernetes之上部署Harbor</p><p>Harbor is an open source registry that secures artifacts with policies and role-based access control, ensures images are scanned and free from vulnerabilities, and signs images as trusted. Harbor, a CNCF Graduated project, delivers compliance, performance, and interoperability to help you consistently and securely manage artifacts across cloud native compute platforms like Kubernetes and Docker.</p><blockquote><p>在企业级Registry的行列，竟然没有Harbor的竞品…</p></blockquote><span id="more"></span><h3 id="Helm-Charts"><a href="#Helm-Charts" class="headerlink" title="Helm Charts"></a>Helm Charts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/k8s/charts<br>helm repo add harbor https://helm.goharbor.io<br>helm list<br>helm install --name harbor -f values.yaml . --namespace harbor<br>helm upgrade -f values.yaml harbor . --namespace harbor<br>helm delete --purge harbor<br>kubectl -n harbor delete pvc $(kubectl -n harbor get pvc | grep harbor | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>helm status harbor<br>helm fetch harbor/harbor --version 1.3.2<br>tar -zxf harbor-1.3.2.tgz<br></code></pre></td></tr></table></figure><h3 id="Harbor-Helm-Values配置"><a href="#Harbor-Helm-Values配置" class="headerlink" title="Harbor Helm Values配置"></a>Harbor Helm Values配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># vim harbor/values.yaml</span><br><span class="hljs-attr">expose:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">ingress</span><br>  <span class="hljs-attr">tls:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">ingress:</span><br>    <span class="hljs-attr">hosts:</span><br>      <span class="hljs-attr">core:</span> <span class="hljs-string">registry.boer.xyz</span><br>      <span class="hljs-attr">notary:</span> <span class="hljs-string">notary.boer.xyz</span><br>    <span class="hljs-attr">controller:</span> <span class="hljs-string">default</span><br>    <span class="hljs-attr">annotations:</span><br>      <span class="hljs-attr">kubernetes.io/ingress.class:</span> <span class="hljs-string">&quot;nginx&quot;</span><br>      <span class="hljs-attr">ingress.kubernetes.io/ssl-redirect:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-attr">ingress.kubernetes.io/proxy-body-size:</span> <span class="hljs-string">&quot;0&quot;</span><br>      <span class="hljs-attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-attr">nginx.ingress.kubernetes.io/proxy-body-size:</span> <span class="hljs-string">&quot;0&quot;</span><br><span class="hljs-attr">externalURL:</span> <span class="hljs-string">https://registry.boer.xyz</span><br><span class="hljs-attr">persistence:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">resourcePolicy:</span> <span class="hljs-string">&quot;keep&quot;</span><br>  <span class="hljs-attr">persistentVolumeClaim:</span><br>    <span class="hljs-attr">registry:</span><br>      <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br>    <span class="hljs-attr">chartmuseum:</span><br>      <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br>    <span class="hljs-attr">jobservice:</span><br>      <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br>    <span class="hljs-attr">database:</span><br>      <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;openebs-hostpath&quot;</span><br><span class="hljs-attr">harborAdminPassword:</span> <span class="hljs-string">&quot;&lt;your-secret-password&gt;&quot;</span> <span class="hljs-comment"># 注意替换</span><br></code></pre></td></tr></table></figure><h3 id="Registry证书分发"><a href="#Registry证书分发" class="headerlink" title="Registry证书分发"></a>Registry证书分发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl -n harbor get secret harbor-harbor-ingress -o yaml<br><span class="hljs-comment"># 其中 data 区域中 ca.crt 对应的值就是我们需要证书，不过需要注意还需要做一个base64的解码</span><br><span class="hljs-comment"># 保存data区域ca.crt的base64 -d内容到harbor.crt</span><br><br><span class="hljs-comment">## docker私有registry -  证书分发</span><br><span class="hljs-built_in">mkdir</span> -p /etc/docker/certs.d/registry.boer.xyz<br><span class="hljs-built_in">cp</span> harbor.crt /etc/docker/certs.d/registry.boer.xyz <span class="hljs-comment"># 所有master\node均需配置</span><br><br><span class="hljs-comment">## 本地浏览器 - 证书分发</span><br><span class="hljs-comment"># 下载harbor.crt到本地电脑，双击-导入浏览器，添加到信任的根证书目录</span><br><span class="hljs-comment"># Chrome会提示: 连接时安全的。</span><br><span class="hljs-comment"># ~灼眼的小红锁变成了可爱的小绿锁~</span><br></code></pre></td></tr></table></figure><h3 id="Registry域名"><a href="#Registry域名" class="headerlink" title="Registry域名"></a>Registry域名</h3><blockquote><p>如果你的环境没有自己的DNS服务器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ansible下发harbor解析hosts</span><br><span class="hljs-comment">## 添加hosts</span><br>ansible k8s -m lineinfile -a <span class="hljs-string">&quot;dest=/etc/hosts line=&#x27;10.10.253.17 registry.boer.xyz&#x27;&quot;</span><br><span class="hljs-comment">## 删除hosts</span><br>ansible k8s -m lineinfile -a <span class="hljs-string">&quot;dest=/etc/hosts line=&#x27;10.10.253.17 registry.boer.xyz&#x27; state=absent&quot;</span><br></code></pre></td></tr></table></figure><h3 id="创建Registry-secret"><a href="#创建Registry-secret" class="headerlink" title="创建Registry secret"></a>创建Registry secret</h3><blockquote><p>思路分享：Harbor建一个账号(比如: deployer)，作为K8S的公用镜像拉取账号。<br>注意将公用账户加入<strong>每一个项目</strong>的成员，并赋予<strong>项目管理员</strong>以上权限。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl create secret docker-registry regcred --docker-server=registry.boer.xyz --docker-username=deployer --docker-password=&lt;your-password&gt; --docker-email=boer0924@gmail.com --namespace=boer-public<br></code></pre></td></tr></table></figure><h3 id="用法Demo"><a href="#用法Demo" class="headerlink" title="用法Demo"></a>用法Demo</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">## docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]</span><br><span class="hljs-comment"># docker tag boer0924/theapp:0.0.1 registry.boer.xyz/public/theapp:0.0.1</span><br><span class="hljs-comment"># docker push registry.boer.xyz/public/theapp:0.0.1 # 上传镜像</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">template:</span><br>  <span class="hljs-attr">spec:</span><br>    <span class="hljs-attr">containers:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">theapp</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">registry.boer.xyz/public/theapp:0.0.1</span><br>      <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">Always</span><br>      <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">5000</span><br>    <span class="hljs-attr">imagePullSecrets:</span> <span class="hljs-comment"># 划重点</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">regcred</span><br></code></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://www.qikqiak.com/post/harbor-quick-install/">https://www.qikqiak.com/post/harbor-quick-install/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Kubernetes</tag>
      
      <tag>Harbor</tag>
      
      <tag>Docker</tag>
      
      <tag>Registry</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中间件运维规范(初稿)</title>
    <link href="/2019/06/13/middleware-devops-guide/"/>
    <url>/2019/06/13/middleware-devops-guide/</url>
    
    <content type="html"><![CDATA[<p>本文记录中间件<code>RabbitMQ</code>, <code>Kafka</code>, <code>Elasticsearch</code>系统的集群部署，需求方必备信息，日常巡检等应该check的重要节点。</p><span id="more"></span><h1 id="中间件运维规范-初稿"><a href="#中间件运维规范-初稿" class="headerlink" title="中间件运维规范(初稿)"></a>中间件运维规范(初稿)</h1><h2 id="os-level"><a href="#os-level" class="headerlink" title="os-level:"></a>os-level:</h2><p>其他内核优化同操作系统内核基线</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">vm.max_map_count=262144<br><br><span class="hljs-bullet">* </span>soft nofile 102400<br><span class="hljs-bullet">* </span>hard nofile 204800<br></code></pre></td></tr></table></figure><h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><p>一、集群部署</p><ol><li>配置MNESIA_BASE, LOG_BASE</li><li>启动management, federation插件</li><li>配置logrotate</li><li>修改默认控制登录密码</li><li>配置netdata监控, 并验证</li><li>创建测试exchange\queue验证可用性</li><li>创建元数据: vhost\exchange\queue\user\policy</li><li>配置镜像队列</li></ol><p>二、需求方提供信息</p><ol><li>集群信息</li><li>exchange 名字</li><li>exchange 类型</li><li>queue 名字</li><li>queue 是否持久化</li><li>routing_key</li></ol><p>三、日常巡检</p><ol><li>内存、磁盘(全局流控)</li><li>rabbitmq进程fd、mmap占用量</li><li>消息积压情况</li><li>是否信用卡流控</li><li>connections/channel连接数量</li></ol><h2 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h2><p>一、集群部署</p><ol><li>log.retention.hours 建议72甚至更小</li><li>num.replica.fetchers flowwers数据同步线程数, 建议cpu core数</li><li>num.recovery.threads.per.data.dir 数据恢复线程数, 建议cpu core数</li></ol><p>二、需求方提供信息</p><ol><li>topic名字, 建议name: test-for-native 中划线分割，避免下划线/点</li><li>分区、副本数量, 建议分区为broker的倍数，副本数为3broker/2,5broker/3</li><li>预估7/3天topic数据量(消息落盘后占用磁盘空间大小), 若topic数据量较大, 且重要级别较高建议副本为broker数</li><li>消费积压监控功能netdata已在开发中…</li></ol><p>三、日常巡检</p><ol><li>分区是否均衡、leader是否是优先副本</li><li>kafka配置data.dirs磁盘容量情况</li><li>kafka进程fd、mmap占用量</li></ol><h2 id="ES"><a href="#ES" class="headerlink" title="ES"></a>ES</h2><p>一、集群部署</p><ol><li>cluster-name</li><li>node.name</li><li>network.host</li><li>jvm.options配置堆内存</li><li>discovery.zen.minimum_master_nodes: (N/2)+1 防脑裂</li></ol><p>二、需求方提供信息</p><ol><li>索引名</li><li>索引主分片、复制分片数量</li><li>索引mapping</li><li>索引管理策略(index分割策略、删除index策略等)</li><li>预估索引占用磁盘空间大小</li><li>是否需要其他es插件，并提供配置</li></ol><p>三、日常巡检</p><ol><li>集群状态, 强制green</li><li>path.data配置占用磁盘容量情况</li><li>path.logs配置占用磁盘容量情况(考虑logrotate/log4j日志轮转)</li></ol><h2 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h2><p>rabbitmq:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">cluster_partition_handling</span> = pause_minority<br><span class="hljs-attr">vm_memory_high_watermark</span> = <span class="hljs-number">0.4</span><br><span class="hljs-attr">vm_memory_high_watermark_paging_ratio</span> = <span class="hljs-number">0.75</span><br><span class="hljs-attr">hipe_compile</span> = ture<br><span class="hljs-attr">queue_index_max_journal_entries</span> = <span class="hljs-number">262144</span><br><span class="hljs-attr">frame_max</span> = <span class="hljs-number">128</span>KB<br><span class="hljs-attr">delegate_count</span> = <span class="hljs-number">16</span><br><span class="hljs-attr">msg_store_file_size_limit</span> = <span class="hljs-number">16</span>MB<br></code></pre></td></tr></table></figure><p>kafka:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">broker.id</span>=<span class="hljs-number">34</span><br><span class="hljs-attr">listeners</span>=PLAINTEXT://<span class="hljs-number">10.193</span>.<span class="hljs-number">196.34</span>:<span class="hljs-number">9092</span><br><span class="hljs-attr">advertised.listeners</span>=PLAINTEXT://<span class="hljs-number">10.193</span>.<span class="hljs-number">196.34</span>:<span class="hljs-number">9092</span><br><span class="hljs-attr">socket.send.buffer.bytes</span>=<span class="hljs-number">102400</span><br><span class="hljs-attr">socket.receive.buffer.bytes</span>=<span class="hljs-number">102400</span><br><span class="hljs-attr">socket.request.max.bytes</span>=<span class="hljs-number">104857600</span><br><span class="hljs-attr">log.dirs</span>=/home/finance/Data/kafka<br><span class="hljs-attr">num.partitions</span>=<span class="hljs-number">9</span><br><span class="hljs-attr">offsets.topic.replication.factor</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">transaction.state.log.replication.factor</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">transaction.state.log.min.isr</span>=<span class="hljs-number">1</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">log.segment.bytes</span>=<span class="hljs-number">1073741824</span><br><span class="hljs-attr">log.retention.check.interval.ms</span>=<span class="hljs-number">300000</span><br><span class="hljs-attr">zookeeper.connect</span>=<span class="hljs-number">10.193</span>.<span class="hljs-number">196.32</span>:<span class="hljs-number">2181</span>,<span class="hljs-number">10.193</span>.<span class="hljs-number">196.33</span>:<span class="hljs-number">2181</span>,<span class="hljs-number">10.193</span>.<span class="hljs-number">196.34</span>:<span class="hljs-number">2181</span>/kafka<br><span class="hljs-attr">group.initial.rebalance.delay.ms</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">zookeeper.connection.timeout.ms</span>=<span class="hljs-number">10000</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">log.retention.hours</span>=<span class="hljs-number">24</span><br><span class="hljs-attr">offsets.retention.minutes</span>=<span class="hljs-number">1440</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">auto.create.topics.enable</span>=<span class="hljs-literal">false</span><br><span class="hljs-attr">delete.topic.enable</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">auto.leader.rebalance.enable</span>=<span class="hljs-literal">true</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">num.network.threads</span>=<span class="hljs-number">3</span><br><span class="hljs-attr">num.io.threads</span>=<span class="hljs-number">8</span><br><span class="hljs-attr">num.recovery.threads.per.data.dir</span>=<span class="hljs-number">6</span><br><span class="hljs-attr">num.replica.fetchers</span>=<span class="hljs-number">3</span><br><span class="hljs-attr">log.cleaner.threads</span>=<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>RabbitMQ</tag>
      
      <tag>Kafka</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>APM - Pinpoint笔记</title>
    <link href="/2019/05/09/pinpoint-deployment/"/>
    <url>/2019/05/09/pinpoint-deployment/</url>
    
    <content type="html"><![CDATA[<h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://naver.github.io/pinpoint/installation.html">https://naver.github.io/pinpoint/installation.html</a></li><li><a href="https://naver.github.io/pinpoint/faq.html">https://naver.github.io/pinpoint/faq.html</a></li></ul><span id="more"></span><h3 id="组件说明"><a href="#组件说明" class="headerlink" title="组件说明"></a>组件说明</h3><table><thead><tr><th><strong>HBase</strong></th><th>for storage</th></tr></thead><tbody><tr><td><strong>Pinpoint Collector</strong></td><td>Pinpoint core</td></tr><tr><td><strong>Pinpoint Web</strong></td><td>Web UI</td></tr><tr><td><strong>Pinpoint Agent</strong></td><td>attached to a java application for profiling</td></tr></tbody></table><h3 id="hbase脚本"><a href="#hbase脚本" class="headerlink" title="hbase脚本"></a>hbase脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/naver/pinpoint/tree/master/hbase/scripts<br></code></pre></td></tr></table></figure><h3 id="War包部署方式"><a href="#War包部署方式" class="headerlink" title="War包部署方式"></a>War包部署方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -LO https://archive.apache.org/dist/hbase/1.2.7/hbase-1.2.7-bin.tar.gz<br>下载pinpoint组件war/jar包<br>https://github.com/naver/pinpoint/releases<br><br>https://raw.githubusercontent.com/naver/pinpoint/master/hbase/scripts/hbase-create.hbase<br>bin/hbase shell ./hbase-create.hbase<br></code></pre></td></tr></table></figure><h3 id="Docker部署方式"><a href="#Docker部署方式" class="headerlink" title="Docker部署方式"></a>Docker部署方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/naver/pinpoint-docker<br>docker-compose pull<br>docker-compose up -d<br>docker-compose ps<br></code></pre></td></tr></table></figure><h3 id="Agent配置"><a href="#Agent配置" class="headerlink" title="Agent配置"></a>Agent配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/naver/pinpoint/blob/master/doc/installation.md<span class="hljs-comment">#profiles-2</span><br><br>vim <span class="hljs-variable">$Agent_Home</span>/pinpoint.config<br>pinpoint.profiler.profiles.active=release<br><span class="hljs-comment"># 替换全部127.0.0.1为你自己的pinpoint server地址</span><br><br>vim profiles/release/pinpoint-env.config <span class="hljs-comment"># release对应上面配置文件pinpoint.profiler.profiles.active=release</span><br><span class="hljs-comment"># 替换全部127.0.0.1为你自己的pinpoint server地址</span><br>profiler.sampling.rate=&lt;your-want&gt; <span class="hljs-comment"># agent采样频率</span><br></code></pre></td></tr></table></figure><h3 id="应用配置"><a href="#应用配置" class="headerlink" title="应用配置"></a>应用配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">-javaagent:<span class="hljs-variable">$&#123;pinpointPath&#125;</span>/pinpoint-bootstrap-2.0.2.jar<br>-Dpinpoint.applicationName=&lt; 应用名, length&lt;24 &gt;<br>-Dpinpoint.agentId=&lt; 全局唯一, length&lt;24 &gt;<br></code></pre></td></tr></table></figure><h3 id="填坑"><a href="#填坑" class="headerlink" title="填坑"></a>填坑</h3><ul><li>服务名 &amp; AgentID长度不能超过24 <code>https://github.com/naver/pinpoint/issues/3504</code></li><li>AgentID全局唯一</li></ul><h3 id="删除AgentID-APP"><a href="#删除AgentID-APP" class="headerlink" title="删除AgentID/APP"></a>删除AgentID/APP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://pinpoint-apm.github.io/pinpoint/faq.html<span class="hljs-comment">#how-do-i-delete-application-name-andor-agent-id-from-hbase</span><br><br>http://pinpoint.boer.xyz/admin/removeAgentId.pinpoint?applicationName=OrderService&amp;agentId=cdc15ef982f5a09f&amp;password=admin<br></code></pre></td></tr></table></figure><h3 id="修改HBase数据保存时间"><a href="#修改HBase数据保存时间" class="headerlink" title="修改HBase数据保存时间"></a>修改HBase数据保存时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Shortening the TTL values, especially for `AgentStatV2` and `TraceV2`</span><br>describe <span class="hljs-string">&#x27;TraceV2&#x27;</span><br><span class="hljs-built_in">disable</span> <span class="hljs-string">&#x27;TraceV2&#x27;</span><br>alter <span class="hljs-string">&#x27;TraceV2&#x27;</span>, &#123;NAME =&gt; <span class="hljs-string">&#x27;S&#x27;</span>, TTL =&gt; <span class="hljs-string">&#x27;604800&#x27;</span>&#125; <span class="hljs-comment"># 7days</span><br><span class="hljs-built_in">enable</span> <span class="hljs-string">&#x27;TraceV2&#x27;</span><br>describe <span class="hljs-string">&#x27;TraceV2&#x27;</span><br><br><span class="hljs-comment"># 业务低峰期major_compact</span><br>hbase shell &lt; https://github.com/naver/pinpoint/blob/master/hbase/scripts/hbase-major-compact-htable.hbase<br></code></pre></td></tr></table></figure><hr><p>Stay Hungry, Stay Foolish.</p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>APM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Elasticsearch数据迁移</title>
    <link href="/2019/03/24/es-data-migrate/"/>
    <url>/2019/03/24/es-data-migrate/</url>
    
    <content type="html"><![CDATA[<ol><li>_reindex适用场景 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.1/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/6.1/docs-reindex.html</a></li></ol><ul><li>同一集群不同索引数据迁移</li><li>不同集群索引数据迁移</li></ul><ol start="2"><li>动态调整迁移速度</li><li>随时取消任务</li><li>Built-in，无需安装(反例logstash)</li><li>5.x - 7.x版本api均包含以上功能(可做为es数据迁移通用方案)</li><li>_reindex、logstash等都通过scroll\bulk API实现，读写性能无差别</li><li>logstash等三方工具适合blue-green网络不可达的情况下，作为代理迁移数据 (blue - green不通，blue -&gt; logstash -&gt; green代理)</li></ol><span id="more"></span><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>es集群</p><table><thead><tr><th>node</th><th>type</th></tr></thead><tbody><tr><td>10.10.62.20</td><td>-</td></tr><tr><td>10.10.62.21</td><td>-</td></tr><tr><td>10.10.62.22</td><td>-</td></tr><tr><td>10.10.62.80</td><td>hot</td></tr><tr><td>10.10.62.81</td><td>hot</td></tr><tr><td>10.10.62.82</td><td>hot</td></tr></tbody></table><p>索引<code>message_qq_201812</code>在节点<code>10.10.62.20, 10.10.62.21, 10.10.62.22</code>, 计划迁移到节点<code>10.10.62.80, 10.10.62.81, 10.10.62.82</code>的<code>message_wechat_201812</code>索引, 观察无异常后下线节点<code>10.10.62.20, 10.10.62.21, 10.10.62.22</code></p><h3 id="1、创建index模板"><a href="#1、创建index模板" class="headerlink" title="1、创建index模板"></a>1、创建index模板</h3><p><strong>消息平台已存在index模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -XPUT http://&lt;es-client&gt;:9200/_template/message_wechat_template -H <span class="hljs-string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="hljs-string">&#x27;&#123;</span><br><span class="hljs-string">  &quot;order&quot;: 0,</span><br><span class="hljs-string">  &quot;index_patterns&quot;: [</span><br><span class="hljs-string">    &quot;message_wechat*&quot;</span><br><span class="hljs-string">  ],</span><br><span class="hljs-string">  &quot;settings&quot;: &#123;</span><br><span class="hljs-string">    &quot;index&quot;: &#123;</span><br><span class="hljs-string">      &quot;number_of_shards&quot;: &quot;3&quot;,</span><br><span class="hljs-string">      &quot;number_of_replicas&quot;: &quot;1&quot;,</span><br><span class="hljs-string">      &quot;routing&quot;: &#123;</span><br><span class="hljs-string">        &quot;allocation&quot;: &#123;</span><br><span class="hljs-string">          &quot;require&quot;: &#123;</span><br><span class="hljs-string">            &quot;box_type&quot;: &quot;hot&quot;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">  &#125;,</span><br><span class="hljs-string">  &quot;mappings&quot;: &#123;&#125;,</span><br><span class="hljs-string">  &quot;aliases&quot;: &#123;</span><br><span class="hljs-string">    &quot;message_wechat&quot;: &#123;&#125;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="2、-创建index"><a href="#2、-创建index" class="headerlink" title="2、 创建index"></a>2、 创建index</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -XPUT http://&lt;es-client&gt;:9200/message_wechat_201812<br><br>curl http://&lt;es-client&gt;:9200/_cat/shards/message_wechat_201812 <span class="hljs-comment"># 确认shards在目标主机</span><br></code></pre></td></tr></table></figure><h3 id="3、执行迁移"><a href="#3、执行迁移" class="headerlink" title="3、执行迁移"></a>3、执行迁移</h3><p><code>message_qq_201812</code> -&gt; <code>message_wechat_201812</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -XPOST http: //&lt;es-client&gt;:9200/_reindex?wait_for_completion=<span class="hljs-literal">false</span> -H <span class="hljs-string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="hljs-string">&#x27;&#123;</span><br><span class="hljs-string">  &quot;source&quot;: &#123;</span><br><span class="hljs-string">    &quot;index&quot;: &quot;message_qq_201812&quot;,</span><br><span class="hljs-string">    &quot;size&quot;: 1000</span><br><span class="hljs-string">  &#125;,</span><br><span class="hljs-string">  &quot;dest&quot;: &#123;</span><br><span class="hljs-string">    &quot;index&quot;: &quot;message_wechat_201812&quot;</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>记录taskId</strong> <code>&#123;&quot;task&quot;:&quot;YoYJXpjnQICRtr5EErLZQA:3208554&quot;&#125;</code></p></blockquote><h3 id="4、动态调整速度"><a href="#4、动态调整速度" class="headerlink" title="4、动态调整速度"></a>4、动态调整速度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -XPOST http://&lt;es-client&gt;:9200/_reindex/YoYJXpjnQICRtr5EErLZQA:3208554/_rethrottle?requests_per_second=1000<br></code></pre></td></tr></table></figure><h3 id="5、取消任务"><a href="#5、取消任务" class="headerlink" title="5、取消任务"></a>5、取消任务</h3><p><code>curl -XPOST http://&lt;es-client&gt;:9200/_tasks/YoYJXpjnQICRtr5EErLZQA:3208554/_cancel</code></p><h3 id="6、删除老index"><a href="#6、删除老index" class="headerlink" title="6、删除老index"></a>6、删除老index</h3><blockquote><p>待新索引验证无误后</p></blockquote><p><code>curl -XDELETE http://&lt;es-client&gt;:9200/message_qq_201812</code></p><h3 id="7、-task索引"><a href="#7、-task索引" class="headerlink" title="7、.task索引"></a>7、.task索引</h3><p>手动创建_reindex等task后，es会自动创建一个.task的index</p><ol><li>删除.task，如序6</li><li>让es自动迁移.tasks, 如序8</li></ol><h3 id="8、逐台下线老节点"><a href="#8、逐台下线老节点" class="headerlink" title="8、逐台下线老节点"></a>8、逐台下线老节点</h3><p><strong>注意: 逐台平滑下线</strong></p>]]></content>
    
    
    <categories>
      
      <category>Elastic</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elasticsearch</tag>
      
      <tag>Logstash</tag>
      
      <tag>reindex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>那些年，拉取Docker镜像犯的困</title>
    <link href="/2018/09/15/pull-docker-images/"/>
    <url>/2018/09/15/pull-docker-images/</url>
    
    <content type="html"><![CDATA[<p>曾多少次，你在拉取Docker镜像时出现Timeout<br>曾几何时，你想在没有Docker客户端的情况下拉取Docker镜像<br>又有多少回，即使你有梯子也翻不过<code>GCR</code>, <code>Quay</code>等镜像仓库的墙…</p><span id="more"></span><p>以下，我们列举几种拉取镜像的场景并给出解决方法</p><ol><li>安装K8S集群时</li><li>Docker客户端拉取时</li><li>无需Docker客户端拉取镜像</li><li>翻越<code>Quay</code>等镜像仓库的墙</li></ol><h3 id="1-K8S"><a href="#1-K8S" class="headerlink" title="1. K8S"></a>1. K8S</h3><blockquote><p>registry.aliyuncs.com/google_containers</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">## kubeadm-config.yaml</span><br><span class="hljs-comment"># kubeadm init --config kubeadm-config.yaml --upload-certs</span><br><span class="hljs-comment"># kubeadm config print init-defaults</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeadm.k8s.io/v1beta2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterConfiguration</span><br><span class="hljs-attr">kubernetesVersion:</span> <span class="hljs-string">v1.18.3</span><br><span class="hljs-attr">controlPlaneEndpoint:</span> <span class="hljs-string">k8s.meitianiot.lo:6443</span><br><span class="hljs-attr">certificatesDir:</span> <span class="hljs-string">/etc/kubernetes/pki</span><br><span class="hljs-attr">clusterName:</span> <span class="hljs-string">kubernetes</span><br><span class="hljs-attr">apiServer:</span><br>  <span class="hljs-attr">timeoutForControlPlane:</span> <span class="hljs-string">4m0s</span><br><span class="hljs-attr">controllerManager:</span> &#123;&#125;<br><span class="hljs-attr">scheduler:</span> &#123;&#125;<br><span class="hljs-attr">imageRepository:</span> <span class="hljs-string">registry.aliyuncs.com/google_containers</span><br><span class="hljs-attr">networking:</span><br>  <span class="hljs-attr">dnsDomain:</span> <span class="hljs-string">cluster.local</span><br>  <span class="hljs-attr">podSubnet:</span> <span class="hljs-number">172.30</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/16</span><br>  <span class="hljs-attr">serviceSubnet:</span> <span class="hljs-number">10.96</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/12</span><br><span class="hljs-attr">dns:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">CoreDNS</span><br><span class="hljs-attr">etcd:</span><br>  <span class="hljs-attr">local:</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">/var/lib/etcd</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubeproxy.config.k8s.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">KubeProxyConfiguration</span><br><span class="hljs-attr">mode:</span> <span class="hljs-string">ipvs</span><br></code></pre></td></tr></table></figure><h3 id="2-Docker镜像加速"><a href="#2-Docker镜像加速" class="headerlink" title="2. Docker镜像加速"></a>2. Docker镜像加速</h3><blockquote><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;https://890une7x.mirror.aliyuncs.com&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;exec-opts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;log-driver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;json-file&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;log-opts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;max-size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;100m&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;storage-driver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;overlay2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;storage-opts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;overlay2.override_kernel_check=true&quot;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h3 id="3-docker-pull-py"><a href="#3-docker-pull-py" class="headerlink" title="3. docker_pull.py"></a>3. docker_pull.py</h3><blockquote><p>无客户端拉取镜像 <a href="https://github.com/NotGlop/docker-drag">https://github.com/NotGlop/docker-drag</a><br>以下脚本只是站在巨人的肩膀上，加入了<code>proxies</code>功能，以应对中国局域网。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> gzip<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> tarfile<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> urllib3<br><br>proxies = &#123;<br>    <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:1081&#x27;</span>,<br>    <span class="hljs-string">&#x27;https&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1:1081&#x27;</span><br>&#125;<br><br>proxy_get = functools.partial(requests.get, proxies=proxies)<br><br>urllib3.disable_warnings()<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">2</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Usage:\n\tdocker_pull.py [registry/][repository/]image[:tag|@digest]\n&#x27;</span>)<br>    exit(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># Look for the Docker image to download</span><br>repo = <span class="hljs-string">&#x27;library&#x27;</span><br>tag = <span class="hljs-string">&#x27;latest&#x27;</span><br>imgparts = sys.argv[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;/&#x27;</span>)<br><span class="hljs-keyword">try</span>:<br>    img, tag = imgparts[-<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;@&#x27;</span>)<br><span class="hljs-keyword">except</span> ValueError:<br>    <span class="hljs-keyword">try</span>:<br>        img, tag = imgparts[-<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;:&#x27;</span>)<br>    <span class="hljs-keyword">except</span> ValueError:<br>        img = imgparts[-<span class="hljs-number">1</span>]<br><span class="hljs-comment"># Docker client doesn&#x27;t seem to consider the first element as a potential registry unless there is a &#x27;.&#x27; or &#x27;:&#x27;</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(imgparts) &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-string">&#x27;.&#x27;</span> <span class="hljs-keyword">in</span> imgparts[<span class="hljs-number">0</span>] <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-keyword">in</span> imgparts[<span class="hljs-number">0</span>]):<br>    registry = imgparts[<span class="hljs-number">0</span>]<br>    repo = <span class="hljs-string">&#x27;/&#x27;</span>.join(imgparts[<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>])<br><span class="hljs-keyword">else</span>:<br>    registry = <span class="hljs-string">&#x27;registry-1.docker.io&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(imgparts[:-<span class="hljs-number">1</span>]) != <span class="hljs-number">0</span>:<br>        repo = <span class="hljs-string">&#x27;/&#x27;</span>.join(imgparts[:-<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">else</span>:<br>        repo = <span class="hljs-string">&#x27;library&#x27;</span><br>repository = <span class="hljs-string">&#x27;&#123;&#125;/&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(repo, img)<br><br><span class="hljs-comment"># Get Docker authentication endpoint when it is required</span><br>auth_url = <span class="hljs-string">&#x27;https://auth.docker.io/token&#x27;</span><br>reg_service = <span class="hljs-string">&#x27;registry.docker.io&#x27;</span><br>resp = proxy_get(<span class="hljs-string">&#x27;https://&#123;&#125;/v2/&#x27;</span>.<span class="hljs-built_in">format</span>(registry), verify=<span class="hljs-literal">False</span>)<br><span class="hljs-keyword">if</span> resp.status_code == <span class="hljs-number">401</span>:<br>    auth_url = resp.headers[<span class="hljs-string">&#x27;WWW-Authenticate&#x27;</span>].split(<span class="hljs-string">&#x27;&quot;&#x27;</span>)[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">try</span>:<br>        reg_service = resp.headers[<span class="hljs-string">&#x27;WWW-Authenticate&#x27;</span>].split(<span class="hljs-string">&#x27;&quot;&#x27;</span>)[<span class="hljs-number">3</span>]<br>    <span class="hljs-keyword">except</span> IndexError:<br>        reg_service = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-comment"># Get Docker token and fetch manifest v2 (this part is useless for unauthenticated registries like Microsoft)</span><br>resp = proxy_get(<span class="hljs-string">&#x27;&#123;&#125;?service=&#123;&#125;&amp;scope=repository:&#123;&#125;:pull&#x27;</span>.<span class="hljs-built_in">format</span>(auth_url, reg_service, repository), verify=<span class="hljs-literal">False</span>)<br>access_token = resp.json()[<span class="hljs-string">&#x27;token&#x27;</span>]<br>auth_head = &#123;<span class="hljs-string">&#x27;Authorization&#x27;</span>: <span class="hljs-string">&#x27;Bearer &#x27;</span> + access_token,<br>             <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;application/vnd.docker.distribution.manifest.v2+json&#x27;</span>&#125;<br><br><span class="hljs-comment"># Get image layer digests</span><br>resp = proxy_get(<span class="hljs-string">&#x27;https://&#123;&#125;/v2/&#123;&#125;/manifests/&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(registry, repository, tag), headers=auth_head, verify=<span class="hljs-literal">False</span>)<br><span class="hljs-keyword">if</span> (resp.status_code != <span class="hljs-number">200</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[-] Cannot fetch manifest for &#123;&#125; [HTTP &#123;&#125;]&#x27;</span>.<span class="hljs-built_in">format</span>(repository, resp.status_code))<br>    <span class="hljs-built_in">print</span>(resp.content)<br>    auth_head = &#123;<span class="hljs-string">&#x27;Authorization&#x27;</span>: <span class="hljs-string">&#x27;Bearer &#x27;</span> + access_token,<br>                 <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;application/vnd.docker.distribution.manifest.list.v2+json&#x27;</span>&#125;<br>    resp = proxy_get(<span class="hljs-string">&#x27;https://&#123;&#125;/v2/&#123;&#125;/manifests/&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(registry, repository, tag), headers=auth_head,<br>                     verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-keyword">if</span> (resp.status_code == <span class="hljs-number">200</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Manifests found for this tag (use the @digest format to pull the corresponding image):&#x27;</span>)<br>        manifests = resp.json()[<span class="hljs-string">&#x27;manifests&#x27;</span>]<br>        <span class="hljs-keyword">for</span> manifest <span class="hljs-keyword">in</span> manifests:<br>            <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> manifest[<span class="hljs-string">&quot;platform&quot;</span>].items():<br>                sys.stdout.write(<span class="hljs-string">&#x27;&#123;&#125;: &#123;&#125;, &#x27;</span>.<span class="hljs-built_in">format</span>(key, value))<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;digest: &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(manifest[<span class="hljs-string">&quot;digest&quot;</span>]))<br>    exit(<span class="hljs-number">1</span>)<br>layers = resp.json()[<span class="hljs-string">&#x27;layers&#x27;</span>]<br><br><span class="hljs-comment"># Create tmp folder that will hold the image</span><br>imgdir = <span class="hljs-string">&#x27;tmp_&#123;&#125;_&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(img, tag.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;@&#x27;</span>))<br>os.mkdir(imgdir)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Creating image structure in: &#x27;</span> + imgdir)<br><br>config = resp.json()[<span class="hljs-string">&#x27;config&#x27;</span>][<span class="hljs-string">&#x27;digest&#x27;</span>]<br>confresp = proxy_get(<span class="hljs-string">&#x27;https://&#123;&#125;/v2/&#123;&#125;/blobs/&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(registry, repository, config), headers=auth_head,<br>                     verify=<span class="hljs-literal">False</span>)<br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;&#123;&#125;/&#123;&#125;.json&#x27;</span>.<span class="hljs-built_in">format</span>(imgdir, config[<span class="hljs-number">7</span>:]), <span class="hljs-string">&#x27;wb&#x27;</span>)<br>file.write(confresp.content)<br>file.close()<br><br>content = [&#123;<br>    <span class="hljs-string">&#x27;Config&#x27;</span>: config[<span class="hljs-number">7</span>:] + <span class="hljs-string">&#x27;.json&#x27;</span>,<br>    <span class="hljs-string">&#x27;RepoTags&#x27;</span>: [],<br>    <span class="hljs-string">&#x27;Layers&#x27;</span>: []<br>&#125;]<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(imgparts[:-<span class="hljs-number">1</span>]) != <span class="hljs-number">0</span>:<br>    content[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;RepoTags&#x27;</span>].append(<span class="hljs-string">&#x27;/&#x27;</span>.join(imgparts[:-<span class="hljs-number">1</span>]) + <span class="hljs-string">&#x27;/&#x27;</span> + img + <span class="hljs-string">&#x27;:&#x27;</span> + tag)<br><span class="hljs-keyword">else</span>:<br>    content[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;RepoTags&#x27;</span>].append(img + <span class="hljs-string">&#x27;:&#x27;</span> + tag)<br><br>empty_json = <span class="hljs-string">&#x27;&#123;&quot;created&quot;:&quot;1970-01-01T00:00:00Z&quot;,&quot;container_config&quot;:&#123;&quot;Hostname&quot;:&quot;&quot;,&quot;Domainname&quot;:&quot;&quot;,&quot;User&quot;:&quot;&quot;,&quot;AttachStdin&quot;:false, \</span><br><span class="hljs-string">&quot;AttachStdout&quot;:false,&quot;AttachStderr&quot;:false,&quot;Tty&quot;:false,&quot;OpenStdin&quot;:false, &quot;StdinOnce&quot;:false,&quot;Env&quot;:null,&quot;Cmd&quot;:null,&quot;Image&quot;:&quot;&quot;, \</span><br><span class="hljs-string">&quot;Volumes&quot;:null,&quot;WorkingDir&quot;:&quot;&quot;,&quot;Entrypoint&quot;:null,&quot;OnBuild&quot;:null,&quot;Labels&quot;:null&#125;&#125;&#x27;</span><br><br><span class="hljs-comment"># Build layer folders</span><br>parentid = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> layer <span class="hljs-keyword">in</span> layers:<br>    ublob = layer[<span class="hljs-string">&#x27;digest&#x27;</span>]<br>    <span class="hljs-comment"># <span class="hljs-doctag">FIXME:</span> Creating fake layer ID. Don&#x27;t know how Docker generates it</span><br>    fake_layerid = hashlib.sha256((parentid + <span class="hljs-string">&#x27;\n&#x27;</span> + ublob + <span class="hljs-string">&#x27;\n&#x27;</span>).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()<br>    layerdir = imgdir + <span class="hljs-string">&#x27;/&#x27;</span> + fake_layerid<br>    os.mkdir(layerdir)<br><br>    <span class="hljs-comment"># Creating VERSION file</span><br>    file = <span class="hljs-built_in">open</span>(layerdir + <span class="hljs-string">&#x27;/VERSION&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>    file.write(<span class="hljs-string">&#x27;1.0&#x27;</span>)<br>    file.close()<br><br>    <span class="hljs-comment"># Creating layer.tar file</span><br>    sys.stdout.write(ublob[<span class="hljs-number">7</span>:<span class="hljs-number">19</span>] + <span class="hljs-string">&#x27;: Downloading...&#x27;</span>)<br>    sys.stdout.flush()<br>    bresp = proxy_get(<span class="hljs-string">&#x27;https://&#123;&#125;/v2/&#123;&#125;/blobs/&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(registry, repository, ublob), headers=auth_head,<br>                      verify=<span class="hljs-literal">False</span>)<br>    <span class="hljs-keyword">if</span> (bresp.status_code != <span class="hljs-number">200</span>):<br>        bresp = proxy_get(layer[<span class="hljs-string">&#x27;urls&#x27;</span>][<span class="hljs-number">0</span>], headers=auth_head, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">if</span> (bresp.status_code != <span class="hljs-number">200</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\rERROR: Cannot download layer &#123;&#125; [HTTP &#123;&#125;]&#x27;</span>.<span class="hljs-built_in">format</span>(ublob[<span class="hljs-number">7</span>:<span class="hljs-number">19</span>], bresp.status_code,<br>                                                                       bresp.headers[<span class="hljs-string">&#x27;Content-Length&#x27;</span>]))<br>            <span class="hljs-built_in">print</span>(bresp.content)<br>            exit(<span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\r&#123;&#125;: Pull complete [&#123;&#125;]&quot;</span>.<span class="hljs-built_in">format</span>(ublob[<span class="hljs-number">7</span>:<span class="hljs-number">19</span>], bresp.headers[<span class="hljs-string">&#x27;Content-Length&#x27;</span>]))<br>    content[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;Layers&#x27;</span>].append(fake_layerid + <span class="hljs-string">&#x27;/layer.tar&#x27;</span>)<br>    file = <span class="hljs-built_in">open</span>(layerdir + <span class="hljs-string">&#x27;/layer.tar&#x27;</span>, <span class="hljs-string">&quot;wb&quot;</span>)<br>    mybuff = BytesIO(bresp.content)<br>    unzLayer = gzip.GzipFile(fileobj=mybuff)<br>    file.write(unzLayer.read())<br>    unzLayer.close()<br>    file.close()<br><br>    <span class="hljs-comment"># Creating json file</span><br>    file = <span class="hljs-built_in">open</span>(layerdir + <span class="hljs-string">&#x27;/json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>    <span class="hljs-comment"># last layer = config manifest - history - rootfs</span><br>    <span class="hljs-keyword">if</span> layers[-<span class="hljs-number">1</span>][<span class="hljs-string">&#x27;digest&#x27;</span>] == layer[<span class="hljs-string">&#x27;digest&#x27;</span>]:<br>        <span class="hljs-comment"># <span class="hljs-doctag">FIXME:</span> json.loads() automatically converts to unicode, thus decoding values whereas Docker doesn&#x27;t</span><br>        json_obj = json.loads(confresp.content)<br>        <span class="hljs-keyword">del</span> json_obj[<span class="hljs-string">&#x27;history&#x27;</span>]<br>        <span class="hljs-keyword">del</span> json_obj[<span class="hljs-string">&#x27;rootfs&#x27;</span>]<br>    <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># other layers json are empty</span><br>        json_obj = json.loads(empty_json)<br>    json_obj[<span class="hljs-string">&#x27;id&#x27;</span>] = fake_layerid<br>    <span class="hljs-keyword">if</span> parentid:<br>        json_obj[<span class="hljs-string">&#x27;parent&#x27;</span>] = parentid<br>    parentid = json_obj[<span class="hljs-string">&#x27;id&#x27;</span>]<br>    file.write(json.dumps(json_obj))<br>    file.close()<br><br>file = <span class="hljs-built_in">open</span>(imgdir + <span class="hljs-string">&#x27;/manifest.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>file.write(json.dumps(content))<br>file.close()<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(imgparts[:-<span class="hljs-number">1</span>]) != <span class="hljs-number">0</span>:<br>    content = &#123;<span class="hljs-string">&#x27;/&#x27;</span>.join(imgparts[:-<span class="hljs-number">1</span>]) + <span class="hljs-string">&#x27;/&#x27;</span> + img: &#123;tag: fake_layerid&#125;&#125;<br><span class="hljs-keyword">else</span>:  <span class="hljs-comment"># when pulling only an img (without repo and registry)</span><br>    content = &#123;img: &#123;tag: fake_layerid&#125;&#125;<br>file = <span class="hljs-built_in">open</span>(imgdir + <span class="hljs-string">&#x27;/repositories&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>file.write(json.dumps(content))<br>file.close()<br><br><span class="hljs-comment"># Create image tar and clean tmp folder</span><br>docker_tar = repo.replace(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-string">&#x27;_&#x27;</span>) + <span class="hljs-string">&#x27;_&#x27;</span> + img + <span class="hljs-string">&#x27;.tar&#x27;</span><br>tar = tarfile.<span class="hljs-built_in">open</span>(docker_tar, <span class="hljs-string">&quot;w&quot;</span>)<br>tar.add(imgdir, arcname=os.path.sep)<br>tar.close()<br>shutil.rmtree(imgdir)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Docker image pulled: &#x27;</span> + docker_tar)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Compress the tar file with transport: tar -zcf &#x27;</span> + docker_tar + <span class="hljs-string">&#x27;.gz&#x27;</span> + docker_tar)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Load the image: docker load -i &#x27;</span> + docker_tar)<br></code></pre></td></tr></table></figure><h3 id="4-Quay镜像"><a href="#4-Quay镜像" class="headerlink" title="4. Quay镜像"></a>4. Quay镜像</h3><blockquote><p>如：quay.mirrors.ustc.edu.cn</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i -e <span class="hljs-string">&#x27;s_quay.io_quay.mirrors.ustc.edu.cn_&#x27;</span> manifests/*.yaml manifests/setup/*.yaml <span class="hljs-comment"># quay.mirrors.ustc.edu.cn源</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>DockerHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Springboot Logback自定义日志</title>
    <link href="/2018/07/28/springboot-logging-configuration/"/>
    <url>/2018/07/28/springboot-logging-configuration/</url>
    
    <content type="html"><![CDATA[<p>本文展示两种日志文件命名格式：<br>格式一：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Boer</span>-Office.springboot-produce.<span class="hljs-number">20180728</span>.<span class="hljs-number">0</span>.log<br><span class="hljs-attribute">Boer</span>-Office.springboot-produce.<span class="hljs-number">20180728</span>.<span class="hljs-number">1</span>.log<br><span class="hljs-attribute">Boer</span>-Office.springboot-produce.<span class="hljs-number">20180728</span>.<span class="hljs-number">2</span>.log &lt;- 当前active日志<br></code></pre></td></tr></table></figure><p>格式二：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Boer-Office<span class="hljs-selector-class">.springboot-produce</span>.<span class="hljs-number">20180728.0</span><span class="hljs-selector-class">.log</span><br>Boer-Office<span class="hljs-selector-class">.springboot-produce</span>.<span class="hljs-number">20180728.1</span><span class="hljs-selector-class">.log</span><br>Boer-Office<span class="hljs-selector-class">.springboot-produce</span><span class="hljs-selector-class">.log</span> &lt;- 当前active日志<br></code></pre></td></tr></table></figure><p>一般根据日志文件的备份脚本会这么写：</p><blockquote><p>伪代码如下：$(date -d “-1 day” +%Y%m%d)</p></blockquote><p><code>crontab - rsync: tar -zcf Boer-Office.springboot-produce.$(date -d &quot;-1 day&quot; +%Y%m%d).tgz Boer-Office.springboot-produce.$(date -d &quot;-1 day&quot; +%Y%m%d).*.log</code></p><p>简单、高效！</p><p>基于此脚本，格式一不会有问题，格式二在传统虚拟机的部署方式下也不会有问题，但是在K8S的<code>deployment</code>部署方式下就会存在问题：考虑一下，假设当前active日志是<code>Boer-Office.springboot-produce.log</code>，这时由于某种原因服务挂掉，kube-apiserver, kube-controller配合kube-scheduler将应用pod重新调度(有可能会调度到其他node上)，此时当前active日志<code>Boer-Office.springboot-produce.log</code>并不会归档为<code>Boer-Office.springboot-produce.20180728.x.log</code>的格式，所以当备份脚本运行的时候<code>Boer-Office.springboot-produce.log</code>文件的日志就丢失了。<br>运维又背锅啦…</p><span id="more"></span><h3 id="1、Springboot配置"><a href="#1、Springboot配置" class="headerlink" title="1、Springboot配置"></a>1、Springboot配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">config:</span> <span class="hljs-string">classpath:logback-spring.xml</span><br>  <span class="hljs-comment"># config: classpath:logback-$&#123;spring.profiles.active&#125;.xml</span><br>  <span class="hljs-comment"># file:</span><br>  <span class="hljs-comment">#   max-size: 10KB</span><br>  <span class="hljs-comment">#   max-history: 7</span><br>  <span class="hljs-comment">#   path: logs</span><br>  <span class="hljs-comment">#   name: logs/$&#123;HOSTNAME&#125;.$&#123;spring.application.name&#125;.log</span><br>  <span class="hljs-comment"># pattern:</span><br>  <span class="hljs-comment">#   rolling-file-name: &quot;logs/$&#123;HOSTNAME&#125;.$&#123;spring.application.name&#125;.%d&#123;yyyyMMdd&#125;.%i.log&quot;</span><br></code></pre></td></tr></table></figure><h3 id="2、Custom-Log-Configuration"><a href="#2、Custom-Log-Configuration" class="headerlink" title="2、Custom Log Configuration"></a>2、Custom Log Configuration</h3><blockquote><p>src/main/resources/logback-spring.xml  即：classpath目录</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">conversionRule</span> <span class="hljs-attr">conversionWord</span>=<span class="hljs-string">&quot;clr&quot;</span> <span class="hljs-attr">converterClass</span>=<span class="hljs-string">&quot;org.springframework.boot.logging.logback.ColorConverter&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">conversionRule</span> <span class="hljs-attr">conversionWord</span>=<span class="hljs-string">&quot;wex&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">converterClass</span>=<span class="hljs-string">&quot;org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">conversionRule</span> <span class="hljs-attr">conversionWord</span>=<span class="hljs-string">&quot;wEx&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">converterClass</span>=<span class="hljs-string">&quot;org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;CONSOLE_LOG_PATTERN&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;CONSOLE_LOG_PATTERN:-%clr(%d&#123;$&#123;LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS&#125;&#125;)&#123;faint&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(---)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %clr(%-40.40logger&#123;39&#125;)&#123;cyan&#125; %clr(:)&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;FILE_LOG_PATTERN&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;FILE_LOG_PATTERN:-%d&#123;$&#123;LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS&#125;&#125; $&#123;LOG_LEVEL_PATTERN:-%5p&#125; $&#123;PID:- &#125; --- [%t] %-40.40logger&#123;39&#125; : %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LOG_FILE&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;LOG_FILE:-$&#123;LOG_PATH:-$&#123;LOG_TEMP:-$&#123;java.io.tmpdir:-/tmp&#125;&#125;&#125;/spring.log&#125;&quot;</span>/&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.catalina.startup.DigesterFactory&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;ERROR&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.catalina.util.LifecycleBase&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;ERROR&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.sshd.common.util.SecurityUtils&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.tomcat.util.net.NioSelectorPool&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.eclipse.jetty.util.component.AbstractLifeCycle&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;ERROR&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.hibernate.validator.internal.util.Version&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.springframework.boot.actuate.endpoint.jmx&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WARN&quot;</span>/&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;FILE&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;file&gt;$&#123;LOG_FILE&#125;&lt;/file&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rollingPolicy</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">cleanHistoryOnStart</span>&gt;</span>$&#123;LOG_FILE_CLEAN_HISTORY_ON_START:-false&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">cleanHistoryOnStart</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- &lt;fileNamePattern&gt;$&#123;ROLLING_FILE_NAME_PATTERN:-$&#123;LOG_FILE&#125;.%d&#123;yyyy-MM-dd&#125;.%i.gz&#125;&lt;/fileNamePattern&gt; --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">fileNamePattern</span>&gt;</span>logs/$&#123;HOSTNAME&#125;.$&#123;APPNAME&#125;.%d&#123;yyyyMMdd&#125;.%i.log<span class="hljs-tag">&lt;/<span class="hljs-name">fileNamePattern</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">maxFileSize</span>&gt;</span>$&#123;LOG_FILE_MAX_SIZE:-1KB&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">maxFileSize</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">maxHistory</span>&gt;</span>$&#123;LOG_FILE_MAX_HISTORY:-7&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">maxHistory</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">totalSizeCap</span>&gt;</span>$&#123;LOG_FILE_TOTAL_SIZE_CAP:-0&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">totalSizeCap</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">rollingPolicy</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;CONSOLE&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;INFO&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;CONSOLE&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;FILE&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3、Ref"><a href="#3、Ref" class="headerlink" title="3、Ref"></a>3、Ref</h3><ul><li><a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot/src/main/resources/org/springframework/boot/logging/logback">https://github.com/spring-projects/spring-boot/tree/master/spring-boot-project/spring-boot/src/main/resources/org/springframework/boot/logging/logback</a></li><li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging">https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringCloud</tag>
      
      <tag>SpringBoot</tag>
      
      <tag>Log4J2</tag>
      
      <tag>Logback</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java分析工具</title>
    <link href="/2018/06/24/jdk-analyze-tools/"/>
    <url>/2018/06/24/jdk-analyze-tools/</url>
    
    <content type="html"><![CDATA[<ol><li>jps:查看本机的Java中进程信息。</li><li>jstack:打印线程的栈信息,制作线程Dump。</li><li>jmap:打印内存映射,制作堆Dump。</li><li>jstat:性能监控工具。</li><li>jhat:内存分析工具。</li><li>jconsole:简易的可视化控制台。</li><li>jvisualvm:功能强大的控制台。</li></ol><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash">jps -l<br>top -Hp 14583<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;%x\n&quot;</span> 14619<br>391b<br>391a<br>3919<br>3918<br><br>su - meisapp<br><br>jstack pid | egrep -A50 391[ab89]<br><br>jstat -gcutil 14583 2000 10<br><br>jmap -dump:format=b,file=heapDump.hprof 14583<br>jhat heapDump.hprof<br><br><br>-XX:+HeapDumpOnOutOfMemoryError<br><br>-XX:HeapDumpPath=./<br><br><span class="hljs-comment"># CMS</span><br>-Xms200M<br>-Xmx200M<br>-XX:+UseConcMarkSweepGC<br>-XX:CMSInitiatingOccupancyFraction=92<br>-XX:+UseCMSInitiatingOccupancyOnly<br>-XX:CMSBootstrapOccupancy=92<br>-xx:CMSWaitDuration=2000<br><span class="hljs-comment"># -verbose:gc</span><br>-XX:+PrintGCDetails<br>-XX:+PrintGCDateStamps<br>-Xloggc:./gc.log<br>-XX:+UseGCLogFileRotation<br>-XX:NumberOfGCLogFiles=1<br>-XX:GCLogFileSize=512M<br><br><span class="hljs-comment"># G1</span><br>-Xms200M<br>-Xmx200M<br>-XX:+UseG1GC<br>-XX:SurvivorRatio=8<br>-XX:MaxTenuringThreshold=1<br>-XX:+UnlockExperimentalVMOptions<br>-XX:G1MaxNewSizePercent=50<br>-XX:G1HeapRegionSize=4M<br>-XX:+PrintGC<br>-XX:+PrintGCDetails<br>-XX:+PrintGCDateStamps<br>-Xloggc:./gc.log<br><br></code></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.hollischuang.com/archives/308">https://www.hollischuang.com/archives/308</a><br><a href="https://www.cnblogs.com/chiangchou/p/jvm-4.html">https://www.cnblogs.com/chiangchou/p/jvm-4.html</a></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速文件共享分发的几个方式</title>
    <link href="/2018/03/29/quick-file-share/"/>
    <url>/2018/03/29/quick-file-share/</url>
    
    <content type="html"><![CDATA[<p>在办公环境下和同事之间互传文件是再正常不过的需求了，但当微信、企业微信等工具文件传输功能被限制的时候，问题就变的棘手。<br>下面分享几个小方法来互传分享文件。</p><span id="more"></span><h3 id="1、FileZilla"><a href="#1、FileZilla" class="headerlink" title="1、FileZilla"></a>1、FileZilla</h3><p>传统FTP方式，推荐FileZilla工具，既有服务端(Windows only)，又有客户端(All platforms)。</p><h3 id="2、Python"><a href="#2、Python" class="headerlink" title="2、Python"></a>2、Python</h3><p>注意python2和python3不同的模块，默认监听在<code>Serving HTTP on 0.0.0.0 port 8000</code></p><h5 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h5><p><code>python -m SimpleHTTPServer</code></p><h5 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h5><p><code>python -m http.server</code></p><h3 id="3、Golang"><a href="#3、Golang" class="headerlink" title="3、Golang"></a>3、Golang</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;flag&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> d = flag.String(<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;指定需要代理的文件目录&quot;</span>)<br>flag.Parse()<br>h := http.FileServer(http.Dir(*d))<br>fmt.Println(<span class="hljs-string">&quot;Serving HTTP on 0.0.0.0 port 10924 (http://0.0.0.0:10924/) ...&quot;</span>)<br>http.ListenAndServe(<span class="hljs-string">&quot;:10924&quot;</span>, h)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>使用：</p></blockquote><ol><li>Build: <code>go build ghttp.go</code></li><li>Help: <code>./ghttp.exe -h</code></li><li>Demo: <code>./ghttp.exe -d E:/workspaces/daily</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Python</tag>
      
      <tag>FileZilla</tag>
      
      <tag>SimpleHTTPServer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主机初始化的那些事儿</title>
    <link href="/2018/03/24/srv-initialize/"/>
    <url>/2018/03/24/srv-initialize/</url>
    
    <content type="html"><![CDATA[<p>集群中加入一个主机后，需要做的那些事儿</p><span id="more"></span><h3 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">parted /dev/vdb mklabel gpt mkpart 1 xfs 1 100%<br>mkfs.xfs /dev/vdb1<br><span class="hljs-built_in">mkdir</span> /new_disk<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;UUID=`blkid /dev/vdb1 | awk -F&#x27;&quot;</span><span class="hljs-string">&#x27; &#x27;</span>&#123;<span class="hljs-built_in">print</span> <span class="hljs-variable">$2</span>&#125;<span class="hljs-string">&#x27;` /new_disk xfs defaults 1 1&quot; &gt;&gt; /etc/fstab</span><br><span class="hljs-string">mount -a</span><br><span class="hljs-string">df -h</span><br></code></pre></td></tr></table></figure><h3 id="内核优化"><a href="#内核优化" class="headerlink" title="内核优化"></a>内核优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 内核参数优化</span><br>vim /etc/sysctl.conf<br>net.ipv4.tcp_timestamps = 1<br>net.ipv4.tcp_fin_timeout = 10<br>net.ipv4.tcp_tw_recycle = 1<br>net.ipv4.tcp_tw_reuse = 1<br>net.ipv4.tcp_syncookies = 1<br>net.ipv4.tcp_max_tw_buckets = 8000<br><span class="hljs-comment"># fs.file-max = 102400000</span><br>vm.max_map_count = 262144<br>vm.swappiness = 10<br>sysctl –p  <span class="hljs-comment"># 配置生效</span><br><br><span class="hljs-comment"># 文件描述符限制</span><br>vim /etc/security/limits.conf<br>* soft nofile 1024000<br>* hard nofile 2048000<br>*          soft    <span class="hljs-built_in">nproc</span>     1024000<br>*          hard    <span class="hljs-built_in">nproc</span>     2048000<br>root       soft    <span class="hljs-built_in">nproc</span>     unlimited<br><span class="hljs-built_in">ulimit</span> -Sn<br><span class="hljs-built_in">ulimit</span> -Hn<br><br><span class="hljs-comment"># history：</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;HISTTIMEFORMAT=&quot;%F %T `whoami`&quot;&#x27;</span> &gt;&gt; /etc/profile<br>sed -i <span class="hljs-string">&quot;s/HISTSIZE=1000/HISTSIZE=200/&quot;</span> /etc/profile<br><br><span class="hljs-comment"># sshd</span><br>sed -i <span class="hljs-string">&#x27;s/UseDNS yes/UseDNS no/g&#x27;</span> /etc/ssh/sshd_config<br>sed -i <span class="hljs-string">&#x27;s/UsePAM yes/UsePAM no/&#x27;</span> /etc/ssh/sshd_config<br><br><span class="hljs-comment"># nproc</span><br><span class="hljs-comment">## nproc是操作系统级别对每个用户创建的进程数的限制, 在Linux下运行多线程时, 每个线程的实现其实是一个轻量级的进程, 对应的术语是light weight process(LWP)。</span><br><span class="hljs-comment"># 查看所有用户创建的进程数,使用命令：</span><br>ps h -Led -o user | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -n<br><span class="hljs-comment"># 查看boer用户创建的进程数，使用命令:</span><br>ps -o nlwp,pid,lwp,args -u boer | <span class="hljs-built_in">sort</span> -n<br><br>vim /etc/security/limits.d/20-nproc.conf <span class="hljs-comment"># CentOS7</span><br>*          soft    <span class="hljs-built_in">nproc</span>     1024000<br>root       soft    <span class="hljs-built_in">nproc</span>     unlimited<br><br><span class="hljs-comment">##</span><br></code></pre></td></tr></table></figure><h3 id="监控、日志Agent"><a href="#监控、日志Agent" class="headerlink" title="监控、日志Agent"></a>监控、日志Agent</h3><ul><li>filebeat</li><li>zabbix/node_exporter</li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>parted</tag>
      
      <tag>kernel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL获取Largest表TopN</title>
    <link href="/2018/03/08/mysql-record-topN-tables/"/>
    <url>/2018/03/08/mysql-record-topN-tables/</url>
    
    <content type="html"><![CDATA[<p>获取数据库记录数/数据大小/索引大小排名前N的表</p><span id="more"></span><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>TABLE_SCHEMA <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;数据库&#x27;</span>,<br>TABLE_NAME <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;表名&#x27;</span>,<br>TABLE_ROWS <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;记录数&#x27;</span>,<br>TABLE_COMMENT <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;建表说明&#x27;</span>,<br><span class="hljs-keyword">TRUNCATE</span> ( DATA_LENGTH <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span>, <span class="hljs-number">2</span> ) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;数据容量(MB)&#x27;</span>,<br><span class="hljs-keyword">TRUNCATE</span> ( INDEX_LENGTH <span class="hljs-operator">/</span> <span class="hljs-number">1024</span> <span class="hljs-operator">/</span> <span class="hljs-number">1024</span>, <span class="hljs-number">2</span> ) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;索引容量(MB)&#x27;</span> <br><span class="hljs-keyword">FROM</span><br>information_schema.TABLES <br><span class="hljs-keyword">WHERE</span><br>TABLE_SCHEMA <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;meisoodev&#x27;</span> <br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span><br>TABLE_ROWS <span class="hljs-keyword">DESC</span> <br>LIMIT <span class="hljs-number">10</span>;<br></code></pre></td></tr></table></figure><ul><li><a href="https://dataedo.com/kb/query/mysql/list-10-largest-tables">https://dataedo.com/kb/query/mysql/list-10-largest-tables</a></li><li><a href="https://developer.aliyun.com/ask/283493">https://developer.aliyun.com/ask/283493</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>information_schema</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各种镜像源加速</title>
    <link href="/2018/02/16/mirror-speed/"/>
    <url>/2018/02/16/mirror-speed/</url>
    
    <content type="html"><![CDATA[<p>慢是不能够被接受的</p><span id="more"></span><h3 id="阿里云镜像站"><a href="#阿里云镜像站" class="headerlink" title="阿里云镜像站"></a>阿里云镜像站</h3><p><code>https://developer.aliyun.com/mirror/</code></p><h3 id="python-pip源"><a href="#python-pip源" class="headerlink" title="python pip源"></a>python pip源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># python3 编译安装依赖</span><br>yum install zlib-devel libffi-devel openssl-devel<br><br><span class="hljs-comment">## https://pip.pypa.io/en/stable/user_guide/#config-file</span><br><span class="hljs-comment"># 全局生效</span><br><span class="hljs-comment"># Like-Unix(Linux)</span><br>vim /etc/pip.conf<br><span class="hljs-comment"># macOS</span><br>vim /Library/Application Support/pip/pip.conf<br><span class="hljs-comment"># Windows</span><br>notepad C:\ProgramData\pip\pip.ini<br><span class="hljs-comment"># https://developer.aliyun.com/mirror/pypi</span><br><span class="hljs-comment">## 阿里云源</span><br>[global]<br>index-url = https://mirrors.aliyun.com/pypi/simple/<br><br>[install]<br>trusted-host=mirrors.aliyun.com<br></code></pre></td></tr></table></figure><h3 id="Go-proxy"><a href="#Go-proxy" class="headerlink" title="Go proxy"></a>Go proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Go 1.13 及以上（推荐）</span><br>go <span class="hljs-built_in">env</span> -w GO111MODULE=on<br>go <span class="hljs-built_in">env</span> -w GOPROXY=https://goproxy.cn,direct<br><span class="hljs-comment"># https://goproxy.io/zh/</span><br>go <span class="hljs-built_in">env</span> -w GO111MODULE=on<br>go <span class="hljs-built_in">env</span> -w GOPROXY=https://goproxy.io,direct<br><span class="hljs-comment"># go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct/</span><br></code></pre></td></tr></table></figure><h3 id="NodeJS-npm源"><a href="#NodeJS-npm源" class="headerlink" title="NodeJS npm源"></a>NodeJS npm源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br><span class="hljs-comment">### </span><br>npm config <span class="hljs-built_in">set</span> &lt;key&gt; &lt;value&gt;<br>npm config get [&lt;key&gt;]<br>npm config delete &lt;key&gt;<br>npm config list [--json]<br>npm config edit<br>npm <span class="hljs-built_in">set</span> &lt;key&gt; &lt;value&gt;<br>npm get [&lt;key&gt;]<br><br><br><span class="hljs-comment">### yarn</span><br>npm install yarn -g<br>yarn config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org/<br>yarn config get registry<br>yarn install<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pip</tag>
      
      <tag>goproxy</tag>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CLOSE_WAIT&amp;TIME_WAIT</title>
    <link href="/2018/01/18/closewait-timewait/"/>
    <url>/2018/01/18/closewait-timewait/</url>
    
    <content type="html"><![CDATA[<p>TCP的几种Wait状态</p><span id="more"></span><h3 id="一图胜千言"><a href="#一图胜千言" class="headerlink" title="一图胜千言"></a>一图胜千言</h3><p><img src="/img/tcp_hello.webp" alt="tcp_hello"><br><img src="/img/tcp_bye.webp" alt="tcp_bye"><br><img src="/img/tcp_state.webp" alt="tcp_state"></p><h3 id="TIME-WAIT-2msl"><a href="#TIME-WAIT-2msl" class="headerlink" title="TIME_WAIT (2msl)"></a>TIME_WAIT (2msl)</h3><ol><li>正常完成四次挥手</li><li>正常等待2msl后释放资源 (TCP机制)</li><li>服务端能做的 (打铁还须自身硬)</li></ol><ul><li>文件描述符ulimit -Hn</li><li>sysctl内核网络参数优化</li></ul><ol start="4"><li>问题的根源在客户端为什么大量请求(短连接)又快速断开？</li></ol><ul><li>秒杀搞活动？ # 短连接 -&gt; 长连接keepalive</li><li><strong>CC攻击？</strong> # 网关限流</li></ul><h3 id="CLOSE-WAIT"><a href="#CLOSE-WAIT" class="headerlink" title="CLOSE_WAIT"></a>CLOSE_WAIT</h3><ol><li>四次挥手未完成。</li><li>客户端关闭连接之后服务器程序没有进一步发出ack信号。四次挥手腰斩。</li><li>有可能就是客户端连接关闭之后，程序里没有检测到，或者程序压根就忘记了这个时候需要关闭连接，于是这个资源就一直被程序占着。 # 服务端程序bug。</li></ol><h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h3><p><a href="https://www.jianshu.com/p/9968b16b607e">https://www.jianshu.com/p/9968b16b607e</a></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TCP/IP</tag>
      
      <tag>TCP四次挥手</tag>
      
      <tag>CLOSE_WAIT</tag>
      
      <tag>TIME_WAIT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - 对比Python高阶函数之MapReduce</title>
    <link href="/2017/08/30/golang-func-mapreduce/"/>
    <url>/2017/08/30/golang-func-mapreduce/</url>
    
    <content type="html"><![CDATA[<p>如果你读过Google的那篇大名鼎鼎的论文<a href="https://research.google.com/archive/mapreduce-osdi04.pdf">“MapReduce: Simplified Data Processing on Large Clusters”</a>，你就能大概明白map/reduce的概念。</p><span id="more"></span><p><img src="https://for-boer-blog.oss-cn-beijing.aliyuncs.com/20201023172301.png?x-oss-process=style/blog-img-watermark"></p><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">maps</span><span class="hljs-params">(f <span class="hljs-keyword">func</span>(<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span>, nums []<span class="hljs-type">int</span>) []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">var</span> ret = <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-built_in">len</span>(nums))<br><span class="hljs-keyword">for</span> i, n := <span class="hljs-keyword">range</span> nums &#123;<br>ret[i] = f(n)<br>&#125;<br><span class="hljs-keyword">return</span> ret<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f</span><span class="hljs-params">(x <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> x + <span class="hljs-number">2</span><br>&#125;<br><br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>fmt.Println(maps(f, nums))<br><span class="hljs-comment">// [3 4 5 6 7]</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x + <span class="hljs-number">2</span>, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])<br><span class="hljs-comment"># 注意：在python3中map()函数返回map object，而非python2直接返回list对象</span><br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x + <span class="hljs-number">2</span>, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])) <span class="hljs-comment"># 转为list</span><br><span class="hljs-comment"># 3, 4, 5, 6, 7</span><br></code></pre></td></tr></table></figure><h3 id="Reduce"><a href="#Reduce" class="headerlink" title="Reduce"></a>Reduce</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">reduces</span><span class="hljs-params">(f <span class="hljs-keyword">func</span>(x, y <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span>, nums []<span class="hljs-type">int</span>) <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> _, n := <span class="hljs-keyword">range</span> nums &#123;<br>sum = f(sum, n)<br>&#125;<br><span class="hljs-keyword">return</span> sum<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f1</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> x + y<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f2</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> x*<span class="hljs-number">10</span> + y<br>&#125;<br><br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>fmt.Println(reduces(f1, nums))<br><span class="hljs-comment">// 15</span><br>fmt.Println(reduces(f2, nums))<br><span class="hljs-comment">// 12345</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><span class="hljs-comment"># 注意：在python3中reduce()函数已经不再是内置函数，而是放到了functools包下面</span><br>reduce(<span class="hljs-keyword">lambda</span> x, y: x + y, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])<br><span class="hljs-comment"># 15</span><br>reduce(<span class="hljs-keyword">lambda</span> x, y: x * <span class="hljs-number">10</span> + y, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])<br><span class="hljs-comment"># 12345</span><br></code></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017329367486080">https://www.liaoxuefeng.com/wiki/1016959663602400/1017329367486080</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Go</tag>
      
      <tag>MapReduce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - 对比Python-Dict之Map</title>
    <link href="/2017/08/24/golang-map-methods/"/>
    <url>/2017/08/24/golang-map-methods/</url>
    
    <content type="html"><![CDATA[<p>接上文<code>slice</code>方法，本文对比python中的<code>dict</code>实现<code>map</code>的方法</p><p>文末有<code>彩蛋</code>，送道面试题，请在评论区附上你的答案…</p><span id="more"></span><ul><li>dict.clear() 删除字典中所有元素</li><li>dict.copy() 返回字典(浅复制)的一个副本</li><li>dict.get(key,default=None) 对字典dict中的键key,返回它对应的值value，如果字典中不存在此键，则返回default 的值(注意，参数- default 的默认值为None)</li><li>dict.has_key(key) 如果键(key)在字典中存在，返回True，否则返回False</li><li>dict.items() 返回一个包含字典中(键, 值)对元组的列表</li><li>dict.keys() 返回一个包含字典中键的列表</li><li>dict.values() 返回一个包含字典中所有值的列表</li><li>dict.pop(key[, default]) 和方法get()相似，如果字典中key 键存在，删除并返回dict[key]，如果key 键不存在，且没有给出default 的值，引发KeyError 异常。</li></ul><h3 id="clear-方法"><a href="#clear-方法" class="headerlink" title="clear()方法"></a>clear()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">clear</span><span class="hljs-params">(ms <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;)</span></span> <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125; &#123;<br><span class="hljs-comment">// // Method - I , say book is name of map</span><br><span class="hljs-comment">// for k := range book &#123;</span><br><span class="hljs-comment">// delete(book, k)</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// // Method - II</span><br><span class="hljs-comment">// book = make(map[string]int)</span><br><br><span class="hljs-comment">// // Method - III</span><br><span class="hljs-comment">// book = map[string]int&#123;&#125;</span><br>ms = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;)<br><span class="hljs-keyword">return</span> ms<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="copy-方法"><a href="#copy-方法" class="headerlink" title="copy()方法"></a>copy()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">copy</span><span class="hljs-params">(dst, src <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;)</span></span> <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125; &#123;<br><span class="hljs-keyword">for</span> k, v := <span class="hljs-keyword">range</span> src &#123;<br>dst[k] = v<br>&#125;<br><span class="hljs-keyword">return</span> dst<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="haskey-方法"><a href="#haskey-方法" class="headerlink" title="haskey()方法"></a>haskey()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">haskey</span><span class="hljs-params">(ms <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;, key <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br><span class="hljs-keyword">for</span> k := <span class="hljs-keyword">range</span> ms &#123;<br><span class="hljs-keyword">if</span> k == key &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="keys-方法"><a href="#keys-方法" class="headerlink" title="keys()方法"></a>keys()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">keys</span><span class="hljs-params">(ms <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;)</span></span> []<span class="hljs-type">string</span> &#123;<br><span class="hljs-keyword">var</span> keys = []<span class="hljs-type">string</span>&#123;&#125;<br><span class="hljs-keyword">for</span> k := <span class="hljs-keyword">range</span> ms &#123;<br>keys = <span class="hljs-built_in">append</span>(keys, k)<br>&#125;<br><span class="hljs-keyword">return</span> keys<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="values-方法"><a href="#values-方法" class="headerlink" title="values()方法"></a>values()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">values</span><span class="hljs-params">(ms <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;)</span></span> []<span class="hljs-keyword">interface</span>&#123;&#125; &#123;<br><span class="hljs-keyword">var</span> values = []<span class="hljs-keyword">interface</span>&#123;&#125;&#123;&#125;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> ms &#123;<br>values = <span class="hljs-built_in">append</span>(values, v)<br>&#125;<br><span class="hljs-keyword">return</span> values<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="pop-方法"><a href="#pop-方法" class="headerlink" title="pop()方法"></a>pop()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">pop</span><span class="hljs-params">(ms <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-keyword">interface</span>&#123;&#125;, key <span class="hljs-type">string</span>)</span></span> <span class="hljs-keyword">interface</span>&#123;&#125; &#123;<br>v := ms[key]<br><span class="hljs-keyword">if</span> v != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">delete</span>(ms, key)<br>&#125;<br><span class="hljs-keyword">return</span> v<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">calc</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>fmt.Println(x, y, x+y)<br><span class="hljs-keyword">return</span> x + y<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">run</span><span class="hljs-params">()</span></span> &#123;<br>a := <span class="hljs-number">1</span><br>b := <span class="hljs-number">2</span><br><span class="hljs-keyword">defer</span> calc(a, calc(a, b))<br>a = <span class="hljs-number">0</span><br><span class="hljs-keyword">defer</span> calc(a, calc(a, b))<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Go</tag>
      
      <tag>map</tag>
      
      <tag>hash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - 对比Python-List之Slice</title>
    <link href="/2017/08/18/golang-slice-methods/"/>
    <url>/2017/08/18/golang-slice-methods/</url>
    
    <content type="html"><![CDATA[<p>Python中List列表的使用很方便, 内置电池插上就用, 堪比南孚聚能环</p><p>相比之下, Golang中Slice提供的内置方法就捉襟见肘了</p><p>然而, 习惯了Python动态语言提供的各种便利的内置方法, 对于Golang的静态语言, 自己实现这些方法反而不是那么信手拈来</p><p>下面我们通过对比Python来实现Golang中各个方法</p><span id="more"></span><p>方法汇总:</p><ul><li><code>clear</code></li><li><code>copy</code></li><li><code>append</code></li><li><code>extend</code></li><li><code>pop</code></li><li><code>index</code></li><li><code>count</code></li><li><code>insert</code></li><li><code>remove</code></li><li><code>reverse</code>/<code>reversed</code></li><li><code>sort</code>/<code>sorted</code></li><li><code>len</code></li><li><code>max</code>/<code>min</code></li><li><code>contains</code></li><li><code>join</code></li></ul><h3 id="clear-方法"><a href="#clear-方法" class="headerlink" title="clear()方法"></a>clear()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">clear</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> lst[:<span class="hljs-number">0</span>]<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>nums = clear(nums)<br>fmt.Println(nums)<br><span class="hljs-comment">// []</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">L = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>L.clear()<br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># []</span><br></code></pre></td></tr></table></figure><h3 id="copy-方法"><a href="#copy-方法" class="headerlink" title="copy()方法"></a>copy()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myCopy</span><span class="hljs-params">(dst, src []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">copy</span>(dst, src)<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br><span class="hljs-keyword">var</span> mums = <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-built_in">len</span>(nums), <span class="hljs-built_in">cap</span>(nums))<br>_ = myCopy(mums, nums)<br>fmt.Println(mums)<br><span class="hljs-comment">// [1 2 3 4 5]</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">L1 = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>L2 = L1.copy()<br><span class="hljs-built_in">print</span>(L2)<br><span class="hljs-comment"># [1,2,3,4]</span><br></code></pre></td></tr></table></figure><h3 id="append-方法"><a href="#append-方法" class="headerlink" title="append()方法"></a>append()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myAppend</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el ...<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">append</span>(lst, el...)<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>nums = myAppend(nums, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>)<br>fmt.Println(nums)<br><span class="hljs-comment">// [1 2 3 4 5 6 7 8]</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">L = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>L.append(<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># [1, 2, 3, 4]</span><br>L.appned([<span class="hljs-number">5</span>, <span class="hljs-number">6</span>])<br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># [1, 2, 3, 4, [5, 6]]</span><br></code></pre></td></tr></table></figure><h3 id="extend-方法"><a href="#extend-方法" class="headerlink" title="extend()方法"></a>extend()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">extend</span><span class="hljs-params">(dst, src []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">append</span>(dst, src...)<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>fmt.Printf(<span class="hljs-string">&quot;%v, %v, %v, %p\n&quot;</span>, nums, <span class="hljs-built_in">len</span>(nums), <span class="hljs-built_in">cap</span>(nums), nums)<br><span class="hljs-keyword">var</span> mums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>&#125;<br>nums = extend(nums, mums)<br>fmt.Println(nums)<br>fmt.Printf(<span class="hljs-string">&quot;%v, %v, %v, %p\n&quot;</span>, nums, <span class="hljs-built_in">len</span>(nums), <span class="hljs-built_in">cap</span>(nums), nums)<br><span class="hljs-comment">// [1 2 3 4 5], 5, 5, 0xc0000b4090</span><br><span class="hljs-comment">// [1 2 3 4 5 6 7 8]</span><br><span class="hljs-comment">// [1 2 3 4 5 6 7 8], 8, 10, 0xc0000a40f0</span><br><span class="hljs-comment">// !!! 注意两次打印Slice的len, cap, 内存地址的不同。</span><br><span class="hljs-comment">// 这也说明了Slice与Array的对应关系: </span><br><span class="hljs-comment">// 当前Array不能满足Slice容量时，会重新分配内存空间并复制数据</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">L = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>A = [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]<br>L.extend(A)<br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># [1,2,3,4,5,6]</span><br><span class="hljs-comment"># !!! 该方法返回值为None，修改的是原列表</span><br></code></pre></td></tr></table></figure><h3 id="pop-方法"><a href="#pop-方法" class="headerlink" title="pop()方法"></a>pop()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">pop</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> lst[:<span class="hljs-built_in">len</span>(lst)<span class="hljs-number">-1</span>]<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>nums = pop(nums)<br>fmt.Println(nums)<br><span class="hljs-comment">// [1 2 3 4]</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myPop</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, i <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">append</span>(lst[:i], lst[i+<span class="hljs-number">1</span>:]...)<br>&#125;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br>nums = myPop(nums, <span class="hljs-number">2</span>)<br>fmt.Println(nums)<br><span class="hljs-comment">// [1 2 4 5]</span><br></code></pre></td></tr></table></figure><p>VS</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">L = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><span class="hljs-built_in">print</span>(L.pop())<br><span class="hljs-comment"># 5</span><br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># [1,2,3,4]</span><br>L.pop(<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(L)<br><span class="hljs-comment"># [1,3,4]</span><br></code></pre></td></tr></table></figure><h3 id="index-方法"><a href="#index-方法" class="headerlink" title="index()方法"></a>index()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">index</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">for</span> i, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v == el &#123;<br><span class="hljs-keyword">return</span> i<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="count-方法"><a href="#count-方法" class="headerlink" title="count()方法"></a>count()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">count</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>maps := <span class="hljs-keyword">map</span>[<span class="hljs-type">int</span>]<span class="hljs-type">int</span>&#123;&#125;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v == el &#123;<br>maps[el]++<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> maps[el]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="insert-方法"><a href="#insert-方法" class="headerlink" title="insert()方法"></a>insert()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">insert</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el, i <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br>lst = <span class="hljs-built_in">append</span>(lst[:i+<span class="hljs-number">1</span>], lst[i:]...)<br>lst[i] = el<br><span class="hljs-keyword">return</span> lst<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="remove-方法"><a href="#remove-方法" class="headerlink" title="remove()方法"></a>remove()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">remove</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el <span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">for</span> i, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v == el &#123;<br>lst = <span class="hljs-built_in">append</span>(lst[:i], lst[i+<span class="hljs-number">1</span>:]...)<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> lst<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="reverse-方法"><a href="#reverse-方法" class="headerlink" title="reverse()方法"></a>reverse()方法</h3><blockquote><p><a href="/2017/08/16/golang-slice-reverse/">更多方法, 请参考…</a></p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">reverse</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br>tmp := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-built_in">len</span>(lst), <span class="hljs-built_in">cap</span>(lst))<br><span class="hljs-keyword">for</span> i := <span class="hljs-keyword">range</span> lst &#123;<br>tmp[i] = lst[<span class="hljs-built_in">len</span>(lst)-i<span class="hljs-number">-1</span>]<br>&#125;<br><span class="hljs-keyword">return</span> tmp<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="sort-方法"><a href="#sort-方法" class="headerlink" title="sort()方法"></a>sort()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">mySort</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> []<span class="hljs-type">int</span> &#123;<br><span class="hljs-comment">// sort.Ints(lst)</span><br>sort.Sort(sort.Reverse(sort.IntSlice(lst)))<br><span class="hljs-keyword">return</span> lst<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="len-方法"><a href="#len-方法" class="headerlink" title="len()方法"></a>len()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myLen</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(lst)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="max-方法"><a href="#max-方法" class="headerlink" title="max()方法"></a>max()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myMax</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>t := lst[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v &gt; t &#123;<br>t = v<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> t<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="min-方法"><a href="#min-方法" class="headerlink" title="min()方法"></a>min()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">myMin</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>t := lst[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v &lt; t &#123;<br>t = v<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> t<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="contains-方法-gt-对比JAVA"><a href="#contains-方法-gt-对比JAVA" class="headerlink" title="contains()方法 -&gt; 对比JAVA"></a>contains()方法 -&gt; 对比JAVA</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">contains</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>, el <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br><span class="hljs-keyword">for</span> _, v := <span class="hljs-keyword">range</span> lst &#123;<br><span class="hljs-keyword">if</span> v == el &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="join-方法"><a href="#join-方法" class="headerlink" title="join()方法"></a>join()方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">join</span><span class="hljs-params">(nums []<span class="hljs-type">int</span>)</span></span> <span class="hljs-type">string</span> &#123;<br><span class="hljs-keyword">var</span> numsText = []<span class="hljs-type">string</span>&#123;&#125;<br><span class="hljs-keyword">for</span> _, n := <span class="hljs-keyword">range</span> nums &#123;<br>text := strconv.Itoa(n)<br>numsText = <span class="hljs-built_in">append</span>(numsText, text)<br>&#125;<br>res := strings.Join(numsText, <span class="hljs-string">&quot;+&quot;</span>)<br><span class="hljs-keyword">return</span> res<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><p><a href="https://blog.golang.org/slices-intro">Go Slices: usage and internals</a><br><a href="https://www.jianshu.com/p/50da60d54a14">python list中的方法和函数</a></p>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Python</tag>
      
      <tag>Slice</tag>
      
      <tag>List</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang - 切片逆序遍历的几种方法</title>
    <link href="/2017/08/16/golang-slice-reverse/"/>
    <url>/2017/08/16/golang-slice-reverse/</url>
    
    <content type="html"><![CDATA[<p>本文记录几种<code>slice</code>遍历的方法，涉及知识点有：<code>slice</code>, <code>for</code>, <code>range</code>, <code>defer</code>, <code>闭包(closure)</code>, <code>channel</code></p><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// main.go</span><br><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>t()<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">t</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> nums = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br><span class="hljs-comment">// 顺序1</span><br><span class="hljs-keyword">for</span> _, n := <span class="hljs-keyword">range</span> nums &#123;<br>fmt.Println(n)<br>&#125;<br><span class="hljs-comment">// 顺序2, 一般不这样吧</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">len</span>(nums); i++ &#123;<br>fmt.Println(nums[i])<br>&#125;<br><br><span class="hljs-comment">// 逆序1, 普通程序员</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-built_in">len</span>(nums) - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i-- &#123;<br>fmt.Println(nums[i])<br>&#125;<br><span class="hljs-comment">// 逆序2, nice简洁、赞</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-keyword">range</span> nums &#123;<br>fmt.Println(nums[<span class="hljs-built_in">len</span>(nums)-i<span class="hljs-number">-1</span>])<br>&#125;<br><span class="hljs-comment">// 逆序3, channel实现</span><br><span class="hljs-keyword">for</span> n := <span class="hljs-keyword">range</span> reverse(nums) &#123;<br>fmt.Println(n)<br>&#125;<br><span class="hljs-comment">// 逆序4, defer实现, 不是一般程序员</span><br><span class="hljs-keyword">for</span> _, n := <span class="hljs-keyword">range</span> nums &#123;<br><span class="hljs-keyword">defer</span> fmt.Println(n)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">reverse</span><span class="hljs-params">(lst []<span class="hljs-type">int</span>)</span></span> <span class="hljs-keyword">chan</span> <span class="hljs-type">int</span> &#123;<br>ret := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">chan</span> <span class="hljs-type">int</span>)<br><span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> i := <span class="hljs-keyword">range</span> lst &#123;<br>ret &lt;- lst[<span class="hljs-built_in">len</span>(lst)<span class="hljs-number">-1</span>-i]<br>&#125;<br><span class="hljs-built_in">close</span>(ret)<br>&#125;()<br><span class="hljs-keyword">return</span> ret<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Golang</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Go</tag>
      
      <tag>Slice</tag>
      
      <tag>reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的Windows终端</title>
    <link href="/2016/09/24/windows-terminal-msys2/"/>
    <url>/2016/09/24/windows-terminal-msys2/</url>
    
    <content type="html"><![CDATA[<p>Terminal - 工欲善其事，必先利其器</p><span id="more"></span><p>现在推荐git-bash 简单才是王道，不用任何配置</p><h2 id="必备工具"><a href="#必备工具" class="headerlink" title="必备工具"></a>必备工具</h2><ul><li>mycli</li><li>iredis</li></ul><p>mycli的坑 <a href="https://blog.csdn.net/banerye/article/details/115857927">https://blog.csdn.net/banerye/article/details/115857927</a></p><h5 id="Alias"><a href="#Alias" class="headerlink" title="Alias"></a>Alias</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.bash_profile<br><span class="hljs-comment"># generated by Git for Windows</span><br><span class="hljs-built_in">test</span> -f ~/.profile &amp;&amp; . ~/.profile<br><span class="hljs-built_in">test</span> -f ~/.bashrc &amp;&amp; . ~/.bashrc<br><span class="hljs-comment">## Add by boer.</span><br><span class="hljs-built_in">alias</span> mysql=<span class="hljs-string">&#x27;winpty mycli&#x27;</span><br><span class="hljs-built_in">alias</span> redis-cli=<span class="hljs-string">&#x27;winpty iredis&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="VSCode配置"><a href="#VSCode配置" class="headerlink" title="VSCode配置"></a>VSCode配置</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;files.eol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;terminal.integrated.profiles.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;Boer Bash&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/Program Files/PortableGit/bin/bash.exe&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;-l&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;-i&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;terminal.integrated.defaultProfile.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Boer Bash&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;http.proxy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://127.0.0.1:10809&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;http.proxyStrictSSL&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;workbench.startupEditor&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;workbench.iconTheme&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vscode-icons&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;redhat.telemetry.enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;workbench.editor.untitled.hint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hidden&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;vs-kubernetes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;vscode-kubernetes.kubectl-path.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C:\\Users\\boer\\.vs-kubernetes\\tools\\kubectl\\kubectl.exe&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vscode-kubernetes.minikube-path.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C:\\Users\\boer\\.vs-kubernetes\\tools\\minikube\\windows-amd64\\minikube.exe&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vscode-kubernetes.helm-path.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;C:\\Users\\boer\\.vs-kubernetes\\tools\\helm\\windows-amd64\\helm.exe&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;python.formatting.provider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yapf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;python.formatting.yapfPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/Program Files/venv/Scripts/yapf.exe&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.fontSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;files.exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;.venv&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><hr><h3 id="1、安装Windows-Terminal"><a href="#1、安装Windows-Terminal" class="headerlink" title="1、安装Windows Terminal"></a>1、安装Windows Terminal</h3><p><a href="https://aka.ms/terminal">https://aka.ms/terminal</a></p><h3 id="2、安装配置MSYS2"><a href="#2、安装配置MSYS2" class="headerlink" title="2、安装配置MSYS2"></a>2、安装配置MSYS2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">MSYS2是什么<br>https://www.msys2.org/wiki/How-does-MSYS2-differ-from-Cygwin/<br><span class="hljs-comment"># pacman 源配置</span><br>https://mirrors.tuna.tsinghua.edu.cn/help/msys2/<br>nano /etc/pacman.d/mirrorlist.mingw64<br>ctrl + x -&gt; y/n<br><span class="hljs-comment"># 刷新软件包数据</span><br>pacman -Sy<br><span class="hljs-comment"># 安装必备软件包</span><br>pacman -S vim<br>pacman -S gcc<br><span class="hljs-comment"># 变更Home目录</span><br>vim /etc/nsswitch.conf<br><span class="hljs-comment"># https://stackoverflow.com/questions/33942924/how-to-change-home-directory-and-start-directory-on-msys2</span><br>db_home: windows<br></code></pre></td></tr></table></figure><h3 id="3、安装oh-my-zsh"><a href="#3、安装oh-my-zsh" class="headerlink" title="3、安装oh-my-zsh"></a>3、安装oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://ohmyz.sh/#install</span><br><span class="hljs-comment"># 注意科学上网</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><h3 id="4、Windows-Terminal集成MSYS2"><a href="#4、Windows-Terminal集成MSYS2" class="headerlink" title="4、Windows Terminal集成MSYS2"></a>4、Windows Terminal集成MSYS2</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;defaultProfile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&#123;2c4de342-38b7-51cf-b940-2309a0970924&#125;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;copyOnSelect&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;profiles&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;defaults&quot;</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-comment">// Put settings here that you want to apply to all profiles.</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;list&quot;</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;guid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&#123;2c4de342-38b7-51cf-b940-2309a0970924&#125;&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MSYS2&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;padding&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0, 0, 0, 0&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;snapOnInput&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;closeOnExit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;graceful&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;cursorShape&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;filledBox&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;commandline&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/msys64/msys2_shell.cmd -full-path -defterm -here -no-start -mingw64 -shell zsh&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/msys64/msys2.ico&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;hidden&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>参数解析<br><code>D:/msys64/msys2_shell.cmd -full-path -defterm -here -no-start -mingw64 -shell zsh</code></p></blockquote><ul><li>-full-path: Windows环境变量</li><li>-shell: 指定启动shell<blockquote><p>具体可以参考msys2安装目录下msys2_shell.cmd、msys2.ini两个文件</p></blockquote></li></ul><h3 id="5、VSCode集成"><a href="#5、VSCode集成" class="headerlink" title="5、VSCode集成"></a>5、VSCode集成</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;terminal.integrated.shell.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;D:/msys64/usr/bin/zsh.exe&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;terminal.integrated.env.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;MSYSTEM&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;MINGW64&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;CHERE_INVOKING&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;MSYS2_PATH_TYPE&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;inherit&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;terminal.integrated.shellArgs.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;-l&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;-i&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br># python虚拟环境在zsh环境下不能自动激活 @TODO<br></code></pre></td></tr></table></figure><h3 id="6、附录-参考"><a href="#6、附录-参考" class="headerlink" title="6、附录|参考"></a>6、附录|参考</h3><p><a href="https://stackoverflow.com/questions/45404631/msys2-not-finding-windows-programs-despite-msys2-path-type-inherit">https://stackoverflow.com/questions/45404631/msys2-not-finding-windows-programs-despite-msys2-path-type-inherit</a></p>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Terminal</tag>
      
      <tag>MSYS2</tag>
      
      <tag>Oh-My-ZSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RPM包制作工具FPM介绍</title>
    <link href="/2016/07/07/fpm-rpm-build/"/>
    <url>/2016/07/07/fpm-rpm-build/</url>
    
    <content type="html"><![CDATA[<p>本文记录rpm包制作工具<a href="https://github.com/jordansissel/fpm">fpm</a>的使用笔记，分别记录了制作<code>filebeat</code>, <code>osquery</code>, <code>fastdfs</code>包的过程。</p><span id="more"></span><h3 id="filebeat7"><a href="#filebeat7" class="headerlink" title="filebeat7"></a>filebeat7</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cd tmp_install;rpm2cpio ../filebeat-5.5.2-x86_64.rpm | cpio -div  # 解压rpm包</span><br><span class="hljs-comment"># -p NAME-VERSION-ARCH.rpm \</span><br><br>hostname Boer-RPM<br><br>fpm -s <span class="hljs-built_in">dir</span> -t rpm -n boer-filebeat -v 7.1.1 \<br>--verbose --iteration 1 \<br>-m boer@boer.xyz \<br>--vendor <span class="hljs-string">&quot;Boer RPM&quot;</span> \<br>--after-install after_install.sh \<br>-C tmp_install .<br><br>hostnamectl set-hostname VM_140_39<br><br>after_install.sh<br>IP=`ip -4 route get 8.8.8.8 | awk <span class="hljs-string">&#x27;&#123;print $7&#125;&#x27;</span> | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span>`<br><span class="hljs-comment"># IP=$(grep IPADDR /etc/sysconfig/network-scripts/ifcfg-bond?|cut -d &#x27;=&#x27; -f 2)</span><br>sed -i <span class="hljs-string">&quot;s/ipv4address/<span class="hljs-variable">$IP</span>/&quot;</span> /etc/filebeat7/filebeat.yml<br>ver=`<span class="hljs-built_in">cat</span> /etc/redhat-release`<br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$ver</span> =~ <span class="hljs-string">&quot;release 7&quot;</span> ]];<span class="hljs-keyword">then</span><br>  /usr/bin/systemctl daemon-reload<br>  /usr/bin/systemctl start filebeat7<br>  /usr/bin/systemctl <span class="hljs-built_in">enable</span> filebeat7<br><span class="hljs-keyword">else</span><br>  /sbin/chkconfig filebeat7 on<br>  service filebeat7 start<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h3 id="osquery"><a href="#osquery" class="headerlink" title="osquery"></a>osquery</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">fpm -s <span class="hljs-built_in">dir</span> -t rpm -n osquery -v 3.3.2 -m boer@boer.xyz \<br>-p NAME-VERSION-ARCH.rpm \<br>--after-install after_install.sh \<br>--after-remove after_remove.sh \<br>-C tmp_install \<br>.<br><br>after_install.sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;export PATH=$PATH:/opt/osquery/usr/bin #deltag:uuid:c99326b5-2b9d-401f-87fb-b3b7cedcf3d5&#x27;</span> &gt;&gt; /etc/profile<br><span class="hljs-built_in">source</span> /etc/profile<br><br>after_remove.sh<br><span class="hljs-built_in">rm</span> -rf /opt/osquery<br>sed -i <span class="hljs-string">&#x27;/^export.*\#deltag:uuid:c99326b5-2b9d-401f-87fb-b3b7cedcf3d5/d&#x27;</span> /etc/profile<br><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><h3 id="fastdfs"><a href="#fastdfs" class="headerlink" title="fastdfs"></a>fastdfs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># libfastcommon</span><br>./make.sh<br>./make.sh install DESTDIR=../tmp_install<br>fpm -s <span class="hljs-built_in">dir</span> -t rpm -n libfastcommon -v 1.0.7 -C tmp_install usr<br><span class="hljs-comment"># FastDFS</span><br>vim make.sh<br>DESTDIR=/srv/boer/fpm_rpm/fastdfs/FastDFS/tmp_install<br>./make.sh<br>./make.sh install<br>fpm -s <span class="hljs-built_in">dir</span> -t rpm -n fastdfs -v 5.0.8 -d <span class="hljs-string">&#x27;libfastcommon&#x27;</span> -C tmp_install .<br><span class="hljs-comment"># nginx</span><br>./configure --prefix=/opt/nginx --sbin-path=/opt/nginx/sbin/nginx --conf-path=/opt/nginx/conf/nginx.conf --error-log-path=/home/finance/Logs/nginx/error.log --http-log-path=/home/finance/Logs/nginx/access.log --pid-path=/opt/nginx/var/nginx.pid --lock-path=/opt/nginx/var/nginx.lock --http-client-body-temp-path=/dev/shm/nginx_temp/client_body --http-proxy-temp-path=/dev/shm/nginx_temp/proxy --http-fastcgi-temp-path=/dev/shm/nginx_temp/fastcgi --user=finance --group=finance --with-cpu-opt=pentium4F --without-select_module --without-poll_module --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-http_stub_status_module --without-http_ssi_module --without-http_userid_module --without-http_ssi_module --without-http_userid_module --without-http_geo_module --without-http_map_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --with-http_ssl_module --add-module=../fastdfs-nginx-module/src<br>make<br>make install DESTDIR=/srv/boer/fpm_rpm/fastdfs/nginx-1.12.0/tmp_install<br>fpm -s <span class="hljs-built_in">dir</span> -t rpm -n nginx-with-fastdfs -v 1.12.0 -C tmp_install .<br></code></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><h5 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=***<br>make install --prefix=***<br>make install DESTDIR=***<br></code></pre></td></tr></table></figure><h5 id="A"><a href="#A" class="headerlink" title="A"></a>A</h5><p>Number 2 is simply an error as far as I know.</p><p>Number 1 determines where the package will go when it is installed, and where it will look for its associated files when it is run. It’s what you should use if you’re just compiling something for use on a single host.</p><p>Number 3 is for installing to a temporary directory which is not where the package will be run from. For example this is used when building deb packages. The person building the package doesn’t actually install everything into its final place on his own system. He may have a different version installed already and not want to disturb it, or he may not even be root. So he uses configure –prefix=/usr so the program will expect to be installed in /usr when it runs, then make install DESTDIR=debian/tmp to actually create the directory structure.</p><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://github.com/jordansissel/fpm">https://github.com/jordansissel/fpm</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RPM</tag>
      
      <tag>FPM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP、WAF、Nginx</title>
    <link href="/2016/03/24/nginx-http/"/>
    <url>/2016/03/24/nginx-http/</url>
    
    <content type="html"><![CDATA[<p>Nginx $uri $request_uri $request_filename 与 location(root/alias)</p><span id="more"></span><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">浏览器请求 <span class="hljs-regexp">/scanQRCodePayPark/</span><br><span class="hljs-variable">$uri</span> <span class="hljs-variable">$request_uri</span> <span class="hljs-variable">$request_filename</span><br><span class="hljs-regexp">/scanQRCodePayPark/i</span>ndex.html <span class="hljs-regexp">/scanQRCodePayPark/</span> <span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>scanQRCodePayPark/index.html<br><br>浏览器请求 <span class="hljs-regexp">/scanQRCodePayPark/i</span>ndex.html<br><span class="hljs-variable">$uri</span> <span class="hljs-variable">$request_uri</span> <span class="hljs-variable">$request_filename</span><br><span class="hljs-regexp">/scanQRCodePayPark/i</span>ndex.html <span class="hljs-regexp">/scanQRCodePayPark/i</span>ndex.html <span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>scanQRCodePayPark/index.html<br><br>浏览器请求 <span class="hljs-regexp">/scanQRCodePayPark/</span>?qs=<span class="hljs-number">123</span><span class="hljs-comment">#/ # querystring 与 锚点Anchor</span><br><span class="hljs-variable">$uri</span> <span class="hljs-variable">$request_uri</span> <span class="hljs-variable">$request_filename</span><br><span class="hljs-regexp">/scanQRCodePayPark/i</span>ndex.html <span class="hljs-regexp">/scanQRCodePayPark/</span>?qs=<span class="hljs-number">123</span> <span class="hljs-regexp">/home/</span>www<span class="hljs-regexp">/html/</span>scanQRCodePayPark/index.html<br></code></pre></td></tr></table></figure><h3 id="vuejs-nginx-config"><a href="#vuejs-nginx-config" class="headerlink" title="vuejs nginx config"></a>vuejs nginx config</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>  listen       80;<br>  server_name  www.boer.xyz;<br>  location / &#123;<br>    root /home/www/html;<br>    index  index.html index.htm;<br>    try_files $uri $uri/ /index.html;<br>    if ($uri ~ .*\.(html|htm)$) &#123;<br>      add_header Cache-Control no-cache;<br>      add_header X-Boer-Define love-boer;<br>    &#125;<br>  &#125;<br>  location ~ .*\.(html|htm)$ &#123;<br>    root /home/www/html;<br>    add_header Cache-Control no-cache;<br>    add_header X-Boer-Define love-boer;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="nginx-json-log"><a href="#nginx-json-log" class="headerlink" title="nginx json log"></a>nginx json log</h3><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs julia">log_format json_combined escape=json<br>  <span class="hljs-string">&#x27;&#123;&#x27;</span><br>    &#x27;<span class="hljs-string">&quot;time_local&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$time_local</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;remote_addr&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$remote_addr</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;remote_user&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$remote_user</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;request&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$request</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;<span class="hljs-variable">$status</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;body_bytes_sent&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$body_bytes_sent</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;request_time&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$request_time</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;http_referrer&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_referer</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;http_user_agent&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_user_agent</span>&quot;</span>,&#x27;<br>    &#x27;<span class="hljs-string">&quot;http_x_forwarded_for&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_x_forwarded_for</span>&quot;</span>&#x27;<br>  <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>access_log  /var/log/nginx/access.log  json_combined;<br></code></pre></td></tr></table></figure><h3 id="backend-http-ws-https-wss-config"><a href="#backend-http-ws-https-wss-config" class="headerlink" title="backend http-ws,https-wss config"></a>backend http-ws,https-wss config</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs conf">map $http_upgrade $connection_upgrade &#123;<br>    default upgrade;<br>    &#x27;&#x27; close;<br>&#125;<br>upstream backend &#123;<br>    server 10.10.253.16:8090 weight=5;<br>&#125;<br>server &#123;<br>    listen       80;<br>    listen       443 ssl;<br>    server_name  waf.boer.xyz;<br><br>    ## http://nginx.org/en/docs/http/ngx_http_ssl_module.html<br>    ssl_certificate      /etc/nginx/ssl/waf.boer.xyz/cert.pem;<br>    ssl_certificate_key  /etc/nginx/ssl/waf.boer.xyz/key.pem;<br>    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;<br>    ssl_ciphers          HIGH:!aNULL:!MD5;<br>    ssl_prefer_server_ciphers on;<br>    ssl_session_timeout  5m;<br>    ssl_session_cache shared:SSL:10m;<br><br>    access_log  /var/log/nginx/$server_name.access.log  json_combined;<br><br>    location / &#123;<br>        proxy_pass http://backend;<br>        proxy_set_header Host $host;<br>        proxy_set_header X-Real-IP $remote_addr;<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>        proxy_http_version 1.1;<br>        proxy_set_header Upgrade $http_upgrade;<br>        proxy_set_header Connection &quot;Upgrade&quot;;<br>    &#125;<br>&#125;<br><br>; 1、打包地址 VUE_APP_PUBLIC_PATH = &#x27;/&#x27;<br>; 2、接口地址 VUE_APP_BASE_API = &#x27;//api.boer.xyz&#x27; # 相对协议URL<br>; 3、Websocket地址<br>; initWebSocket() &#123;<br>;   let url = window.location.href<br>;   let wsuri;<br>;   if (url.indexOf(&#x27;https://iot.boer.xyz&#x27;) !== -1) &#123;<br>;     wsuri = &quot;wss://api.boer.xyz/inoutRecord/ws?userId=&quot; + getUserId();<br>;   &#125; else if (url.indexOf(&#x27;http://iot.boer.xyz&#x27;) !== -1) &#123;<br>;     wsuri = &quot;ws://api.boer.xyz/inoutRecord/ws?userId=&quot; + getUserId();<br>;   &#125;else &#123;<br>;     wsuri = &quot;ws://api.boer.xyz/inoutRecord/ws?userId=&quot; + getUserId();<br>;   &#125;<br>;   this.websock = new WebSocket(wsuri);<br>;   this.websock.onmessage = this.websocketonmessage;<br>;   this.websock.onopen = this.websocketonopen;<br>;   this.websock.onerror = this.websocketonerror;<br>;   this.websock.onclose = this.websocketclose;<br>; &#125;<br></code></pre></td></tr></table></figure><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#location">http://nginx.org/en/docs/http/ngx_http_core_module.html#location</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching</a></li><li><a href="https://github.com/loveshell/ngx_lua_waf">https://github.com/loveshell/ngx_lua_waf</a></li><li><a href="https://github.com/unixhot/waf">https://github.com/unixhot/waf</a></li><li><a href="https://github.com/starjun/openstar/wiki">https://github.com/starjun/openstar/wiki</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nginx</tag>
      
      <tag>Websocket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使终端提示符更清晰</title>
    <link href="/2015/08/24/clear-bash-ps1-prompt/"/>
    <url>/2015/08/24/clear-bash-ps1-prompt/</url>
    
    <content type="html"><![CDATA[<p>作为一名运维工程师，很多时候Xshell会同时打开</p><ul><li>运维环境</li><li>测试环境</li><li>生产环境</li></ul><p>如果没有清晰、醒目的终端提示符，很容易在多个环境间来回切换误操作，导致生产事故等。</p><p>本着对生产环境的敬畏心，你也应该使终端提示符更清晰。</p><span id="more"></span><h3 id="终端提示符"><a href="#终端提示符" class="headerlink" title="终端提示符"></a>终端提示符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://ezprompt.net/</span><br>vim /etc/profile.d/ps1.sh<br><br>PS1=<span class="hljs-string">&quot;[\u@\[\e[31m\][生产]\[\e[m\]\h \w]\\$ &quot;</span><br>PS1=<span class="hljs-string">&quot;[\u@\[\e[32m\][测试]\[\e[m\]\h \w]\\$ &quot;</span><br>PS1=<span class="hljs-string">&quot;[\u@\[\e[33m\][预生产]\[\e[m\]\h \w]\\$ &quot;</span><br>PS1=<span class="hljs-string">&quot;[\u@\[\e[34m\][运维]\[\e[m\]\h \w]\\$ &quot;</span><br>PS1=<span class="hljs-string">&quot;[\u@\[\e[35m\][开发]\[\e[m\]\h \w]\\$ &quot;</span><br><br><span class="hljs-built_in">source</span> /etc/profile.d/ps1.sh<br></code></pre></td></tr></table></figure><h3 id="登陆提示信息"><a href="#登陆提示信息" class="headerlink" title="登陆提示信息"></a>登陆提示信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># https://www.asciiart.eu/</span><br>vim /etc/motd<br><br>  _   _   _   _   _   _   _  <br> / \ / \ / \ / \ / \ / \ / \ <br>( W | e | l | c | o | m | e )<br> \_/ \_/ \_/ \_/ \_/ \_/ \_/ <br><br><br></code></pre></td></tr></table></figure><h3 id="引用参考"><a href="#引用参考" class="headerlink" title="引用参考"></a>引用参考</h3><ul><li><a href="https://ezprompt.net/">https://ezprompt.net/</a></li><li><a href="https://www.asciiart.eu/">https://www.asciiart.eu/</a></li><li><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS1</tag>
      
      <tag>Shell</tag>
      
      <tag>Bash</tag>
      
      <tag>Motd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>致我的2012</title>
    <link href="/2012/12/31/for-my2012/"/>
    <url>/2012/12/31/for-my2012/</url>
    
    <content type="html"><![CDATA[<p>那些回顾2012，展望2013的话，留给席主习，理总李去说吧！</p><p>开始，应该是从2月11日开始的，有火车票为证；<br>学生生涯的真正结束，应该是在2月27日，有汽车票为证；<br>职员生涯的艰难开始，应该是在3月16日，有工资条为证；<br>结束，2012的结束，毋庸置疑的今天，时间为证。</p><span id="more"></span><p>开始的第一站，当然还是学校。<br>呼吸寝室的各种“味道”；<br>办理学校的各种手续；<br>依恋基友的各种难舍；<br> 享受学校最后的温暖。</p><p>找工作的那段时间是最艰难的。<br>起初是和很多人住很廉价的旅馆，不大的床竟然能睡3个男人。<br>在所难免的被老板发现，……也就当然，时日不多。<br>找了个“难民营”，不夸张的说，拉登当初如果逃那儿，<br>也不至于被爆头—-一个被拆迁的只剩下一栋房子矗在那里，<br>墙上到处写着“谁要拆我房，我就………………”很显然“钉子户”。<br>还好有水、有点、有老鼠。<br>初春三月，重庆的天气还是有那么一点小冷，晚上冷的蜷成一团的时候，<br> 老鼠们还出来幸灾乐祸。</p><p>找工作难，找好工作更难。<br>要你的，你不想去；想去的，人不要你。<br>好不容易找个我想去，人家也要我的，第一天上班就被外派到区县（黔江：一个三面环山，倍儿压抑的区），一待就是四十多天。<br>由于刚开始经验的匮乏，使得工作压力很大。<br>不过还好的是吃遍了黔江各地特色风味，足迹踏遍了黔江的各个乡镇（有些地方一辈子可能就去一次）。</p><p>最后的工作性质“你要明白你的身份，就一打杂的”，本少怎能忍受你这般羞辱，毅然决然的离开，至从事现在的工作。</p><p>（……因当下工作尚未结束，所以，不加以任何评述，以待后续……）</p><p>从5月10日起，住进这里，认识的男男女女，老老少少，各个行业之人，都将成为鄙人毕生之财富。吾曾有言“日租公寓，<br> 一抹江湖情”实乃贴切之至也！江湖之快乐，岂非尔等世外之人真知耳？快哉！乐哉！</p><p>2012后半载的快乐是以数月之积苦为付出的，就像IMBA成就“狗急跳墙”，亦如佛家之言“苦尽甘来”。</p><p>2012，我22，真是好2好2，哈哈哈哈！！！！！！</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2012</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>写给那些女生</title>
    <link href="/2012/06/14/for-the-girl/"/>
    <url>/2012/06/14/for-the-girl/</url>
    
    <content type="html"><![CDATA[<p>人，总是在快乐的时候<br>忘记时间<br>不知道是哪一天，她们来了<br>不知不觉的走进了我平淡无奇的生活</p><span id="more"></span><p>作为一个计算机专业科班出身的我<br>对SOHO网络还是小有手段的<br>于是，与她们成功的搭讪<br>此后，本为路人甲与乙的我们<br>便“一发不可收拾”</p><p>……<br>聊天<br>……<br>吃饭<br>……<br>打球<br>……<br>等等等等</p><p>今天，她们走了<br>像她们一如既往的来<br>只是，带走的……？？？<br>太多太多……</p><p>十天，<br>十天的时间太长<br>长到足以让你厌恶一个人<br>十天的时间太短<br>短到让你无法了解真实的彼此</p><p>还有，<br>这段时间我真的很快乐<br>我会<br>把这段时间放在我记忆<br>最深处的</p><hr><p>由于感冒，思絮飘零，草草写下此数言，一来作为对几位姑娘的留恋，二来记录下这段快乐的时光，仅此而已。<br> ———2012.6.14于办公室</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2012</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大学，梦起航</title>
    <link href="/2012/05/26/the-university-the-dream/"/>
    <url>/2012/05/26/the-university-the-dream/</url>
    
    <content type="html"><![CDATA[<h3 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面"></a>写在最前面</h3><p>开头。这是真正的开头。写什么？怎么写？第一章，第一自然段，第一句话，第一个字，一切都是神圣的，似乎是一个生死存亡的</p><p>问题而令人难以选择，令人战战兢兢。</p><span id="more"></span><p>……</p><p>现在，平静地坐下来。</p><p>于是，顺利地开始了。</p><p>———路遥《早晨从中午开始》</p><p>一九七五年二、三月间，一个平平常常的日子，细蒙蒙的雨丝夹着一星半点的雪花，正纷纷淋淋地向大地飘洒着。时令已快到惊蛰</p><p>，雪当然再不会存留，往往还没等落地，就已经消失得无踪无影了。黄土高原严寒而漫长的冬天看来就要过去，但那真正温暖的春</p><p>天还远远地没有到来。</p><p>———路遥《平凡的世界》</p><h3 id="2334"><a href="#2334" class="headerlink" title="2334"></a>2334</h3><p>我不知道它为什么会顺序排列<br>也不知道它为什么会中间重复<br>总之</p><p>我牢牢的记住了这个数字———一列绿皮车的车次</p><p>那是我第一次坐火车</p><p>那是我第一次离家那么远</p><p>那是我第一次上大学</p><h3 id="20080915"><a href="#20080915" class="headerlink" title="20080915"></a>20080915</h3><p>不知道什么原因<br>我对这个时间记忆犹为清晰<br>所以<br>也就将它定义为大学开始的时间<br>其实<br>实际时间应该是要早于这个时间<br> 但，好像又忘却了</p><h3 id="608"><a href="#608" class="headerlink" title="608"></a>608</h3><p>一个多么好的数字<br>0 . 开始<br>6 . 顺利<br>8 . 发展</p><p>这是我大学第一间寝室号码<br>在那拥挤的空间里<br> 我开始慢慢习惯9分月重庆那特有的潮热的天气</p><h3 id="军训"><a href="#军训" class="headerlink" title="军训"></a>军训</h3><p>大学，第一堂课“军训”</p><p>大家都有同样的装扮<br>同样的狼狈———汗流浃背<br>分不出美女与帅哥<br>所以<br>你想提前下手似乎是不可能的</p><p>然而，对于第一堂课，我是很惭愧的，出于某种原因，没有参加。<br>但是，军训场地的氛围还是感受过的。</p><h3 id="大一"><a href="#大一" class="headerlink" title="大一"></a>大一</h3><p>还算乖巧的我们还算听话，每次上课宽敞的教室多少有点燥热。<br> 至于课程嘛！也就那不痛不痒的《近现代史纲要》、《马哲》等等之类的。</p><p>那会儿寝室的电脑寥寥无几。<br>所以，活动时间还是有的。<br>社团、协会，偶尔上个课，开个会什么的，还是挺看重的。<br> 至于，后来嘛！呵呵……</p><p>那一年，是最难熬的。<br>语言，饮食，环境，甚至文化。<br> 都需要去习惯。</p><p>那时的寝室站在阳台上就能看到高速公路。每次看到呼啸而过的大巴，一种家的思念，油然而生，涌上心头，久久不能平复。</p><p>那一年，我很傻。</p><h3 id="大二"><a href="#大二" class="headerlink" title="大二"></a>大二</h3><p>我们聚集了一帮子“死党”，有个伟大的代号“306”。</p><p>最安逸的时光是在熄灯之后的半把个小时里。</p><p>我们最高尚的话题是“谈谈中国近五十年的发展”；<br> 最低俗的话题是“关于辣椒皮皮的种种”；</p><p>最MAN的话题是“游历金庸武侠的画卷”；<br> 最八卦的话题是“仓老师、凤姐之流的”。</p><p>那一年<br> 我微弱的尝试了一下“爱情”的味道，苦涩与美好交织；</p><p>那一年<br>我们换了辅导员。那天，我写道“多好的阳光！突然，换辅导员了。（晴天霹雳） 期待吧！…”；</p><p>那一年<br>我参加了计算机技术与软件专业技术资格(水平)考试———网络工程师（中级）考试。没过，差得很远……</p><p>那一年，很复杂。</p><h3 id="大三"><a href="#大三" class="headerlink" title="大三"></a>大三</h3><p>有了那样一群“死党”的陪伴，时间恍惚，都似乎忘记了大三是怎么开始的。<br>噢！对了，我们的代号换了“209”，这可以促使一下记忆。</p><p>我们继续保持着大二的优良作风，睡前探讨半小时。</p><p>紧要的不紧要的，<br>有关的无关的，<br>天上的人家的，<br>过去的将来的。</p><p>那一年<br>我们有一个神奇的老师“从A到Z，二十四个英文字母中……”<br>我百思不得其解。敢问老师，那两个字母是S和B吗？</p><p>那一年<br>我又一次参加了计算机技术与软件专业技术资格(水平)考试———网络工程师（中级）考试。<br>不出意料的通过还是让我HI了那么一阵子的。</p><p>就这样沉浸在胜利的快乐中，度过了那一年。</p><p>那一年，很快乐。</p><h3 id="大四"><a href="#大四" class="headerlink" title="大四"></a>大四</h3><p>由于某种原因<br>我差点脱离了我的组织“124”<br>不过<br>经过殊死的挣扎，我还是以“无尚的崇高”回归了组织。<br> 再次的“回归”让我的压力更大，更加迷茫。</p><p>那时间也是最宅的，一日“两餐”几乎都是由“基友”代劳的。<br>DOTA，DOTA，依然DOTA。<br> 似乎，也只有在游戏的厮杀中得以解脱，实现忘我。</p><p>然而，也不是什么都没做。<br> 但是，现在看来，当时的想法、做法都是那么盲目。</p><p>那一年，很短暂。</p><p>那一年，很迷茫。</p><h3 id="本初"><a href="#本初" class="headerlink" title="本初"></a>本初</h3><p>大学目标有四“毕业证，职业资格认证，英语，女友”。<br> 大学时日已尽，目标对半实现，实感惭愧。</p><p>如此的只言片语只能是记忆的片段。</p><p>有此想法，已有许久。<br>今日，<br>突发感想，迫不及待，写下此篇，以励日后。</p><p>———— 2012年5月26日于重庆·歇台子</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>“这第一碗酒，朕要敬给太皇太后孝庄，敬给列祖列宗的在天之灵。朕八岁丧父，九岁丧母，是孝庄太后带着朕，冲破千难险阻，</p><p>才有今天的大清盛世!孝庄太后，朕想你啊。”</p><p>“还有这第二碗酒，朕要敬给列位臣工，敬给天下子民，敬给今天赴宴的 老同年们!六十年来，是你们辅佐朕，保国平安，你们俯</p><p>首农桑，致使大清的百业兴旺。君、臣、民，三者同德呀！没有你们，记着便没有今日的大清。朕在这儿谢谢你们了。”</p><p>“这第三碗酒啊，朕要敬给朕的死敌们。鳌拜，吴三桂，嘿！郑经，噶尔丹，噢，还有那个朱三太子。他们都是英雄豪杰啊，他们</p><p>造就了朕!他们逼着朕立下了这丰功伟业。朕恨他们，也敬他们。可惜呀，他们都死了，朕寂莫啊!……朕不祝他们死的安宁，祝</p><p>他们，来生再世再与朕为敌吧！”</p><p>———二月河《康熙王朝》</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2012</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
